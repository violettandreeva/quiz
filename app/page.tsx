"use client"

import { useState, useEffect } from "react"
import * as React from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Heart, Leaf, Users, Clock, Shield, Gift, CheckCircle2, Lock, ShieldCheck, Check, HeartPulse, TrendingUp, ThumbsUp, BookOpen, CalendarCheck, Lightbulb, Target, Sparkles, MessageSquare, Loader2, Edit3, Timer, Mail, ClipboardCheck, Flame } from "lucide-react"
import Image from "next/image"
import { IMaskInput } from 'react-imask';

function QuizHeader() {
  return (
    // –≠—Ç–æ—Ç div —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –º–µ–Ω—å—à–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –≤—Å—ë –ø–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é
    // py-2 -> –º–∞–ª–µ–Ω—å–∫–∏–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É/—Å–Ω–∏–∑—É (padding-top –∏ padding-bottom)
    // px-4 -> –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –ø–æ –±–æ–∫–∞–º, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –ø—Ä–∏–ª–∏–ø–∞–ª –∫ –∫—Ä–∞—é —ç–∫—Ä–∞–Ω–∞
    <div className="py-2 px-4">
      {/* justify-start -> –ø—Ä–∏–∂–∞—Ç—å –∫ –ª–µ–≤–æ–º—É –∫—Ä–∞—é (—Ä–∞–Ω—å—à–µ –±—ã–ª–æ justify-center)
        gap-1.5 -> —É–º–µ–Ω—å—à–∏–ª–∏ –∑–∞–∑–æ—Ä –º–µ–∂–¥—É –∏–∫–æ–Ω–∫–æ–π –∏ —Ç–µ–∫—Å—Ç–æ–º
      */}
      <div className="flex items-center justify-start gap-1.5">
        {/* w-6 h-6 -> —Å–¥–µ–ª–∞–ª–∏ –∏–∫–æ–Ω–∫—É-—Å–µ—Ä–¥–µ—á–∫–æ –º–µ–Ω—å—à–µ (width –∏ height) */}
        <Heart className="w-6 h-6 text-green-600" />
        {/* text-xl -> —Å–¥–µ–ª–∞–ª–∏ —Ç–µ–∫—Å—Ç "NaturalSlim" –º–µ–Ω—å—à–µ (—Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞) */}
        <span className="text-xl font-bold text-gray-800">NaturalSlim</span>
      </div>
    </div>
  );
}

function ScrollFade() {
  return (
    <div
      className="fixed bottom-0 left-0 right-0 h-12 bg-gradient-to-t from-white to-transparent pointer-events-none z-10"
    />
  );
}

// –ü—Ä–µ–≤—å—é 14-–¥–Ω–µ–≤–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —Å –∑–∞–º–∫–æ–º
function PlanPreviewLocked() {
  return (
    <div className="relative mx-auto mb-10 w-full max-w-[560px]">
      {/* –∏–º–∏—Ç–∞—Ü–∏—è —Å—Ç–æ–ø–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
      <div className="absolute inset-0 -z-10 translate-y-4 rounded-2xl bg-white/70 shadow-lg" />
      <div className="absolute inset-0 -z-10 translate-y-2 rounded-2xl bg-white/80 shadow-md" />

      {/* –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω –ø–ª–∞–Ω–∞ */}
      <div className="relative overflow-hidden rounded-2xl border border-gray-200 bg-white shadow">
        {/* –±–µ–π–¥–∂-–∑–∞–º–æ–∫ –ø–æ–≤–µ—Ä—Ö */}
        <div className="absolute left-3 top-3 z-20 flex items-center gap-1 rounded-full bg-gray-800/85 px-2.5 py-1 text-[11px] font-medium text-white">
          <Lock className="h-3.5 w-3.5" />
          <span>–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–æ–≤</span>
        </div>

        <div className="relative p-4 sm:p-5 blur-sm select-none pointer-events-none">
          {/* –º–∏–Ω–∏-–º–µ–Ω—é */}
          <div className="mb-4 flex gap-2">
            <span className="rounded-full bg-emerald-50 px-3 py-1 text-xs font-medium text-emerald-700">
              –ü–∏—Ç–∞–Ω–∏–µ
            </span>
            <span className="rounded-full bg-sky-50 px-3 py-1 text-xs font-medium text-sky-700">
              –î–≤–∏–∂–µ–Ω–∏–µ
            </span>
            <span className="rounded-full bg-violet-50 px-3 py-1 text-xs font-medium text-violet-700">
              –°–æ–Ω
            </span>
          </div>

          {/* —á–µ–∫-–ª–∏—Å—Ç */}
          <div className="mb-3 text-[13px] font-semibold text-gray-800">–ß–µ–∫-–ª–∏—Å—Ç</div>
          <div className="space-y-2">
            {[
              "–ó–∞–≤—Ç—Ä–∞–∫: 20‚Äì30 –≥ –±–µ–ª–∫–∞ (–æ–º–ª–µ—Ç/–≥—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç)",
              "10‚Äì15 –º–∏–Ω—É—Ç –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ—Å–ª–µ –æ–±–µ–¥–∞",
              "–°–æ–Ω: —Ü–µ–ª—å 7‚Äì8 —á–∞—Å–æ–≤, –±–µ–∑ –≥–∞–¥–∂–µ—Ç–æ–≤ –∑–∞ 60 –º–∏–Ω", // <-- –í–û–¢ –≠–¢–û–¢ –ü–£–ù–ö–¢ –ú–´ –í–ï–†–ù–£–õ–ò
            ].map((t, i) => (
              <div key={i} className="flex items-start gap-2 rounded-lg border border-gray-100 bg-gray-50 p-3">
                <CheckCircle2 className="h-4 w-4 text-gray-400" />
                <span className="text-[13px] text-gray-700">{t}</span>
              </div>
            ))}
          </div>

          {/* –ë–õ–û–ö ¬´–°–ï–ì–û–î–ù–Ø: 3 –®–ê–ì–ê¬ª –ü–û-–ü–†–ï–ñ–ù–ï–ú–£ –£–î–ê–õ–Å–ù */}

        </div>

        {/* –ª—ë–≥–∫–∞—è ¬´–≤—É–∞–ª—å¬ª –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –∑–∞–º–∫–∞ */}
        <div className="pointer-events-none absolute inset-0 bg-white/20" />
      </div>
    </div>
  )
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ "–ø—É—à" —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function MobileInsightPush({
  insightData,
  onConfirm,
  isVisible,
}: {
  insightData: { title: string; solution: string };
  onConfirm: () => void;
  isVisible: boolean;
}) {
  return (
    // üëá –ù–û–í–´–ô –ë–õ–û–ö: –ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω —Å —Ä–∞–∑–º—ã—Ç–∏–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
    <div
      className={`
        fixed inset-0 z-50 flex items-end justify-center p-4
        transition-opacity duration-300 ease-in-out block sm:hidden
        ${isVisible ? "opacity-100" : "opacity-0 pointer-events-none"}
      `}
      style={{ backgroundColor: "rgba(0, 0, 0, 0.2)" }} // –£–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ —Å—Ç–∏–ª—å
    >
      {/* üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –°–∞–º–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–ø–µ—Ä—å —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –∏ –Ω–æ–≤–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
      <div
        className={`
          w-full rounded-2xl shadow-2xl border border-gray-200/50
          bg-gradient-to-br from-green-50 to-white p-4
          transition-all duration-300 ease-in-out transform
          ${isVisible ? "translate-y-0" : "translate-y-12"}
        `}
        style={{ backdropFilter: "blur(12px)", WebkitBackdropFilter: "blur(12px)" }} // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º—ã—Ç–∏–µ —Ñ–æ–Ω–∞
      >
        <div className="flex items-start gap-3">
          <div className="bg-green-100 p-2 rounded-full ring-4 ring-white">
            <Lightbulb className="w-5 h-5 text-green-600" />
          </div>
          {/* üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–∏–ª–∏ min-w-0 –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ */}
          <div className="flex-1 min-w-0">
            <h4 className="font-bold text-gray-800 break-words">{insightData.title}</h4>
            <p className="text-sm text-gray-600 mt-1 mb-4 break-words">{insightData.solution}</p>
            <Button
              onClick={onConfirm}
              size="sm"
              className="w-full rounded-full bg-green-600 hover:bg-green-700 text-white py-3 font-semibold text-sm shadow-md"
            >
              <span className="flex items-center justify-center">
                <CheckCircle2 className="w-4 h-4 mr-2" />
                <span>–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π –ø–ª–∞–Ω</span>
              </span>
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}

/* ----------  LoadingPage.tsx (local component) ---------- */
interface LoadingPageProps {
  onComplete: () => void
}

// --- –ù–ê–ß–ê–õ–û: –ù–û–í–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –î–õ–Ø –ü–û–õ–ï–ô –° –ö–ù–û–ü–ö–ê–ú–ò +/- ---
// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø—ã –ø—Ä–æ–ø—Å–æ–≤: unit –∏ tooltipText –£–î–ê–õ–ï–ù–´
interface NumericInputWithControlsProps {
  label: string;
  value: number | undefined;
  onChange: (value: number | undefined) => void;
  onBlur: () => void;
  min: number;
  max: number;
  inputRef?: React.RefObject<HTMLInputElement>;
  onEnterPress?: () => void;
}

function NumericInputWithControls({
  label,
  value,
  onChange,
  onBlur,
  min,
  max,
  inputRef,
  onEnterPress,
}: NumericInputWithControlsProps) {

  const onlyDigits = (s: string) => s.replace(/\D/g, "");

  const handleManualChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const digits = onlyDigits(e.target.value);
    onChange(digits ? parseInt(digits, 10) : undefined);
  };

  const stepValue = (step: number) => {
    const currentValue = value ?? (step > 0 ? min - 1 : max + 1);
    let newValue = currentValue + step;
    if (newValue < min) newValue = min;
    if (newValue > max) newValue = max;
    onChange(newValue);
  };

  const isValid = typeof value === 'number' && value >= min && value <= max;
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –ø–æ–ª–µ "—Ç—Ä–æ–Ω—É—Ç–æ", —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É —Å—Ä–∞–∑—É
  const wasTouched = onBlur && (value !== undefined);

  return (
    <div>
      {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: Label —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ–π, –±–µ–∑ –∏–∫–æ–Ω–∫–∏ */}
      <label className="block text-sm font-medium text-gray-700 mb-2">
        {label}
      </label>

      <div className={`
        flex items-center w-full 
        border rounded-md shadow-sm transition-all
        ${!isValid && wasTouched
          ? "border-red-500 ring-1 ring-red-500"
          : "border-gray-300 focus-within:border-green-500 focus-within:ring-1 focus-within:ring-green-500"
        }
      `}>
        <button
          type="button"
          onClick={() => stepValue(-1)}
          className="px-3 text-gray-500 hover:text-green-600 focus:outline-none"
          aria-label="–£–º–µ–Ω—å—à–∏—Ç—å"
        >
          <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 12H4" /></svg>
        </button>

        {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: Input —Ç–µ–ø–µ—Ä—å –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É, –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –¥–ª—è —é–Ω–∏—Ç–æ–≤ */}
        <input
          ref={inputRef}
          type="text"
          inputMode="numeric"
          pattern="[0-9]*"
          value={value ?? ""}
          onChange={handleManualChange}
          onBlur={onBlur}
          onKeyDown={(e) => {
            if (["e", "E", "+", "-", ".", " "].includes(e.key)) e.preventDefault();
            if (e.key === 'Enter' && onEnterPress) {
              e.preventDefault();
              onEnterPress();
            }
          }}
          aria-invalid={!isValid}
          className="w-full text-center bg-transparent border-none focus:ring-0 focus:outline-none py-3 text-base"
        />

        <button
          type="button"
          onClick={() => stepValue(1)}
          className="px-3 text-gray-500 hover:text-green-600 focus:outline-none"
          aria-label="–£–≤–µ–ª–∏—á–∏—Ç—å"
        >
          <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" /></svg>
        </button>
      </div>
      {!isValid && wasTouched && (
        <p className="mt-1 text-xs text-red-600">–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç {min} –¥–æ {max}.</p>
      )}
    </div>
  );
}

// --- –ö–û–ù–ï–¶: –ù–û–í–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢ ---

const StickyCta = ({ isVisible, variant = 'full' }: { isVisible: boolean, variant?: 'full' | 'simplified' }) => {
  if (!isVisible) return null;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–∞
  const mainText = variant === 'full'
    ? "–í–∞—à –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç:"
    : "–í–∞—à –∑–∞–∫–∞–∑:";

  const subText = variant === 'full'
    ? "–ö—É—Ä—Å –∫–∞–ø—Å—É–ª + –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è + –ü–∞–º—è—Ç–∫–∞"
    : "–ö—É—Ä—Å –∫–∞–ø—Å—É–ª —Å–æ —Å–∫–∏–¥–∫–æ–π 50%";

  return (
    <div className="fixed bottom-0 left-0 right-0 z-50 p-4 bg-white/80 backdrop-blur-sm border-t border-gray-200 animate-slide-up">
      <div className="max-w-4xl mx-auto flex items-center justify-between gap-3">
        <div className="text-sm min-w-0">
          <p className="font-semibold text-gray-800">{mainText}</p>
          <p className="text-xs text-gray-600">{subText}</p>
        </div>
        <a
          href="#order-form"
          className="flex-shrink-0 bg-green-600 hover:bg-green-700 text-white rounded-full px-4 py-2 text-sm font-semibold shadow-lg text-center whitespace-nowrap"
        >
          –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞ 99 PEN
        </a>
      </div>
    </div>
  );
};

function LoadingPage({ onComplete }: LoadingPageProps) {
  const steps = [
    "–ò–∑—É—á–∞–µ–º —Å–∞–π—Ç—ã (1/53)",
    "–°–º–æ—Ç—Ä–∏–º –æ—Ç–∑—ã–≤—ã",
    "–ò—â–µ–º –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã",
    "–ò—â–µ–º –ª—É—á—à—É—é —Ü–µ–Ω—É",
    "–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏",
  ]
  const [activeStep, setActiveStep] = React.useState(0)
  const [completed, setCompleted] = React.useState<boolean[]>(Array(steps.length).fill(false))
  const allComplete = completed.every(Boolean)

  const [siteCount, setSiteCount] = React.useState(1);

  React.useEffect(() => {
    let counterInterval: NodeJS.Timeout;

    if (activeStep === 0 && !completed[0]) {
      counterInterval = setInterval(() => {
        setSiteCount(prevCount => {
          if (prevCount >= 53) {
            clearInterval(counterInterval);
            return 53;
          }
          return prevCount + 1;
        });
      }, 40);
    }

    return () => clearInterval(counterInterval);
  }, [activeStep, completed]);


  React.useEffect(() => {
    if (allComplete) {
      const timeout = setTimeout(onComplete, 1500)
      return () => clearTimeout(timeout)
    }

    const id = setTimeout(() => {
      setCompleted((prev) => {
        const next = [...prev]
        next[activeStep] = true
        return next
      })
      setActiveStep((prev) => Math.min(prev + 1, steps.length - 1))
    }, 1200)

    return () => clearTimeout(id)
  }, [activeStep, allComplete, onComplete, steps.length])

  return (
    <div
      className="min-h-screen relative overflow-hidden"
      style={{ background: "linear-gradient(to bottom, #f7fdf9, #fffdf5)" }}
    >
      <div className="absolute inset-0 opacity-10 pointer-events-none">
        {[...Array(12)].map((_, i) => (
          <div
            key={i}
            className="absolute w-2 h-2 bg-green-400 rounded-full animate-pulse"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
              animationDelay: `${Math.random() * 20}s`,
              animationDuration: "20s",
            }}
          />
        ))}
      </div>
      <div className="absolute top-0 left-0 right-0">
        <QuizHeader />
      </div>
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="w-full max-w-sm bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg p-6 sm:p-8">
          <div className="flex items-center gap-3 mb-5 justify-center">
            <div
              className="w-8 h-8 border-[3px] border-green-600 border-t-transparent rounded-full animate-spin"
              style={{ animationDuration: "1.2s" }}
            />
            <h3 className="text-lg font-semibold text-gray-800">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã...</h3>
          </div>
          <div className="space-y-3 mb-6">
            {steps.map((text, idx) => {
              let displayText = text;
              if (idx === 0) {
                displayText = `–ò–∑—É—á–∞–µ–º —Å–∞–π—Ç—ã (${siteCount}/53)`;
              }

              return (
                <div
                  key={idx}
                  className={`flex items-center gap-3 transition-all duration-500 ${idx <= activeStep ? "opacity-100 translate-y-0" : "opacity-0 translate-y-2"
                    }`}
                  style={{ transitionDelay: `${idx * 100}ms` }}
                >
                  {completed[idx] ? (
                    <div className="w-5 h-5 bg-green-600 rounded-full flex items-center justify-center">
                      <svg className="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path
                          fillRule="evenodd"
                          d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                          clipRule="evenodd"
                        />
                      </svg>
                    </div>
                  ) : (
                    <div
                      className={`w-5 h-5 rounded-full border-2 ${idx === activeStep ? "border-green-600" : "border-gray-300"
                        }`}
                    />
                  )}
                  <span
                    className={`text-sm font-medium transition-colors duration-1000 ${idx === activeStep && !completed[idx]
                      ? "text-green-600 animate-pulse"
                      : completed[idx]
                        ? "text-gray-700"
                        : "text-gray-500"
                      }`}
                  >
                    {displayText}
                  </span>
                </div>
              )
            })}
          </div>

          {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–∏–ª–∏ —Ç–∏–∑–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
          <div className="mt-6 text-center text-sm text-gray-600 bg-green-50/70 p-3 rounded-lg border border-green-100">
            <p className="font-semibold text-gray-800">–ù–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∏—Ç–µ:</p>
            <p className="text-xs mt-1">–ö–∞–ø—Å—É–ª—ã —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏, –ø—Ä–∏–º–µ—Ä –¥–Ω—è, —á–µ–∫‚Äë–ª–∏—Å—Ç –Ω–∞ 14 –¥–Ω–µ–π, 3 —à–∞–≥–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç</p>
          </div>

          <p className="text-xs text-gray-500 text-center mt-6">–≠—Ç–æ –∑–∞–π–º—ë—Ç –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã‚Ä¶</p>
        </div>
      </div>
    </div>
  )
}

interface QuizAnswer {
  questionId: string
  answer: string
  category: "eating" | "lifestyle" | "attempts" | "goal"
}

interface Question {
  id: string
  category: "eating" | "lifestyle" | "attempts" | "goal"
  question: string
  options: { text: string; emoji: string }[]
}

const quizQuestions: Question[] = [
  // Eating Section (3 questions)
  {
    id: "eating-1",
    category: "eating",
    question: "–í—ã –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å –≤ 9:00 –≤ –≤—ã—Ö–æ–¥–Ω–æ–π. –ß—Ç–æ –æ–±—ã—á–Ω–æ –µ–¥–∏—Ç–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫?",
    options: [
      { text: "–Ø–π—Ü–∞ —Å –∂–∞—Ä–µ–Ω—ã–º–∏ –∫–æ–ª–±–∞—Å–∫–∞–º–∏, —Ç–∞–º–∞–ª–µ –∏–ª–∏ –ø–∞—Ä–∞ –±—É–ª–æ—á–µ–∫ —Å –∫–æ—Ñ–µ —Å —Å–∞—Ö–∞—Ä–æ–º", emoji: "üç≥" },
      { text: "–¢–æ—Ä—Ç–∏–ª—å–∏ –∏–ª–∏ –ª–µ–ø–µ—à–∫–∏ —Å –Ω–∞—á–∏–Ω–∫–æ–π: —Å–ª–∞–¥–∫–æ–π –∫—É–∫—É—Ä—É–∑–æ–π, —Å—ã—Ä–æ–º –∏ –∞–≤–æ–∫–∞–¥–æ", emoji: "üåØ" },
      { text: "–ö–∞—à–∞ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –¥–æ–±–∞–≤–∫–∞–º–∏", emoji: "ü•£" },
      { text: "–ù–∏—á–µ–≥–æ ‚Äì —Å —É—Ç—Ä–∞ –Ω–µ —Ö–æ—á–µ—Ç—Å—è –µ—Å—Ç—å", emoji: "üò¥" },
    ],
  },
  {
    id: "eating-2",
    category: "eating",
    question: "–£ –≤–∞—Å –æ–±–µ–¥ –Ω–∞ —Ä–∞–±–æ—Ç–µ, –∫–∞–∫—É—é –µ–¥—É –≤—ã –≤–∑—è–ª–∏ –∏–∑ –¥–æ–º–∞ –∏–ª–∏ –∫—É–ø–∏–ª–∏?",
    options: [
      { text: "–ñ–∞—Ä–µ–Ω—ã–π —Ä–∏—Å –æ–≤–æ—â–∞–º–∏, –∫–∞—Ä—Ç–æ—à–∫–æ–π –∏ –º—è—Å–æ–º", emoji: "üçõ" },
      { text: "–°–µ–Ω–¥–≤–∏—á —Å –∫–æ–ª–±–∞—Å–∫–∞–º–∏ –∏–ª–∏ —Å–≤–∏–Ω–∏–Ω–æ–π, –ø–∞—Ä—É —ç–º–ø–∞–Ω–∞–¥ –∏ –≥–∞–∑–∏—Ä–æ–≤–∫–∞", emoji: "ü•™" },
      { text: "–°–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π –≥—Ä–∏–ª—å, –∫–∏–Ω–æ–∞ –∏ –∑–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–ª–∏–≤–∫–æ–≤—ã–º –º–∞—Å–ª–æ–º", emoji: "ü•ó" },
      { text: "–ù–µ–±–æ–ª—å—à–æ–π –ø–µ—Ä–µ–∫—É—Å, –∫—Ä–µ–∫–µ—Ä—ã, —Å–Ω–µ–∫–∏", emoji: "üç™" },
    ],
  },
  {
    id: "eating-3",
    category: "eating",
    question: "–ü–æ–¥—Ä—É–∂–∫–∞ –ø–æ–∑–≤–∞–ª–∞ –≤–∞—Å –Ω–∞ –∫–æ—Ñ–µ –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã, —á—Ç–æ –∑–∞–∫–∞–∂–µ—Ç–µ?",
    options: [
      { text: "–ë–æ–ª—å—à–æ–π –∫–∞–ø—É—á–∏–Ω–æ —Å —Å–∏—Ä–æ–ø–æ–º, —Ç–æ—Ä—Ç–∏–∫ –∏–ª–∏ –ø–∏—Ä–æ–∂–Ω–æ–µ", emoji: "‚òï" },
      { text: "–ö–æ–ª–∞ –∏–ª–∏ —á–∏—á–∞ –∏ –ø–∞—Ä—É –ø–µ—á–µ–Ω–µ–∫", emoji: "ü•§" },
      { text: "–ß–∞–π –∏–ª–∏ —á–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ –±–µ–∑ —Å–∞—Ö–∞—Ä–∞", emoji: "üçµ" },
      { text: "–ù–∏—á–µ–≥–æ, –Ω–µ —Ö–æ—á—É –æ–ø—è—Ç—å —Å—Ä—ã–≤–∞—Ç—å—Å—è, –Ω–æ –ø–æ—Ç–æ–º —Å—ä–µ–º —á—Ç–æ-—Ç–æ –¥–æ–º–∞", emoji: "üö´" },
    ],
  },
  // Lifestyle Section (4 questions)
  {
    id: "lifestyle-1",
    category: "lifestyle",
    question: "–ö–∞–∫ –ª–∏—à–Ω–∏–π –≤–µ—Å —É–∂–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ?",
    options: [
      { text: "–£–∂–µ –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑—ã: —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω, –¥–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–µ–¥–¥–∏–∞–±–µ—Ç", emoji: "üö®" },
      { text: "–ß–∞—Å—Ç–æ –±–æ–ª–∏—Ç —Å–ø–∏–Ω–∞/–∫–æ–ª–µ–Ω–∏, –±—ã–≤–∞—é—Ç –æ—Ç–µ–∫–∏", emoji: "üò∞" },
      { text: "–ß—É–≤—Å—Ç–≤—É—é –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –æ–¥—ã—à–∫—É –ø—Ä–∏ —Ö–æ–¥—å–±–µ", emoji: "üòÆ‚Äçüí®" },
      { text: "–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ", emoji: "‚úÖ" },
    ],
  },
  {
    id: "lifestyle-2",
    category: "lifestyle",
    question: "–¢—è–∂–µ–ª—ã–π –¥–µ–Ω—å: —É—Å—Ç–∞–ª–æ—Å—Ç—å, —Å—Ç—Ä–µ—Å—Å. –ö–∞–∫ –≤—ã —Ä–∞—Å—Å–ª–∞–±–ª—è–µ—Ç–µ—Å—å –≤–µ—á–µ—Ä–æ–º?",
    options: [
      { text: "–ó–∞–∫–∞–∑—ã–≤–∞—é —Å—ã—Ç–Ω—ã–π —É–∂–∏–Ω (–∫—É—Ä–∏—Ü—É, –ø–∏—Ü—Ü—É) –∏ –¥–µ—Å–µ—Ä—Ç", emoji: "üçó" },
      { text: "–°–º–æ—Ç—Ä—é –¢–í —Å–æ —Å–ª–∞–¥–æ—Å—Ç—è–º–∏ –∏–ª–∏ —Å–Ω–µ–∫–∞–º–∏", emoji: "üì∫" },
      { text: "–†–∞–∑–¥—Ä–∞–∂–∞—é—Å—å –Ω–∞ –≤—Å–µ—Ö, –∞ –ø–æ—Ç–æ–º —Å—ä–µ–¥–∞—é –ª–∏—à–Ω–µ–≥–æ", emoji: "üò§" },
      { text: "–ú–Ω–µ —Ç–∞–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –∑–Ω–∞–∫–æ–º–∞", emoji: "ü§∑‚Äç‚ôÄÔ∏è" },
    ],
  },
  {
    id: "lifestyle-3",
    category: "lifestyle",
    question: "–ö–∞–∫ –æ–±—ã—á–Ω–æ –≤—ã–≥–ª—è–¥–∏—Ç –≤–∞—à —Å–æ–Ω –≤ –±—É–¥–Ω–∏–π –¥–µ–Ω—å?",
    options: [
      { text: "–õ–æ–∂—É—Å—å –æ—á–µ–Ω—å –ø–æ–∑–¥–Ω–æ, –≤—Å—Ç–∞—é –æ—á–µ–Ω—å —Ä–∞–Ω–æ, —Å–Ω–∞ –º–∞–ª–æ", emoji: "üåô" },
      { text: "–°–æ–Ω –ø—Ä–µ—Ä—ã–≤–∏—Å—Ç—ã–π, —á–∞—Å—Ç–æ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å —Ä–∞–∑–±–∏—Ç–æ–π", emoji: "üò¥" },
      { text: "–õ–æ–∂—É—Å—å –ø–æ–∑–¥–Ω–æ, —Å–ø–ª—é –¥–æ –æ–±–µ–¥–∞, –≤–µ—Å—å –¥–µ–Ω—å –≤ —Å–ø–µ—à–∫–µ", emoji: "üò∞" },
      { text: "–°–ø–ª—é –º–∞–ª–æ –∏–∑-–∑–∞ —Ä–∞–±–æ—Ç—ã –∏ –¥–µ–ª, –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–µ–±—è", emoji: "‚è∞" },
    ],
  },
  {
    id: "lifestyle-4",
    category: "lifestyle",
    question: "–ß—Ç–æ –≤–∞–º –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –º–µ—à–∞–µ—Ç –Ω–∞—á–∞—Ç—å –±–æ–ª—å—à–µ –¥–≤–∏–≥–∞—Ç—å—Å—è?",
    options: [
      { text: "–¢—è–∂–µ—Å—Ç—å –≤ –Ω–æ–≥–∞—Ö, –æ—Ç–µ–∫–∏ –∏ –±–æ–ª—å –≤ –ø–æ—è—Å–Ω–∏—Ü–µ", emoji: "ü¶µ" },
      { text: "–ù–µ—Ç —Å–∏–ª –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã –∏ –¥–æ–º–∞—à–Ω–∏—Ö –¥–µ–ª", emoji: "üò¥" },
      { text: "–°—Ç–µ—Å–Ω—è—é—Å—å —Å–≤–æ–µ–π —Ñ–∏–≥—É—Ä—ã –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –æ–¥–µ–∂–¥–µ", emoji: "üòî" },
      { text: "–ò–¥—É –≥—É–ª—è—Ç—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —É—Å—Ç–∞–ª–æ—Å—Ç—å", emoji: "üí™" },
    ],
  },
  // Previous Attempts Section (3 questions)
  {
    id: "attempts-1",
    category: "attempts",
    question: "–í—ã —Ä–µ—à–∏–ª–∏ –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–æ–º–∞. –ß—Ç–æ –æ–±—ã—á–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–∞–ª—å—à–µ?",
    options: [
      { text: "–ù–∞—á–∏–Ω–∞—é, –Ω–æ –±—ã—Å—Ç—Ä–æ –±—Ä–æ—Å–∞—é –∏–∑-–∑–∞ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.", emoji: "üòî" },
      { text: "–ë–æ–ª—å –≤ —Å—É—Å—Ç–∞–≤–∞—Ö –∏–ª–∏ –æ–¥—ã—à–∫–∞ –º–µ—à–∞—é—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.", emoji: "üò∞" },
      { text: "–û—Ç–∫–ª–∞–¥—ã–≤–∞—é '–Ω–∞ –∑–∞–≤—Ç—Ä–∞', –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç.", emoji: "üì±" },
      { text: "–°–º–æ–≥—É –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å—Ç–∞–±–∏–ª—å–Ω–æ, –ø–æ–∫–∞ –Ω–µ —É–≤–∏–∂—É –ø–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.", emoji: "üí™" },
    ],
  },
  {
    id: "attempts-2",
    category: "attempts",
    question: "–ö–æ–≥–¥–∞ –≤—ã —Å–∞–¥–∏—Ç–µ—Å—å –Ω–∞ –¥–∏–µ—Ç—É, —á—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ –∏–¥—ë—Ç –Ω–µ —Ç–∞–∫?",
    options: [
      { text: "–°—Ä—ã–≤–∞—é—Å—å –≤ –∫–æ–Ω—Ü–µ —Ç—è–∂–µ–ª–æ–≥–æ –¥–Ω—è, –∞ –ø–æ—Ç–æ–º –≤–∏–Ω—é —Å–µ–±—è.", emoji: "üòî" },
      { text: "–î–µ—Ä–∂—É—Å—å –≤—Å—é –Ω–µ–¥–µ–ª—é, –Ω–æ '–æ—Ç—Ä—ã–≤–∞—é—Å—å' –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö.", emoji: "üçΩÔ∏è" },
      { text: "–¢–µ—Ä—è—é –º–æ—Ç–∏–≤–∞—Ü–∏—é, –µ—Å–ª–∏ –±—ã—Å—Ç—Ä–æ –Ω–µ –≤–∏–∂—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç.", emoji: "ü§∑‚Äç‚ôÄÔ∏è" },
      { text: "–£–¥–µ—Ä–∂–∏–≤–∞—é—Å—å –±–µ–∑ —Å—Ä—ã–≤–æ–≤.", emoji: "üí™" },
    ],
  },
  {
    id: "attempts-3",
    category: "attempts",
    question: "–ß—Ç–æ, –ø–æ-–≤–∞—à–µ–º—É, –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Å–¥–≤–∏–Ω—É—Ç—å—Å—è —Å –º—ë—Ä—Ç–≤–æ–π —Ç–æ—á–∫–∏?",
    options: [
      { text: "–ü—Ä–æ—Å—Ç–æ–µ '–≤–æ–ª—à–µ–±–Ω–æ–µ' —Å—Ä–µ–¥—Å—Ç–≤–æ: –∫–∞–ø—Å—É–ª—ã –∏–ª–∏ –Ω–∞–ø–∏—Ç–æ–∫.", emoji: "üíä" },
      { text: "–ü–æ–Ω—è—Ç–Ω—ã–π –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–æ–∏—Ç—å –≤ –º–æ—é –∂–∏–∑–Ω—å.", emoji: "üìã" },
      { text: "–ó–Ω–∞—é, —á—Ç–æ –¥–µ–ª–∞—Ç—å (–ø–∏—Ç–∞–Ω–∏–µ, —Å–æ–Ω), –Ω–æ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –≤—Å—ë —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å.", emoji: "ü§î" },
      { text: "–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–æ–µ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏.", emoji: "‚ú®" },
    ],
  },
]

const reassuranceMessages: Record<string, Record<string, string>> = {
  "attempts-1": {
    "–ù–∞—á–∏–Ω–∞—é, –Ω–æ –±—ã—Å—Ç—Ä–æ –±—Ä–æ—Å–∞—é –∏–∑-–∑–∞ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.":
      "–≠—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∂–µ–Ω—â–∏–Ω —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å —Ç–µ–º–∏ –∂–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–æ–π–¥–µ—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.",
    "–ë–æ–ª—å –≤ —Å—É—Å—Ç–∞–≤–∞—Ö –∏–ª–∏ –æ–¥—ã—à–∫–∞ –º–µ—à–∞—é—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.":
      "–í–∞—à–µ —Ç–µ–ª–æ –ø–æ–¥–∞–µ—Ç –≤–∞–∂–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã. –ï—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —â–∞–¥—è—â–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –Ω–∞—á–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ –±–µ–∑ –±–æ–ª–∏ –∏ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç–∞.",
    "–û—Ç–∫–ª–∞–¥—ã–≤–∞—é '–Ω–∞ –∑–∞–≤—Ç—Ä–∞', –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç.":
      "–û—Ç–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –∑–∞—â–∏—Ç–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –ø—Å–∏—Ö–∏–∫–∏. –ú—ã –ø–æ–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± –Ω–∞—á–∞—Ç—å –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –∏ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–∏.",
  },
  "attempts-2": {
    "–°—Ä—ã–≤–∞—é—Å—å –≤ –∫–æ–Ω—Ü–µ —Ç—è–∂–µ–ª–æ–≥–æ –¥–Ω—è, –∞ –ø–æ—Ç–æ–º –≤–∏–Ω—é —Å–µ–±—è.":
      "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Å–∏–ª—ã –≤–æ–ª–∏, –∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–µ—Å—Å. –≠—Ç–æ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º.",
    "–î–µ—Ä–∂—É—Å—å –≤—Å—é –Ω–µ–¥–µ–ª—é, –Ω–æ '–æ—Ç—Ä—ã–≤–∞—é—Å—å' –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö.":
      "–¶–∏–∫–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ —Å—Ä—ã–≤–æ–≤ –∑–Ω–∞–∫–æ–º –º–Ω–æ–≥–∏–º. –°–µ–∫—Ä–µ—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –ª—é–±–∏–º—ã–µ –±–ª—é–¥–∞ –Ω–µ —Å—Ç–∞–Ω—É—Ç –∑–∞–ø—Ä–µ—Ç–Ω—ã–º–∏.",
    "–¢–µ—Ä—è—é –º–æ—Ç–∏–≤–∞—Ü–∏—é, –µ—Å–ª–∏ –±—ã—Å—Ç—Ä–æ –Ω–µ –≤–∏–∂—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç.":
      "–ú–æ—Ç–∏–≤–∞—Ü–∏—è —É–≥–∞—Å–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–¥—Ö–æ–¥ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏—á–Ω–æ –≤–∞–º. –í–∞–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–∏—Å—Ç–µ–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ.",
  },
}

const motivationContent: Record<string, { title: string; button: string }> = {
  "–ù–∞–¥–µ–ª–∞ –±—ã –ª—é–±–∏–º–æ–µ –ø–ª–∞—Ç—å–µ, –≤ –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –Ω–µ –≤–ª–µ–∑–∞—é": {
    title: "–í–æ—Ç –∫–∞–∫ —Å–Ω–æ–≤–∞ –Ω–∞–¥–µ—Ç—å –ª—é–±–∏–º–æ–µ –ø–ª–∞—Ç—å–µ, –Ω–µ –∏—Å—Ç—è–∑–∞—è —Å–µ–±—è –¥–∏–µ—Ç–∞–º–∏",
    button: "–î–∞, —è —Ö–æ—á—É —Å–Ω–æ–≤–∞ –Ω–∞–¥–µ—Ç—å —ç—Ç–æ –ø–ª–∞—Ç—å–µ!",
  },
  "–°—Ö–æ–¥–∏–ª–∞ –±—ã –≤ –±–∞—Å—Å–µ–π–Ω –∏–ª–∏ –ø–æ–µ—Ö–∞–ª–∞ –Ω–∞ –ø–ª—è–∂, —á—Ç–æ–±—ã –ø–æ–ø–ª–∞–≤–∞—Ç—å –≤ –±–∏–∫–∏–Ω–∏": {
    title: "–í–æ—Ç –∫–∞–∫ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–æ –Ω–∞ –ø–ª—è–∂–µ —ç—Ç–∏–º –ª–µ—Ç–æ–º",
    button: "–î–∞, —è —Ö–æ—á—É —É–≤–µ—Ä–µ–Ω–Ω–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –≤ –±–∏–∫–∏–Ω–∏!",
  },
  "–ü–æ–∏–≥—Ä–∞–ª–∞ –±—ã —Å –¥–µ—Ç—å–º–∏ –≤ –¥–æ–≥–æ–Ω—è–ª–∫–∏": {
    title: "–í–æ—Ç –∫–∞–∫ —Å–Ω–æ–≤–∞ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å —Å –¥–µ—Ç—å–º–∏, –Ω–µ –¥—É–º–∞—è –æ–± –æ–¥—ã—à–∫–µ",
    button: "–î–∞, —è —Ö–æ—á—É —Å–Ω–æ–≤–∞ –∏–≥—Ä–∞—Ç—å —Å –¥–µ—Ç—å–º–∏!",
  },
  "–í—ã–¥–µ–ª–∏–ª–∞ –±—ã –≤—Ä–µ–º—è –¥–æ—Å—É–≥—É –∏ –æ–±–æ—à–ª–∞ –ª—é–±–∏–º—ã–µ —É–ª–∏—Ü—ã –≥–æ—Ä–æ–¥–∞ –ø–µ—à–∫–æ–º": {
    title: "–í–æ—Ç –∫–∞–∫ –≤–µ—Ä–Ω—É—Ç—å —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è –¥–æ–ª–≥–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫ –∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞",
    button: "–î–∞, —è —Ö–æ—á—É –≤–µ—Ä–Ω—É—Ç—å —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫!",
  },
  "–ù–∞—á–∞–ª–∞ –±—ã –∂–∏—Ç—å –±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω—å—é": {
    title: "–í–æ—Ç –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–¥–æ—Å—Ç—å—é, –∞ –Ω–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ–º",
    button: "–î–∞, —è —Ö–æ—á—É –∂–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω—å—é!",
  },
  "–ù–∞—á–∞–ª–∞ –±—ã –∂–∏—Ç—å": {
    title: "–í–æ—Ç –∫–∞–∫ –Ω–∞—á–∞—Ç—å –∂–∏—Ç—å –ø–æ–ª–Ω–æ–π –∂–∏–∑–Ω—å—é, –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—è –º–µ—á—Ç—ã –Ω–∞ –ø–æ—Ç–æ–º",
    button: "–î–∞, —è —Ö–æ—á—É –Ω–∞—á–∞—Ç—å –∂–∏—Ç—å –ø–æ–ª–Ω–æ–π –∂–∏–∑–Ω—å—é!",
  },
};

const attemptInsights: Record<string, Record<string, { title: string; solution: string }>> = {
  "attempts-1": {
    "–ù–∞—á–∏–Ω–∞—é, –Ω–æ –±—ã—Å—Ç—Ä–æ –±—Ä–æ—Å–∞—é –∏–∑-–∑–∞ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.": {
      title: "–£—Å—Ç–∞–ª–æ—Å—Ç—å ‚Äî –≥–ª–∞–≤–Ω—ã–π –≤—Ä–∞–≥ –º–æ—Ç–∏–≤–∞—Ü–∏–∏.",
      solution: "–ù–∞—à –ø–ª–∞–Ω –Ω–∞—á–Ω–µ—Ç—Å—è —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ —á–µ—Ä–µ–∑ –ø–∏—Ç–∞–Ω–∏–µ, –∞ –Ω–µ —Å –∏–∑–Ω—É—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. –≠—Ç–æ –¥–∞—Å—Ç —Å–∏–ª—ã –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤–ø–µ—Ä–µ–¥.",
    },
    "–ë–æ–ª—å –≤ —Å—É—Å—Ç–∞–≤–∞—Ö –∏–ª–∏ –æ–¥—ã—à–∫–∞ –º–µ—à–∞—é—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.": {
      title: "–ë–æ–ª—å ‚Äî —ç—Ç–æ —Å–∏–≥–Ω–∞–ª —Å—Ç–æ–ø. –ù–∞—á–∏–Ω–∞—Ç—å –Ω—É–∂–Ω–æ –Ω–µ —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.",
      solution: "–°–Ω–∞—á–∞–ª–∞ –º—ã —Å—Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–∏—Ç–∞–Ω–∏–∏, —á—Ç–æ–±—ã —Å–Ω—è—Ç—å –ª–∏—à–Ω—é—é –Ω–∞–≥—Ä—É–∑–∫—É —Å —Å—É—Å—Ç–∞–≤–æ–≤. –≠—Ç–æ —Å–∞–º—ã–π –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å.",
    },
    "–û—Ç–∫–ª–∞–¥—ã–≤–∞—é '–Ω–∞ –∑–∞–≤—Ç—Ä–∞', –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç.": {
      title: "–û—Ç–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –∑–∞—â–∏—Ç–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–µ—Å—Å.",
      solution: "–ú—ã –ø—Ä–µ–¥–ª–æ–∂–∏–º –º–∏–∫—Ä–æ-—à–∞–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç 2-3 –º–∏–Ω—É—Ç—ã –≤ –¥–µ–Ω—å. –≠—Ç–æ —É–±–µ—Ä–µ—Ç —Å—Ç—Ä–∞—Ö –ø–µ—Ä–µ–¥ '–±–æ–ª—å—à–æ–π –∑–∞–¥–∞—á–µ–π' –∏ –ø–æ–º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å.",
    },
  },
  "attempts-2": {
    "–°—Ä—ã–≤–∞—é—Å—å –≤ –∫–æ–Ω—Ü–µ —Ç—è–∂–µ–ª–æ–≥–æ –¥–Ω—è, –∞ –ø–æ—Ç–æ–º –≤–∏–Ω—é —Å–µ–±—è.": {
      title: "–ó–∞–µ–¥–∞–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞ ‚Äî —ç—Ç–æ –Ω–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–æ–ª–∏, –∞ –±–∏–æ—Ö–∏–º–∏—è.",
      solution: "–ü–ª–∞–Ω –ø–æ–º–æ–∂–µ—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∞—Ö–∞—Ä –≤ –∫—Ä–æ–≤–∏. –ö–æ–≥–¥–∞ –Ω–µ—Ç —Ä–µ–∑–∫–∏—Ö —Å–∫–∞—á–∫–æ–≤ –≥–æ–ª–æ–¥–∞, –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—é –≥–æ—Ä–∞–∑–¥–æ –ø—Ä–æ—â–µ.",
    },
    "–î–µ—Ä–∂—É—Å—å –≤—Å—é –Ω–µ–¥–µ–ª—é, –Ω–æ '–æ—Ç—Ä—ã–≤–∞—é—Å—å' –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö.": {
      title: "–¶–∏–∫–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ-—Å—Ä—ã–≤ ‚Äî —Å–∞–º–∞—è —á–∞—Å—Ç–∞—è –ø—Ä–æ–±–ª–µ–º–∞.",
      solution: "–ú—ã –Ω–µ –±—É–¥–µ–º –∑–∞–ø—Ä–µ—â–∞—Ç—å –ª—é–±–∏–º—ã–µ –±–ª—é–¥–∞. –ü–ª–∞–Ω –Ω–∞—É—á–∏—Ç, –∫–∞–∫ –≤–ø–∏—Å—ã–≤–∞—Ç—å –∏—Ö –≤ —Ä–∞—Ü–∏–æ–Ω –±–µ–∑ –≤—Ä–µ–¥–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ —á—É–≤—Å—Ç–≤–∞ –≤–∏–Ω—ã.",
    },
    "–¢–µ—Ä—è—é –º–æ—Ç–∏–≤–∞—Ü–∏—é, –µ—Å–ª–∏ –±—ã—Å—Ç—Ä–æ –Ω–µ –≤–∏–∂—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç.": {
      title: "–ú–æ—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–ø–∞–¥–∞–µ—Ç, –∫–æ–≥–¥–∞ –¥–∏–µ—Ç–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–∫—É—á–Ω–æ–π.",
      solution: "–ù–∞—à –ø–ª–∞–Ω –≤–∫–ª—é—á–∞–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ, –Ω–æ –ø—Ä–æ—Å—Ç—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –∏–∑ –ø—Ä–∏–≤—ã—á–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –í–∞–º –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –∫—É—Ä–∏–Ω—É—é –≥—Ä—É–¥–∫—É –∏ –±—Ä–æ–∫–∫–æ–ª–∏.",
    },
  },
};

const miniQuestions = [
  {
    id: "pregnancy",
    type: "radio",
    title: "Are you pregnant or breastfeeding?",
    options: [
      "No / not planning in the next 6 months",
      "Pregnancy ‚Äî 1st trimester",
      "Pregnancy ‚Äî 2nd‚Äì3rd trimester",
      "Breastfeeding < 6 months",
      "Breastfeeding > 6 months",
    ],
  },
  {
    id: "diet",
    type: "checkbox",
    title: "Which of these describes your diet?",
    options: ["I am vegetarian", "I avoid lactose", "I avoid gluten", "None of the above"],
  },
  {
    id: "meds",
    type: "radio",
    title: "Do you take any regular medication?",
    options: [
      "None",
      "Hormonal contraceptives",
      "Thyroid medication",
      "Antidepressants / anxiolytics",
      "Corticosteroids",
      "Other ‚Äî I'll specify later",
    ],
  },
  {
    id: "menopause",
    type: "radio",
    title: "Are you in menopause?",
    options: ["No", "Perimenopause (symptoms already present)", "Postmenopause (no periods for > 12 months)"],
  },
  {
    id: "conditions",
    type: "checkbox",
    title: "Do you have any medical conditions that can affect weight?",
    options: ["Hypothyroidism", "PCOS", "Prediabetes / type 2 diabetes", "High blood pressure", "None of the above"],
  },
]

interface AnswerStats {
  all: string[]
  counts: Record<"a" | "b" | "c" | "d", number>
  pct: Record<"a" | "b" | "c" | "d", number>
  block1: string[]
  block2: string[]
  block3: string[]
}

const eatingHabitActions = {
  a: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ, –∞ –Ω–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ",
    imageSrc: "/summary/eating-a.jpg",
    habit: "–í—ã —á–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ —Å—ã—Ç–Ω—ã–µ –±–ª—é–¥–∞ ‚Üí —Å–º–µ—Å—Ç–∏–º —Ñ–æ–∫—É—Å –Ω–∞ –±–µ–ª–æ–∫ –∏ –æ–≤–æ—â–∏.",
    goal: "+1 –±–æ–ª—å—à–æ–π –æ–≤–æ—â –∫ –æ–±–µ–¥—É –∏ —É–∂–∏–Ω—É.",
    rationale: "–≠—Ç–æ –¥–∞—Å—Ç —Ç—É –∂–µ —Å—ã—Ç–æ—Å—Ç—å –ø—Ä–∏ –º–µ–Ω—å—à–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∫–∞–ª–æ—Ä–∏–π.",
    promise: "–í –∏—Ç–æ–≥–æ–≤–æ–º –ø–ª–∞–Ω–µ –¥–∞–¥–∏–º 3 –ø—Ä–æ—Å—Ç—ã—Ö —Ä–µ—Ü–µ–ø—Ç–∞ —Å –≤—ã—Å–æ–∫–∏–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –±–µ–ª–∫–∞ –∏ –∫–ª–µ—Ç—á–∞—Ç–∫–∏.",
  },
  b: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ –±–æ—Ä—å–±–µ —Å —Å–∞—Ö–∞—Ä–æ–º",
    imageSrc: "/summary/eating-b.jpg",
    habit: "–ï—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞–∫–∏ —Å–ª–∞–¥–∫–∏–µ ‚Üí –º—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–º —Å–ª–∞–¥–∫–æ–µ –Ω–∞ –ø–µ—Ä–µ–∫—É—Å –ø–æ—Å–ª–µ –æ–±–µ–¥–∞.",
    goal: "1 –ø–æ–ª–µ–∑–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å (—Ñ—Ä—É–∫—Ç/–æ—Ä–µ—Ö–∏/–π–æ–≥—É—Ä—Ç) –µ–∂–µ–¥–Ω–µ–≤–Ω–æ.",
    rationale: "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ä–µ–∑–∫–æ–≥–æ —Å–∫–∞—á–∫–∞ —Å–∞—Ö–∞—Ä–∞ –∏ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –≥–æ–ª–æ–¥–∞.",
    promise: "–ß–µ—Ä–µ–∑ 3 –¥–Ω—è –æ—Ü–µ–Ω–∏–º, –∫–∞–∫ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –≤–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è.",
  },
  c: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ –æ—Ç—Ç–∞—á–∏–≤–∞–Ω–∏–∏ –∑–¥–æ—Ä–æ–≤—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫",
    imageSrc: "/summary/eating-c.jpg",
    habit: "–í—ã —É–∂–µ –ø–∏—Ç–∞–µ—Ç–µ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Üí –¥–æ–±–∞–≤–∏–º –∫–æ–Ω—Ç—Ä–æ–ª—å '—Å–∫—Ä—ã—Ç—ã—Ö' –∫–∞–ª–æ—Ä–∏–π.",
    goal: "–ù–∞—á–∞—Ç—å –∏–∑–º–µ—Ä—è—Ç—å —Å–æ—É—Å—ã/–º–∞—Å–ª–æ –ª–æ–∂–∫–æ–π.",
    rationale: "–ú–µ–ª–∫–∏–µ –ø—Ä–∞–≤–∫–∏ –¥–∞—é—Ç –≤–∏–¥–∏–º—É—é —Ä–∞–∑–Ω–∏—Ü—É –±–µ–∑ –∂—ë—Å—Ç–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.",
    promise: "–í –ø–ª–∞–Ω–µ –ø–æ–∫–∞–∂–µ–º, –∫–∞–∫ 1 —Å—Ç. –ª. —Å–æ—É—Å–∞ –º–µ–Ω—è–µ—Ç –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –±–ª—é–¥–∞.",
  },
  d: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –æ—Å–Ω–æ–≤—ã",
    imageSrc: "/summary/eating-d.jpg",
    habit: "–í–∞—à —Ä–∞—Ü–∏–æ–Ω –Ω–µ—Ä–µ–≥—É–ª—è—Ä–µ–Ω ‚Üí —Å—Ç–∞–≤–∏–º –∫—Ä–µ–ø–∫—É—é –±–∞–∑—É ‚Äî —É—Ç—Ä–µ–Ω–Ω–∏–π –ø—Ä–∏—ë–º –ø–∏—â–∏.",
    goal: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 60 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è: –±–µ–ª–æ–∫ + –∫–ª–µ—Ç—á–∞—Ç–∫–∞.",
    rationale: "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫—É—é '–æ–ø–æ—Ä—É' –¥–ª—è –≤—Å–µ–≥–æ –¥–Ω—è.",
    promise: "–í –ø–ª–∞–Ω–µ –¥–∞–¥–∏–º 14 –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –∑–∞–≤—Ç—Ä–∞–∫–∞ ‚Äú5 –º–∏–Ω—É—Ç ‚Äî –∏ –≥–æ—Ç–æ–≤–æ‚Äù.",
  },
  mixed: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏",
    imageSrc: "/summary/eating-mixed.jpg",
    habit: "–í–∞—à —Ä–∞—Ü–∏–æ–Ω –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º ‚Äî –¥–æ–±–∞–≤–∏–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏–µ–º—ã –ø–∏—â–º.",
    goal: "–ù–∞—á–∞—Ç—å –æ–±–µ–¥–∞—Ç—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è —Å—ã—Ç–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏ —Å —Ö–æ—Ä–æ—à–∏–º –∫–±–∂—É.",
    rationale: "–•–æ—Ä–æ—à–∏–π –æ–±–µ–¥ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –∏ –Ω–µ –¥–∞–µ—Ç —Å–æ—Ä–≤–∞—Ç—å—Å—è –≤–µ—á–µ—Ä–æ–º –Ω–∞ —á—Ç–æ-—Ç–æ –≤—Ä–µ–¥–Ω–æ–µ.",
    promise: "–í –∏—Ç–æ–≥–æ–≤–æ–º –ø–ª–∞–Ω–µ –¥–∞–¥–∏–º 5 –±—ã—Å—Ç—Ä—ã—Ö –∏ —Å—ã—Ç–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–±–µ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ —É–¥–æ–±–Ω–æ –±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π.",
  },

};

// –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û–ë–†–ê–ó –ñ–ò–ó–ù–ò"
const lifestyleHabitActions = {
  a: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ –∑–¥–æ—Ä–æ–≤–æ–º –ø–∏—Ç–∞–Ω–∏–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞",
    imageSrc: "/summary/lifestyle-a.jpg",
    habit: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ, –Ω–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ—Å–Ω–æ–µ –∏ –Ω–µ–≤–∫—É—Å–Ω–æ–µ ‚Üí –¥–æ–±–∞–≤–∏–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –±–ª—é–¥–∞ —á—Ç–æ–±—ã –≤—ã –Ω–µ —Å—Ä—ã–≤–∞–ª–∏—Å—å, –∞ –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞ –ø–æ—Å–æ–≤–µ—Ç—É–µ–º —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏.",
    goal: "–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –∏ 1 –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç –Ω–∞ 15 –º–∏–Ω—É—Ç.",
    rationale: "–°–Ω–∏–∂–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ä—Ç–∏–∑–æ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–æ—Ü–∏—Ä—É–µ—Ç –æ—Ç–µ–∫–∏, —É—Å—Ç–∞–ª—ã–π –≤–∏–¥ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∂–∏—Ä–∞.",
    promise: "–û—Ü–µ–Ω–∏–º –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 3 –¥–Ω—è ‚Äî –∑–∞–º–µ—Ç–∏—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É.",
  },
  b: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ –ª—ë–≥–∫–æ—Å—Ç–∏ –∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –±–µ–∑ –±–æ–ª–∏",
    imageSrc: "/summary/lifestyle-b.jpg",
    habit: "–¢–µ–ª–æ —É—Å—Ç–∞–ª–æ –∏ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–æ ‚Üí –Ω–∞—á–Ω—ë–º —Å –ª–µ–≥–∫–æ–π –∑–∞—Ä—è–¥–∫–∏ –¥–∞—é—â–µ–π —ç–Ω–µ—Ä–≥–∏—é –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å.",
    goal: "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞ 5-10 –º–∏–Ω—É—Ç –∏ –ø—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ (5/7 –¥–Ω–µ–π).",
    rationale: "–ü–æ–º–æ–∂–µ–º –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—é –∏ –º—è–≥–∫–æ —Ä–∞–∑–≥–æ–Ω–∏–º –º–µ—Ç–∞–±–æ–ª–∏–∑–º –±–µ–∑ –Ω–∞–≥—Ä—É–∑–∫–∏.",
    promise: "–ü–æ–∫–∞–∂–µ–º 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∑–∞—Ä—è–¥–∫–∏ –±–µ–∑ –ø—Ä—ã–∂–∫–æ–≤ –∏ –Ω–∞–≥—Ä—É–∑–æ–∫ –Ω–∞ –∫–æ–ª–µ–Ω–∏.",
  },
  c: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —ç–º–æ—Ü–∏—è–º–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ –≥–æ–ª–æ–¥–∞",
    imageSrc: "/summary/lifestyle-c.jpg",
    habit: "–≠–º–æ—Ü–∏–∏ –ø—Ä–æ–≤–æ—Ü–∏—Ä—É—é—Ç —Å—Ä—ã–≤—ã ‚Üí –∑–∞–º–µ–Ω–∏–º '–∑–∞–µ–¥–∞–Ω–∏–µ' –Ω–∞ '–∑–∞–º–µ—â–µ–Ω–∏–µ'.",
    goal: "–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ —Å—ä–µ—Å—Ç—å —á—Ç–æ-—Ç–æ –≤—Ä–µ–¥–Ω–æ–µ - –≤—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã, –µ—Å–ª–∏ –≤—Å–µ —Ä–∞–≤–Ω–æ —Ç—è–Ω–µ—Ç –Ω–∞ —Å–ª–∞–¥–∫–æ–µ - —Ñ—Ä—É–∫—Ç/–æ—Ä–µ—Ö–∏.",
    rationale: "–ü–∞—É–∑–∞ –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç–ª–∏—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –≥–æ–ª–æ–¥ –æ—Ç –∏–º–ø—É–ª—å—Å–∞.",
    promise: "–í –ø–ª–∞–Ω–µ –¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ ‚Äú–∑–∞–º–µ–Ω –Ω–∞ —Å–ª–∞–¥–∫–æ–µ‚Äù.",
  },
  d: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —É—Å–ø–µ—Ö–∞",
    imageSrc: "/summary/lifestyle-d.jpg", // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏
    habit: "–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã –∏ –Ω–µ –ø–æ–¥–¥–∞–µ—Ç–µ—Å—å —Å—Ç—Ä–µ—Å—Å—É. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ–ª–∞.",
    goal: "–î–æ–±–∞–≤–∏—Ç—å 1 —Å–∏–ª–æ–≤—É—é –º–∏–Ω–∏-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É (5-10 –º–∏–Ω) 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é.",
    rationale: "–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É—Å–∫–æ—Ä—è—é—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–∫–æ—è –∏ —Ñ–æ—Ä–º–∏—Ä—É—é—Ç –ø–æ–¥—Ç—è–Ω—É—Ç—ã–π —Å–∏–ª—É—ç—Ç.",
    promise: "–í –ø–ª–∞–Ω–µ –¥–∞–¥–∏–º –∫–æ–º–ø–ª–µ–∫—Å –∏–∑ 3-—Ö –ª–µ–≥–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –¥–æ–º–∞.",
  },
  mixed: {
    title: "–í–∞—à —Ñ–æ–∫—É—Å ‚Äî –Ω–∞ –º–µ–ª–æ—á–∞—Ö –∏ —Å–∏—Å—Ç–µ–º–Ω–æ—Å—Ç–∏",
    imageSrc: "/summary/lifestyle-mixed.jpg",
    habit: "–í—ã –∏—â–µ—Ç–µ —Å–∏—Å—Ç–µ–º—É ‚Üí –Ω–∞—á–Ω–µ–º —Å –û–î–ù–û–ì–û –ø—Ä–æ—Å—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.",
    goal: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ —Å–Ω–∞: —É–∫–ª–∞–¥—ã–≤–∞—Ç—å—Å—è –∏ –≤—Å—Ç–∞–≤–∞—Ç—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è ¬±30 –º–∏–Ω—É—Ç (5/7 –¥–Ω–µ–π)",
    rationale: "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ–Ω ‚Äî —Å–∞–º—ã–π –Ω–µ–¥–æ–æ—Ü–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä –ø–æ—Ö—É–¥–µ–Ω–∏—è.",
    promise: "–ü—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–ª–æ –Ω–∞ —É—Ç—Ä–µ–Ω–Ω–∏–π –∞–ø–ø–µ—Ç–∏—Ç —á—Ä–µ–∑ 5/7 –¥–Ω–µ–π.",
  },
};

// –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ú–ï–¢–û–î–´ –ü–û–•–£–î–ï–ù–ò–Ø"
const attemptsHabitActions = {
  a: {
    title: "–í–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî –≤ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –º—è–≥–∫–æ–º —Å—Ç–∞—Ä—Ç–µ",
    imageSrc: "/summary/attempts-a.jpg",
    habit: "–í—ã –∏—â–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Üí –º—ã –¥–æ–±–∞–≤–∏–º —Ç–æ, –æ—Ç —á–µ–≥–æ –≤—ã –±—ã—Å—Ç—Ä–æ —É–≤–∏–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
    goal: "–¶–µ–ª—å: —Å–±—Ä–æ—Å–∏—Ç—å –ø–µ—Ä–≤—ã–µ –ø–∞—Ä—É –∫–∏–ª–æ–≥—Ä–∞–º –±–µ–∑ —Å–ø–æ—Ä—Ç–∞ –∏ –¥–∏–µ—Ç.",
    rationale: "–ù–∏—á–µ–≥–æ –Ω–µ –¥–∞–µ—Ç —Ç–∞–∫—É—é –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∫–∞–∫ –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.",
    promise: "–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –¥–æ–±–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å—Ö–µ–º.",
  },
  b: {
    title: "–í–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –¥–ª—è –±–æ–ª—å—à–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
    imageSrc: "/summary/attempts-b.jpg",
    habit: "–í—ã —Ü–µ–Ω–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Üí —Å—Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–µ.",
    goal: "–¶–µ–ª—å: –≤—ã–±—Ä–∞—Ç—å 1 –ø—Ä–∏–≤—ã—á–∫—É –∏–∑ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –µ–π 7 –¥–Ω–µ–π.",
    rationale: "–û–¥–Ω–∞ –º–∞–ª–µ–Ω—å–∫–∞—è, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ –≤–∞–∂–Ω–µ–µ 10 —Ö–∞–æ—Ç–∏—á–Ω—ã—Ö.",
    promise: "–≠—Ç–æ —Å–æ–∑–¥–∞—Å—Ç '—ç—Ñ—Ñ–µ–∫—Ç –¥–æ–º–∏–Ω–æ' –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.",
  },
  c: {
    title: "–í–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî –æ—Ç –∑–Ω–∞–Ω–∏–π –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É",
    imageSrc: "/summary/attempts-c.jpg",
    habit: "–í—ã –∑–Ω–∞–µ—Ç–µ —Ç–µ–æ—Ä–∏—é, –Ω–æ –Ω—É–∂–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ ‚Üí –Ω—É–∂–µ–Ω —á—ë—Ç–∫–∏–π –ø–µ—Ä–≤—ã–π —à–∞–≥.",
    goal: "–¶–µ–ª—å: –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞, –Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–≥–æ –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—è.",
    rationale: "–î–µ–π—Å—Ç–≤–∏–µ, —Å–æ–≤–µ—Ä—à—ë–Ω–Ω–æ–µ –≤ –ø–µ—Ä–≤—ã–µ 24 —á–∞—Å–∞, –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –≤ 2 —Ä–∞–∑–∞ –ª—É—á—à–µ.",
    promise: "–ú—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–¥–µ–ª–∞–ª–∏ –ø–µ—Ä–≤—ã–π —à–∞–≥ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—ã–º!",
  },
  d: {
    title: "–í–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî –æ—Ç —Ö–æ—Ä–æ—à–µ–≥–æ –∫ –æ—Ç–ª–∏—á–Ω–æ–º—É",
    imageSrc: "/summary/attempts-d.jpg", // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —ç—Ç–æ–º—É –ø—É—Ç–∏
    habit: "–£ –≤–∞—Å –µ—Å—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏.",
    goal: "–í–Ω–µ–¥—Ä–∏—Ç—å 1 –Ω–æ–≤—É—é '–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é' –ø—Ä–∏–≤—ã—á–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ü–∏–∫–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≥–ª–µ–≤–æ–¥–æ–≤) –Ω–∞ 7 –¥–Ω–µ–π.",
    rationale: "–ö–æ–≥–¥–∞ –±–∞–∑–∞ —É–∂–µ –µ—Å—Ç—å, —Ç–æ—á–µ—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –¥–∞—é—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç.",
    promise: "–í –ø–∞–º—è—Ç–∫–µ –º—ã –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–µ–º –ø—Ä–∏–Ω—Ü–∏–ø —Ü–∏–∫–ª–∏—Ä–æ–≤–∞–Ω–∏—è —É–≥–ª–µ–≤–æ–¥–æ–≤.",
  },
  mixed: {
    title: "–í–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî —Ñ–æ–∫—É—Å –Ω–∞ –æ–¥–Ω–æ–º –º–µ—Ç–æ–¥–µ",
    imageSrc: "/summary/attempts-mixed.jpg",
    habit: "–í—ã –æ—Ç–∫—Ä—ã—Ç—ã –Ω–æ–≤–æ–º—É ‚Üí –æ–±—ä–µ–¥–∏–Ω–∏–º —Å–∏—Å—Ç–µ–º–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ä–≥–∞–Ω–∏–∑–º–∞.",
    goal: "–¶–µ–ª—å: –æ—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –æ –ø–∏—Ç–∞–Ω–∏–∏ –∏ –Ω–µ –æ—Ç–∫–ª–æ–Ω—è—Ç—å—Å—è –æ—Ç –ø–ª–∞–Ω–∞ 7 –¥–Ω–µ–π.",
    rationale: "–¢–µ–ª–æ –ø—Ä–∏–≤—ã–∫–∞–µ—Ç –∫ —Å—Ç–∞—Ä—ã–º –ø—Ä–∏–≤—ã—á–∫–∞–º, –∞ –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –±—ã—Å—Ç—Ä–æ –¥–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
    promise: "–ù–∞—à –ø–ª–∞–Ω –ø–æ–¥–æ–π–¥–µ—Ç –¥–∞–∂–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è.",
  },
};

const whyItSuitsYouMapping = {
  eating: {
    a: { problem: "–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –±–æ–ª—å—à–∏–º –ø–æ—Ä—Ü–∏—è–º", solution: "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –º–∞–Ω–≥–æ –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç" },
    b: { problem: "–¢—è–≥–∞ –∫ —Å–ª–∞–¥–∫–æ–º—É", solution: "–Ø–±–ª–æ—á–Ω—ã–π —É–∫—Å—É—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Å–∞—Ö–∞—Ä–∞" },
    c: { problem: "–°–∫—Ä—ã—Ç—ã–µ –∫–∞–ª–æ—Ä–∏–∏", solution: "–ó–µ–ª–µ–Ω—ã–π —á–∞–π —É—Å–∫–æ—Ä—è–µ—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º –∂–∏—Ä–æ–≤" },
    d: { problem: "–†–∏—Å–∫ –∑–∞–º–µ–¥–ª–µ–Ω–∏—è –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞", solution: "L-–ö–∞—Ä–Ω–∏—Ç–∏–Ω –ø–æ–º–æ–≥–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é" }, // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: { problem: "–ù–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ", solution: "–ì—É–∞—Ä–∞–Ω–∞ –¥–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é –∏ —Å–Ω–∏–∂–∞–µ—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –ø–µ—Ä–µ–∫—É—Å–∞—Ö" },
  },
  lifestyle: {
    a: { problem: "–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞", solution: "–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è –±–æ—Ä—é—Ç—Å—è —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏ –∫–æ—Ä—Ç–∏–∑–æ–ª–∞" },
    b: { problem: "–§–∏–∑–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–ª–æ—Å—Ç—å", solution: "–ì—É–∞—Ä–∞–Ω–∞ —Å–ª—É–∂–∏—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –±–æ–¥—Ä–æ—Å—Ç–∏" },
    c: { problem: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ–ª–æ–¥", solution: "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —Å–∞—Ö–∞—Ä–∞ —Å–Ω–∏–∂–∞–µ—Ç –∏–º–ø—É–ª—å—Å–∏–≤–Ω—É—é —Ç—è–≥—É –∫ –µ–¥–µ" },
    d: { problem: "–ü–ª–∞—Ç–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö", solution: "–ö–æ–º–ø–ª–µ–∫—Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–Ω—É—Å –¥–ª—è –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫" }, // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: { problem: "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–æ–Ω", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞ —É–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–¥—ã—Ö–∞" },
  },
  attempts: {
    a: { problem: "–ü–æ–∏—Å–∫ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è", solution: "–ö–æ–º–ø–ª–µ–∫—Å –¥–∞–µ—Ç –∑–∞–º–µ—Ç–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –±–µ–∑ –∂—ë—Å—Ç–∫–∏—Ö –¥–∏–µ—Ç" },
    b: { problem: "–í–∞–∂–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã", solution: "–í—Å–µ–≥–æ 2 –∫–∞–ø—Å—É–ª—ã –≤ –¥–µ–Ω—å –ª–µ–≥–∫–æ –≤—Å—Ç—Ä–æ–∏—Ç—å –≤ –ª—é–±–æ–π –≥—Ä–∞—Ñ–∏–∫" },
    c: { problem: "–°–ª–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞", solution: "–ú—è–≥–∫–∏–π —Å—Ç–∞—Ä—Ç –±–µ–∑ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏ —Å—Ç–∏–º—É–ª—è—Ç–æ—Ä–æ–≤ –≤—ã—Å–æ–∫–æ–π –¥–æ–∑—ã" },
    d: { problem: "–ù—É–∂–Ω—ã –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", solution: "–§–æ—Ä–º—É–ª–∞ –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –∫–æ–≥–¥–∞ –±–∞–∑–∞ —É–∂–µ –µ—Å—Ç—å" }, // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: { problem: "–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –Ω–æ–≤–æ–º—É", solution: "–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ø–æ–ª–Ω—è–µ—Ç –ª—é–±–æ–π –∑–¥–æ—Ä–æ–≤—ã–π –ø–ª–∞–Ω" },
  },
};

const subtitleKeywords = {
  eating: {
    a: "–∫–æ–Ω—Ç—Ä–æ–ª—å –ø–æ—Ä—Ü–∏–π",
    b: "—Ç—è–≥—É –∫ —Å–ª–∞–¥–∫–æ–º—É",
    c: "—Å–∫—Ä—ã—Ç—ã–µ –∫–∞–ª–æ—Ä–∏–∏",
    d: "—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞—Ü–∏–æ–Ω–∞", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "—Ä–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è",
  },
  lifestyle: {
    a: "—É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞",
    b: "—É—Å—Ç–∞–ª–æ—Å—Ç—å",
    c: "—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ–ª–æ–¥",
    d: "–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞",
  },
  attempts: {
    a: "–º—è–≥–∫–∏–π —Å—Ç–∞—Ä—Ç",
    b: "—Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
    c: "–ª—ë–≥–∫–æ–µ –Ω–∞—á–∞–ª–æ",
    d: "–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥",
  },
};

const comprehensiveEffectContent = {
  all_a: "–í–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –º—è–≥–∫–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –º–µ—Ç–∞–±–æ–ª–∏–∑–º. –ö–æ–º–ø–ª–µ–∫—Å –ø–æ–º–æ–∂–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç –∏ –¥–∞—Å—Ç —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è –ª–µ–≥–∫–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞.",
  all_b: "–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ö–æ–º–ø–ª–µ–∫—Å –¥–∞—Å—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–æ–Ω—É—Å, —É–ª—É—á—à–∏—Ç —Å–æ–Ω –∏ —Å–Ω–∏–∑–∏—Ç —Ç—è–≥—É –∫ –±—ã—Å—Ç—Ä—ã–º —É–≥–ª–µ–≤–æ–¥–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–±–∏—Ä–∞—é—Ç —Å–∏–ª—ã.",
  all_c: "–í—ã –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –Ω–æ –º–µ—à–∞—é—Ç —Å—Ä—ã–≤—ã. –ö–æ–º–ø–ª–µ–∫—Å –ø–æ–º–æ–∂–µ—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∞—Ö–∞—Ä –≤ –∫—Ä–æ–≤–∏, —á—Ç–æ–±—ã —Å–Ω–∏–∑–∏—Ç—å –∏–º–ø—É–ª—å—Å–∏–≤–Ω—É—é —Ç—è–≥—É –∫ –µ–¥–µ –≤ –º–æ–º–µ–Ω—Ç—ã —Å—Ç—Ä–µ—Å—Å–∞.",
  mixed: "–í–∞—à–∞ —Å–∏—Ç—É–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞. –ù–∞—à –ø–∞–∫–µ—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞–ª–∞–¥–∏—Ç—å —Ä–µ–∂–∏–º, —Å–Ω–∏–∑–∏—Ç—å –≤–ª–∏—è–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç.",
};

const safetyContent = {
  default: "–°–æ—Å—Ç–∞–≤ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã—Ö —Å—Ç–∏–º—É–ª—è—Ç–æ—Ä–æ–≤. –ü—Ä–∏ —Å–æ–º–Ω–µ–Ω–∏—è—Ö –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ –≤–∞—à–µ–º—É –ª–µ—á–∞—â–µ–º—É –≤—Ä–∞—á—É.",
  high_pressure: "–°–æ—Å—Ç–∞–≤ —Å–æ–≤–º–µ—Å—Ç–∏–º —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –æ—Ç –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∏, –Ω–æ –º—ã –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –≤–∞—à–∏–º –≤—Ä–∞—á–æ–º.",
  diabetes: "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–º–æ–≥–∞—é—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞. –ü—Ä–æ–¥—É–∫—Ç –±–µ–∑–æ–ø–∞—Å–µ–Ω –ø—Ä–∏ –¥–∏–∞–±–µ—Ç–µ 2 —Ç–∏–ø–∞, –Ω–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–æ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞.",
  contraceptives: "–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤–æ–≤. –ú–æ–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏—Ö –≤–º–µ—Å—Ç–µ –±–µ–∑ –æ–ø–∞—Å–µ–Ω–∏–π.",
  pcos: "–ü—Ä–∏ –°–ü–ö–Ø –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–µ–Ω –∫–æ–Ω—Ç—Ä–æ–ª—å —Å–∞—Ö–∞—Ä–∞ –∏ –≤–µ—Å–∞. –ù–∞—à –∫–æ–º–ø–ª–µ–∫—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å —É—á–µ—Ç–æ–º —ç—Ç–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ —Å—Ç–∞–Ω–µ—Ç —Ö–æ—Ä–æ—à–∏–º –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫ –ª–µ—á–µ–Ω–∏—é.",
};

const planContentDatabase = {
  eating: {
    a: "–†–µ—Ü–µ–ø—Ç—ã —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ –∏ —Å—ã—Ç–æ—Å—Ç–∏, –∞ –Ω–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∫–∞–ª–æ—Ä–∏–π.",
    b: "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –±–æ—Ä—å–±—ã —Å —Ç—è–≥–æ–π –∫ —Å–ª–∞–¥–∫–æ–º—É —á–µ—Ä–µ–∑ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∫—É—Å—ã.",
    c: "–ú–µ—Ç–æ–¥—ã –∫–æ–Ω—Ç—Ä–æ–ª—è '—Å–∫—Ä—ã—Ç—ã—Ö' –∫–∞–ª–æ—Ä–∏–π –≤ —Å–æ—É—Å–∞—Ö –∏ –º–∞—Å–ª–∞—Ö –±–µ–∑ –æ—Ç–∫–∞–∑–∞ –æ—Ç –≤–∫—É—Å–∞.",
    d: "–ü—Ä–∏–Ω—Ü–∏–ø—ã —Ç–∞–π–º–∏–Ω–≥–∞ –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞.", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –æ—Å–Ω–æ–≤—ã –ø–∏—Ç–∞–Ω–∏—è.",
  },
  lifestyle: {
    a: "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞ –≤ –≤–∞—à –æ–±—ã—á–Ω—ã–π –¥–µ–Ω—å.",
    b: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª–µ–≥–∫–æ–º—É –¥–≤–∏–∂–µ–Ω–∏—é, –∫–æ—Ç–æ—Ä–æ–µ –¥–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é, –∞ –Ω–µ –∑–∞–±–∏—Ä–∞–µ—Ç –µ–µ.",
    c: "–¢–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –≥–æ–ª–æ–¥–æ–º, —á—Ç–æ–±—ã –æ—Ç–ª–∏—á–∞—Ç—å –µ–≥–æ –æ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ.",
    d: "–°–æ–≤–µ—Ç—ã –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Å–∏–ª–æ–≤—ã—Ö –º–∏–Ω–∏-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞.", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–°–æ–≤–µ—Ç—ã –ø–æ –Ω–∞–ª–∞–∂–∏–≤–∞–Ω–∏—é —Ä–µ–∂–∏–º–∞ —Å–Ω–∞ –¥–ª—è —Ä–µ–≥—É–ª—è—Ü–∏–∏ –≥–æ—Ä–º–æ–Ω–æ–≤ –∞–ø–ø–µ—Ç–∏—Ç–∞.",
  },
  attempts: {
    a: "–§–æ–∫—É—Å –Ω–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–µ—Ä–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –≤—ã—Å–æ–∫–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏.",
    b: "–°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å –æ–¥–Ω–æ–π –∫–ª—é—á–µ–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–æ–π –≤ –Ω–µ–¥–µ–ª—é –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.",
    c: "–ß–µ—Ç–∫–∏–π –∏ –ø—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–≤—ã–π —à–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–Ω–∞.",
    d: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ö—É–¥–µ—Ç—å, –∞ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ç–µ–ª–∞.", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ—Å—Ç–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–º–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å—Ä—ã–≤–æ–≤.",
  }
};

const handbookContentDatabase = {
  eating: {
    a: "–ß–µ–∫-–ª–∏—Å—Ç –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –æ–≤–æ—â–µ–π –≤ –∫–∞–∂–¥—ã–π –ø—Ä–∏–µ–º –ø–∏—â–∏ –¥–ª—è –±–æ–ª—å—à–µ–π —Å—ã—Ç–æ—Å—Ç–∏.",
    b: "–°–ø–∏—Å–æ–∫ –∏–∑ 5 –ø–æ–ª–µ–∑–Ω—ã—Ö –ø–µ—Ä–µ–∫—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥ —Ä—É–∫–æ–π.",
    c: "–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞ –æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–æ—É—Å–æ–≤.",
    d: "–ü–∞–º—è—Ç–∫–∞ '–ó–æ–ª–æ—Ç—ã–µ —á–∞—Å—ã': –ª—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–≤—Ç—Ä–∞–∫–∞, –æ–±–µ–¥–∞ –∏ —É–∂–∏–Ω–∞.", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–§–æ—Ä–º—É–ª–∞ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–≤—Ç—Ä–∞–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º.",
  },
  lifestyle: {
    a: "5-–º–∏–Ω—É—Ç–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –¥—ã—Ö–∞–Ω–∏—è –¥–ª—è –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞.",
    b: "–ö–æ–º–ø–ª–µ–∫—Å –∏–∑ 3 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–π –∑–∞—Ä—è–¥–∫–∏ –±–µ–∑ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å—É—Å—Ç–∞–≤—ã.",
    c: "–¢–µ—Ö–Ω–∏–∫–∞ '–ø–∞—É–∑—ã': —á—Ç–æ –¥–µ–ª–∞—Ç—å –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è '–∑–∞–µ—Å—Ç—å' —ç–º–æ—Ü–∏–∏.",
    d: "–ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞: 3 –¥–æ–º–∞—à–Ω–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å –≤–µ—Å–æ–º —Å–≤–æ–µ–≥–æ —Ç–µ–ª–∞ –¥–ª—è —Ç–æ–Ω—É—Å–∞.", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–ì–∞–π–¥ –ø–æ '–≥–∏–≥–∏–µ–Ω–µ —Å–Ω–∞': –∫–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É –æ—Ç–¥—ã—Ö—É.",
  },
  attempts: {
    a: "–ú–µ—Ç–æ–¥ '–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –∑–∞–º–µ—Ä–∞', —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–µ—Å–∞—Ö.",
    b: "–¢—Ä–µ–∫–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–¥–Ω–æ–π –∫–ª—é—á–µ–≤–æ–π –ø—Ä–∏–≤—ã—á–∫–∏, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å.",
    c: "–ü—Ä–∞–≤–∏–ª–æ '–ø–µ—Ä–≤—ã—Ö 24 —á–∞—Å–æ–≤' –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞.",
    d: "–ö—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø–∞ '—Ü–∏–∫–ª–∏—Ä–æ–≤–∞–Ω–∏—è —É–≥–ª–µ–≤–æ–¥–æ–≤' –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö.", // <-- –î–û–ë–ê–í–õ–ï–ù–û
    mixed: "–°–æ–≤–µ—Ç—ã, –∫–∞–∫ –Ω–µ —Å–±–∏—Ç—å—Å—è —Å –∫—É—Ä—Å–∞ –∏ —á—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª —Å—Ä—ã–≤.",
  }
};

const testimonials = [
  {
    isExpert: true,
    name: "–î-—Ä –ï–ª–µ–Ω–∞ –†–æ—Ö–∞—Å, –ù—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥",
    quote: "–Ø —Ä–µ–∫–æ–º–µ–Ω–¥—É—é Esbelita —Å–≤–æ–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–∫–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –±–æ—Ä—é—Ç—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –∏ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º–∏. –°–æ—Å—Ç–∞–≤ –Ω–∞—Ü–µ–ª–µ–Ω –Ω–∞ –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—ã, –∞ –Ω–µ –Ω–∞ —Å–∏–º–ø—Ç–æ–º—ã, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
    img: ShieldCheck
  },
  {
    name: "–ú–∞—Ä–∏—è, 35, –õ–∏–º–∞",
    quote: "–£–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∞ —á–∞–∏ –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è, –Ω–æ –æ–Ω–∏ –Ω–µ –ø–æ–º–æ–≥–∞–ª–∏, —Ç–∞–∫ —á—Ç–æ –±—ã–ª–∞ —Å–∫–µ–ø—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –ü–∏–ª–∞ 2 –∫—É—Ä—Å–∞ —ç—Ç–∏—Ö –∫–∞–ø—Å—É–ª —Å–æ –≤—Å–µ–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –∏ –Ω–∞–∫–æ–Ω–µ—Ü –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ —Ç—è–Ω—É—Ç—å –ø–æ—è—Å–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è –º—É—á–∞–ª–∞ –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤. –°–ø–∞—Å–∏–±–æ.",
    stars: 5,
    weightLoss: "–°–±—Ä–æ—Å–∏–ª–∞ 5.2 –∫–≥",
    img: "/testimonials/ba-1.jpg",
    orderId: "3108B"
  },
  {
    name: "–ö–∞—Ä–º–µ–Ω, 41, –ê—Ä–µ–∫–∏–ø–∞",
    quote: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ —Å –º–æ–∏–º–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º–∏ –æ—Ç –≥–∏–ø–µ—Ä—Ç–æ–Ω–∏–∏ (–ø—Ä–æ–≤–µ—Ä–∏–ª–∞ —Å–æ—Å—Ç–∞–≤ —Å –≤—Ä–∞—á–æ–º). –í–∏–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–ª–∏–≤ —Å–∏–ª —É–∂–µ —á–µ—Ä–µ–∑ 10 –¥–Ω–µ–π. –ë—É–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å.",
    stars: 5,
    weightLoss: "–°–±—Ä–æ—Å–∏–ª–∞ 7.5 –∫–≥",
    img: "/testimonials/ba-2.jpg",
    orderId: "2911C"
  },
  {
    name: "–°–æ—Ñ–∏—è, 40, –ö—É—Å–∫–æ",
    quote: "–ú–æ—è –ø—Ä–æ–±–ª–µ–º–∞ —ç—Ç–æ –Ω–∞—Ç–∏—Ä–∞–Ω–∏–µ –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —á–∞—Å—Ç–∏ –±–µ–¥–µ—Ä, –æ—Ç–µ–∫–∏ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –≤–∑–¥—É—Ç–∏–µ. –£–∂–µ –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –∫—É—Ä—Å–∞, –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞ –ª–µ–≥–∫–æ—Å—Ç—å, –æ—Ç–µ—á–Ω–æ—Å—Ç—å —É—à–ª–∞ –∏ –º–æ–µ —Ç–µ–ª–æ –≤—ã–≥–ª—è–¥–∏—Ç –±–æ–ª–µ–µ –ø–æ–¥—Ç—è–Ω—É—Ç–æ, –ø—å—é –≤—Ç–æ—Ä—É—é –±–∞–Ω–∫—É. –í–µ—Å —É—Ö–æ–¥–∏—Ç –º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ.",
    stars: 4.5,
    weightLoss: "–°–±—Ä–æ—Å–∏–ª–∞ 6 –∫–≥",
    img: "/testimonials/ba-3.jpg",
    orderId: "4502A"
  },
];

// ‚úÖ –í–°–¢–ê–í–¨–¢–ï –≠–¢–û–¢ –ö–û–î –í –í–ï–†–•–ù–Æ–Æ –ß–ê–°–¢–¨ –§–ê–ô–õ–ê

const problemSolutionMapping: Record<string, { problem: string; solution: string }> = {
  // --- –ë–õ–û–ö "–ü–ò–¢–ê–ù–ò–ï" ---
  "–Ø–π—Ü–∞ —Å –∂–∞—Ä–µ–Ω—ã–º–∏ –∫–æ–ª–±–∞—Å–∫–∞–º–∏, —Ç–∞–º–∞–ª–µ –∏–ª–∏ –ø–∞—Ä–∞ –±—É–ª–æ—á–µ–∫ —Å –∫–æ—Ñ–µ —Å —Å–∞—Ö–∞—Ä–æ–º": { problem: "–í—ã—Å–æ–∫–æ–∫–∞–ª–æ—Ä–∏–π–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ –∞–ø–ø–µ—Ç–∏—Ç–∞" },
  "–¢–æ—Ä—Ç–∏–ª—å–∏ –∏–ª–∏ –ª–µ–ø–µ—à–∫–∏ —Å –Ω–∞—á–∏–Ω–∫–æ–π: —Å–ª–∞–¥–∫–æ–π –∫—É–∫—É—Ä—É–∑–æ–π, —Å—ã—Ä–æ–º –∏ –∞–≤–æ–∫–∞–¥–æ": { problem: "–ò–∑–±—ã—Ç–æ–∫ —É–≥–ª–µ–≤–æ–¥–æ–≤ —É—Ç—Ä–æ–º", solution: "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —Å–∞—Ö–∞—Ä–∞" },
  "–ö–∞—à–∞ —Å —Ñ—Ä—É–∫—Ç–∞–º–∏ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –¥–æ–±–∞–≤–∫–∞–º–∏": { problem: "–†–∏—Å–∫ —Å–∫—Ä—ã—Ç–æ–≥–æ —Å–∞—Ö–∞—Ä–∞", solution: "–ö–æ–Ω—Ç—Ä–æ–ª—å –≥–ª—é–∫–æ–∑—ã" },
  "–ù–∏—á–µ–≥–æ ‚Äì —Å —É—Ç—Ä–∞ –Ω–µ —Ö–æ—á–µ—Ç—Å—è –µ—Å—Ç—å": { problem: "–ü—Ä–æ–ø—É—Å–∫ –∑–∞–≤—Ç—Ä–∞–∫–∞", solution: "–ó–∞–ø—É—Å–∫ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞" },
  "–ñ–∞—Ä–µ–Ω—ã–π —Ä–∏—Å –æ–≤–æ—â–∞–º–∏, –∫–∞—Ä—Ç–æ—à–∫–æ–π –∏ –º—è—Å–æ–º": { problem: "–¢—è–∂–µ–ª—ã–π –æ–±–µ–¥", solution: "–£–ª—É—á—à–µ–Ω–∏–µ –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è" },
  "–°–µ–Ω–¥–≤–∏—á —Å –∫–æ–ª–±–∞—Å–∫–∞–º–∏ –∏–ª–∏ —Å–≤–∏–Ω–∏–Ω–æ–π, –ø–∞—Ä—É —ç–º–ø–∞–Ω–∞–¥ –∏ –≥–∞–∑–∏—Ä–æ–≤–∫–∞": { problem: "–ú–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –µ–¥—ã", solution: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞" },
  "–ù–µ–±–æ–ª—å—à–æ–π –ø–µ—Ä–µ–∫—É—Å, –∫—Ä–µ–∫–µ—Ä—ã, —Å–Ω–µ–∫–∏": { problem: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –±–µ–ª–∫–∞ –≤ –æ–±–µ–¥", solution: "–ö–æ–Ω—Ç—Ä–æ–ª—å –≥–æ–ª–æ–¥–∞" },
  "–ë–æ–ª—å—à–æ–π –∫–∞–ø—É—á–∏–Ω–æ —Å —Å–∏—Ä–æ–ø–æ–º, —Ç–æ—Ä—Ç–∏–∫ –∏–ª–∏ –ø–∏—Ä–æ–∂–Ω–æ–µ": { problem: "–°–∞—Ö–∞—Ä–Ω—ã–π —Å—Ä—ã–≤", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ —Ç—è–≥–∏ –∫ —Å–ª–∞–¥–∫–æ–º—É" },
  "–ö–æ–ª–∞ –∏–ª–∏ —á–∏—á–∞ –∏ –ø–∞—Ä—É –ø–µ—á–µ–Ω–µ–∫": { problem: "–ñ–∏–¥–∫–∏–µ –∫–∞–ª–æ—Ä–∏–∏", solution: "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —ç–Ω–µ—Ä–≥–∏–∏" },
  "–ù–∏—á–µ–≥–æ, –Ω–µ —Ö–æ—á—É –æ–ø—è—Ç—å —Å—Ä—ã–≤–∞—Ç—å—Å—è, –Ω–æ –ø–æ—Ç–æ–º —Å—ä–µ–º —á—Ç–æ-—Ç–æ –¥–æ–º–∞": { problem: "–¶–∏–∫–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ-—Å—Ä—ã–≤", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞" },

  // --- –ë–õ–û–ö "–û–ë–†–ê–ó –ñ–ò–ó–ù–ò" ---
  "–£–∂–µ –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑—ã: —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω, –¥–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–µ–¥–¥–∏–∞–±–µ—Ç": { problem: "–†–∏—Å–∫–∏ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è", solution: "–ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞" },
  "–ß–∞—Å—Ç–æ –±–æ–ª–∏—Ç —Å–ø–∏–Ω–∞/–∫–æ–ª–µ–Ω–∏, –±—ã–≤–∞—é—Ç –æ—Ç–µ–∫–∏": { problem: "–ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å—É—Å—Ç–∞–≤—ã", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ –æ—Ç–µ—á–Ω–æ—Å—Ç–∏" },
  "–ß—É–≤—Å—Ç–≤—É—é –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –æ–¥—ã—à–∫—É –ø—Ä–∏ —Ö–æ–¥—å–±–µ": { problem: "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏", solution: "–ü—Ä–∏—Ä–æ–¥–Ω—ã–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫" },
  "–ó–∞–∫–∞–∑—ã–≤–∞—é —Å—ã—Ç–Ω—ã–π —É–∂–∏–Ω (–∫—É—Ä–∏—Ü—É, –ø–∏—Ü—Ü—É) –∏ –¥–µ—Å–µ—Ä—Ç": { problem: "–í–µ—á–µ—Ä–Ω–µ–µ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏–µ", solution: "–ö–æ–Ω—Ç—Ä–æ–ª—å –∞–ø–ø–µ—Ç–∏—Ç–∞" },
  "–°–º–æ—Ç—Ä—é –¢–í —Å–æ —Å–ª–∞–¥–æ—Å—Ç—è–º–∏ –∏–ª–∏ —Å–Ω–µ–∫–∞–º–∏": { problem: "–ü—Ä–∏–≤—ã—á–∫–∞ –∑–∞–µ–¥–∞—Ç—å —Å–∫—É–∫—É", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ —Ç—è–≥–∏ –∫ —Å–ª–∞–¥–∫–æ–º—É" },
  "–†–∞–∑–¥—Ä–∞–∂–∞—é—Å—å –Ω–∞ –≤—Å–µ—Ö, –∞ –ø–æ—Ç–æ–º —Å—ä–µ–¥–∞—é –ª–∏—à–Ω–µ–≥–æ": { problem: "–ó–∞–µ–¥–∞–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞", solution: "–ë–æ—Ä—å–±–∞ —Å –∫–æ—Ä—Ç–∏–∑–æ–ª–æ–º" },
  "–õ–æ–∂—É—Å—å –æ—á–µ–Ω—å –ø–æ–∑–¥–Ω–æ, –≤—Å—Ç–∞—é –æ—á–µ–Ω—å —Ä–∞–Ω–æ, —Å–Ω–∞ –º–∞–ª–æ": { problem: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —Å–Ω–∞", solution: "–£–ª—É—á—à–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è" },
  "–°–æ–Ω –ø—Ä–µ—Ä—ã–≤–∏—Å—Ç—ã–π, —á–∞—Å—Ç–æ –ø—Ä–æ—Å—ã–ø–∞—é—Å—å —Ä–∞–∑–±–∏—Ç–æ–π": { problem: "–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞" },
  "–õ–æ–∂—É—Å—å –ø–æ–∑–¥–Ω–æ, —Å–ø–ª—é –¥–æ –æ–±–µ–¥–∞, –≤–µ—Å—å –¥–µ–Ω—å –≤ —Å–ø–µ—à–∫–µ": { problem: "–ù–∞—Ä—É—à–µ–Ω–∏–µ —Ü–∏—Ä–∫–∞–¥–Ω—ã—Ö —Ä–∏—Ç–º–æ–≤", solution: "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —ç–Ω–µ—Ä–≥–∏–∏" },
  "–°–ø–ª—é –º–∞–ª–æ –∏–∑-–∑–∞ —Ä–∞–±–æ—Ç—ã –∏ –¥–µ–ª, –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–µ–±—è": { problem: "–•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–ª–æ—Å—Ç—å", solution: "–ü—Ä–∏—Ä–æ–¥–Ω—ã–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫" },
  "–¢—è–∂–µ—Å—Ç—å –≤ –Ω–æ–≥–∞—Ö, –æ—Ç–µ–∫–∏ –∏ –±–æ–ª—å –≤ –ø–æ—è—Å–Ω–∏—Ü–µ": { problem: "–ó–∞–¥–µ—Ä–∂–∫–∞ –∂–∏–¥–∫–æ—Å—Ç–∏", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ –æ—Ç–µ—á–Ω–æ—Å—Ç–∏" },
  "–ù–µ—Ç —Å–∏–ª –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã –∏ –¥–æ–º–∞—à–Ω–∏—Ö –¥–µ–ª": { problem: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ", solution: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —ç–Ω–µ—Ä–≥–∏–∏" },
  "–°—Ç–µ—Å–Ω—è—é—Å—å —Å–≤–æ–µ–π —Ñ–∏–≥—É—Ä—ã –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –æ–¥–µ–∂–¥–µ": { problem: "–ù–∏–∑–∫–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞", solution: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞" },

  // --- –ë–õ–û–ö "–ú–ï–¢–û–î–´ –ü–û–•–£–î–ï–ù–ò–Ø" ---
  "–ù–∞—á–∏–Ω–∞—é, –Ω–æ –±—ã—Å—Ç—Ä–æ –±—Ä–æ—Å–∞—é –∏–∑-–∑–∞ —É—Å—Ç–∞–ª–æ—Å—Ç–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.": { problem: "–ë—ã—Å—Ç—Ä–∞—è –ø–æ—Ç–µ—Ä—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏", solution: "–í–∏–¥–∏–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç" },
  "–ë–æ–ª—å –≤ —Å—É—Å—Ç–∞–≤–∞—Ö –∏–ª–∏ –æ–¥—ã—à–∫–∞ –º–µ—à–∞—é—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å.": { problem: "–§–∏–∑–∏—á–µ—Å–∫–∏–π –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç", solution: "–°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏" },
  "–û—Ç–∫–ª–∞–¥—ã–≤–∞—é '–Ω–∞ –∑–∞–≤—Ç—Ä–∞', –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç.": { problem: "–ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è", solution: "–ü–æ–≤—ã—à–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏" },
  "–°—Ä—ã–≤–∞—é—Å—å –≤ –∫–æ–Ω—Ü–µ —Ç—è–∂–µ–ª–æ–≥–æ –¥–Ω—è, –∞ –ø–æ—Ç–æ–º –≤–∏–Ω—é —Å–µ–±—è.": { problem: "–í–µ—á–µ—Ä–Ω–∏–µ —Å—Ä—ã–≤—ã", solution: "–ö–æ–Ω—Ç—Ä–æ–ª—å –∞–ø–ø–µ—Ç–∏—Ç–∞" },
  "–î–µ—Ä–∂—É—Å—å –≤—Å—é –Ω–µ–¥–µ–ª—é, –Ω–æ '–æ—Ç—Ä—ã–≤–∞—é—Å—å' –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö.": { problem: "–≠—Ñ—Ñ–µ–∫—Ç –º–∞—è—Ç–Ω–∏–∫–∞", solution: "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è —Å–∞—Ö–∞—Ä–∞" },
  "–¢–µ—Ä—è—é –º–æ—Ç–∏–≤–∞—Ü–∏—é, –µ—Å–ª–∏ –±—ã—Å—Ç—Ä–æ –Ω–µ –≤–∏–∂—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç.": { problem: "–ù—É–∂–µ–Ω –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç", solution: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞" },
  "–ü—Ä–æ—Å—Ç–æ–µ '–≤–æ–ª—à–µ–±–Ω–æ–µ' —Å—Ä–µ–¥—Å—Ç–≤–æ: –∫–∞–ø—Å—É–ª—ã –∏–ª–∏ –Ω–∞–ø–∏—Ç–æ–∫.": { problem: "–ü–æ–∏—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è", solution: "–õ–µ–≥–∫–æ—Å—Ç—å –≤ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏" },
  "–ü–æ–Ω—è—Ç–Ω—ã–π –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–æ–∏—Ç—å –≤ –º–æ—é –∂–∏–∑–Ω—å.": { problem: "–ù—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞", solution: "–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –ø–ª–∞–Ω—É" },
  "–ó–Ω–∞—é, —á—Ç–æ –¥–µ–ª–∞—Ç—å (–ø–∏—Ç–∞–Ω–∏–µ, —Å–æ–Ω), –Ω–æ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –≤—Å—ë —Å–æ–≤–º–µ—Å—Ç–∏—Ç—å.": { problem: "–°–ª–æ–∂–Ω–æ—Å—Ç—å –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏", solution: "–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è" },
};

const shapeMapping: Record<string, string> = {
  Slim: "–°—Ç—Ä–æ–π–Ω—É—é",
  Toned: "–ü–æ–¥—Ç—è–Ω—É—Ç—É—é",
  Curvy: "–° –∏–∑–≥–∏–±–∞–º–∏",
  Athletic: "–°–ø–æ—Ä—Ç–∏–≤–Ω—É—é",
};

function buildStats(codeArray: string[]): AnswerStats {
  const counts = { a: 0, b: 0, c: 0, d: 0 }
  codeArray.forEach((l) => {
    if (counts[l as "a" | "b" | "c" | "d"] !== undefined) counts[l as "a" | "b" | "c" | "d"]++
  })
  const total = codeArray.length || 1
  const pct = { a: counts.a / total, b: counts.b / total, c: counts.c / total, d: counts.d / total }
  return {
    all: codeArray,
    counts,
    pct,
    block1: codeArray.slice(0, 3),
    block2: codeArray.slice(3, 7),
    block3: codeArray.slice(7, 10),
  }
}

const Star = ({ filled = false, half = false }) => (
  <svg className="w-4 h-4 text-amber-400" fill={filled ? 'currentColor' : 'none'} viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
    <path strokeLinecap="round" strokeLinejoin="round" d={
      half
        ? "M12 2v15.27l-6.18 3.25 1.18-6.88-5-4.87 6.91-1.01L12 2z" // –ù–æ–≤—ã–π, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è –ª–µ–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã –∑–≤–µ–∑–¥—ã
        : "M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.196-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.783-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
    } />
  </svg>
);

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∏—Å—É–µ—Ç –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥
const StarRating = ({ rating = 5 }) => {
  const fullStars = Math.floor(rating);
  const halfStar = rating % 1 !== 0;
  const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

  return (
    <div className="flex items-center">
      {[...Array(fullStars)].map((_, i) => <Star key={`full_${i}`} filled />)}
      {halfStar && <Star key={`half_1`} half filled />}
      {[...Array(emptyStars)].map((_, i) => <Star key={`empty_${i}`} />)}
    </div>
  );
};

// * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–ª—é—á –ø—Ä–æ—Ñ–∏–ª—è ('a', 'b', 'c' –∏–ª–∏ 'mixed') –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤.
//  * @param answers –ú–∞—Å—Å–∏–≤ –±—É–∫–≤–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä ['a', 'b', 'a'].
//  * @returns –ö–ª—é—á –ø—Ä–æ—Ñ–∏–ª—è.
//  */
const determineProfileKey = (answers: string[]): "a" | "b" | "c" | "mixed" => {
  const counts = { a: 0, b: 0, c: 0, d: 0 };

  // –°—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç—ã 'a', 'b', 'c'
  answers.forEach(answer => {
    if (answer in counts) {
      counts[answer as 'a' | 'b' | 'c']++;
    }
  });

  // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤
  let maxCount = 0;
  for (const key in counts) {
    if (counts[key as 'a' | 'b' | 'c'] > maxCount) {
      maxCount = counts[key as 'a' | 'b' | 'c'];
    }
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–æ–≤ a, b, c - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mixed
  if (maxCount === 0) {
    return 'mixed';
  }

  // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö "–ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π" (—É –∫–æ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤)
  const winners = [];
  for (const key in counts) {
    if (counts[key as keyof typeof counts] === maxCount) { // <-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
      winners.push(key);
    }
  }

  // –ï—Å–ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–¥–∏–Ω - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ. –ï—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ (–Ω–∏—á—å—è) - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mixed.
  if (winners.length === 1) {
    return winners[0] as "a" | "b" | "c";
  } else {
    return 'mixed';
  }
};

function LandingPage({ setCurrentStep }) {
  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4 pb-2">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø —Å py-8 –¥–æ py-4 */}
        <QuizHeader />

        {/* Hero Section */}
        <Card className="mb-8 border-0 shadow-lg bg-white/80 backdrop-blur">
          <CardContent className="p-6 sm:p-8 text-center">
            <h1 className="text-2xl sm:text-4xl font-bold text-gray-800 leading-tight mb-4">
              –£–∑–Ω–∞–π—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ —Ñ–∏–≥—É—Ä–µ –º–µ—á—Ç—ã –∑–∞ 10 –≤–æ–ø—Ä–æ—Å–æ–≤
            </h1>
            <p className="text-base sm:text-lg text-green-700 font-semibold mb-6">
              –ú–∏–Ω–∏-–º–µ–Ω—é + –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ–¥ –≤–∞—à —Ä–µ–∂–∏–º. –û—Ç–ø—Ä–∞–≤–∏–º —Å—Ä–∞–∑—É –≤ WhatsApp ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
            </p>
            <div className="bg-green-50 rounded-lg p-4 mb-6"> {/* –û—Ç—Å—Ç—É–ø –±—ã–ª p-6, —Å—Ç–∞–ª p-4 */}
              <p className="text-gray-700 text-sm sm:text-base"> {/* –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –±—ã–ª text-base, —Å—Ç–∞–ª text-sm. –¢–∞–∫–∂–µ —É–±—Ä–∞–Ω leading-relaxed. */}
                –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –±–µ–∑ —Å—Ç—Ä–æ–≥–∏—Ö –¥–∏–µ—Ç, –≤–∫–ª—é—á–∞—é—â–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–µ–π —Ü–µ–ª–∏.
              </p>
            </div>
            <div className="grid grid-cols-3 gap-2 sm:gap-4 mb-6"> {/* 3 –∫–æ–ª–æ–Ω–∫–∏ –≤—Å–µ–≥–¥–∞, –Ω–æ –∑–∞–∑–æ—Ä –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ (sm:) –±–æ–ª—å—à–µ */}
              <div className="flex items-center gap-2 sm:gap-3 bg-white p-2 sm:p-3 rounded-lg shadow-sm"> {/* –û—Ç—Å—Ç—É–ø—ã –∏ –∑–∞–∑–æ—Ä—ã –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –±–æ–ª—å—à–µ */}
                <Clock className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0" /> {/* –ò–∫–æ–Ω–∫–∞ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –±–æ–ª—å—à–µ */}
                <span className="text-gray-700 text-xs sm:text-sm">–ú–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç</span> {/* –¢–µ–∫—Å—Ç –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ –∫—Ä—É–ø–Ω–µ–µ */}
              </div>
              <div className="flex items-center gap-2 sm:gap-3 bg-white p-2 sm:p-3 rounded-lg shadow-sm">
                <Shield className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0" />
                <span className="text-gray-700 text-xs sm:text-sm">100% –ê–Ω–æ–Ω–∏–º–Ω–æ</span>
              </div>
              <div className="flex items-center gap-2 sm:gap-3 bg-white p-2 sm:p-3 rounded-lg shadow-sm">
                <CalendarCheck className="w-4 h-4 sm:w-5 sm:h-5 text-green-600 flex-shrink-0" />
                {/* –ú—ã –≤–µ—Ä–Ω—É–ª–∏ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ —É–º–µ–Ω—å—à–∞—Ç—å—Å—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
                <span className="text-gray-700 text-xs sm:text-sm">–ì–æ—Ç–æ–≤—ã–π –ø–ª–∞–Ω –Ω–∞ 14 –¥–Ω–µ–π</span>
              </div>
            </div>
            <Button
              onClick={() => setCurrentStep(1)}
              className="bg-green-600 hover:bg-green-700 text-white rounded-full shadow-lg transform hover:scale-105 transition-all px-8 py-4 text-lg"
            >
              –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç
            </Button>
            <div className="mt-6 flex flex-col items-center justify-center gap-3 text-sm text-gray-600">
              <div className="flex items-center gap-2">
                <Users className="w-5 h-5 flex-shrink-0 mr-1" />
                <span className="text-left">–ë–æ–ª–µ–µ 1,340+ –∂–µ–Ω—â–∏–Ω –≤ –ü–µ—Ä—É —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
              </div>
              <div className="flex items-center gap-2">
                <div className="flex -space-x-2 overflow-hidden">
                  <Image
                    src="/avatars/1-ar.jpg"
                    alt="Woman avatar 1"
                    width={28}
                    height={28}
                    className="w-7 h-7 rounded-full border-2 border-white shadow-sm object-cover"
                  />
                  <Image
                    src="/avatars/2-ar.jpg"
                    alt="Woman avatar 2"
                    width={28}
                    height={28}
                    className="w-7 h-7 rounded-full border-2 border-white shadow-sm object-cover"
                  />
                  <Image
                    src="/avatars/3-ar.jpg"
                    alt="Woman avatar 3"
                    width={28}
                    height={28}
                    className="w-7 h-7 rounded-full border-2 border-white shadow-sm object-cover"
                  />
                </div>
                <span className="font-semibold text-green-700">¬´–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ¬ª</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Trust Indicators */}
        {/* <div className="grid md:grid-cols-2 gap-4 sm:gap-6">
          <Card className="border-0 shadow-md">
            <CardContent className="p-4 sm:p-6">
              <div className="flex items-center gap-3 mb-3 sm:mb-4">
                <div className="w-10 h-10 sm:w-12 sm:h-12 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0">
                  <Heart className="w-5 h-5 sm:w-6 sm:h-6 text-green-600" />
                </div>
                <h3 className="font-semibold text-gray-800 text-base">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</h3>
              </div>
              <p className="text-gray-600 text-sm sm:text-base">
                –ö–∞–∂–¥–∞—è –∂–µ–Ω—â–∏–Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞. –ù–∞—à –∞–Ω–∞–ª–∏–∑ —É—á–∏—Ç—ã–≤–∞–µ—Ç –≤–∞—à –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, —Å—Ç—Ä–µ—Å—Å –∏ –ø—Ä–æ—à–ª—ã–π –æ–ø—ã—Ç, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å
                –≤–∞–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ—Å—Ç–∏—á—å –Ω–∞–∏–ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.
              </p>
            </CardContent>
          </Card>

          <Card className="border-0 shadow-md">
            <CardContent className="p-4 sm:p-6">
              <div className="flex items-center gap-3 mb-3 sm:mb-4">
                <div className="w-10 h-10 sm:w-12 sm:h-12 bg-peach-100 rounded-full flex items-center justify-center flex-shrink-0">
                  <Leaf className="w-5 h-5 sm:w-6 sm:h-6 text-peach-600" />
                </div>
                <h3 className="font-semibold text-gray-800 text-base">100% –û–¥–æ–±—Ä–µ–Ω–æ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∞–º–∏</h3>
              </div>
              <p className="text-gray-600 text-sm sm:text-base">
                –ù–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —Å–∞–º—ã–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ —É—á–∞—Å—Ç–∏–∏
                –≤–µ–¥—É—â–∏—Ö –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–æ–≤ —Å—Ç—Ä–∞–Ω—ã –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±–µ–∑ –≤—Ä–µ–¥–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è.
              </p>
            </CardContent>
          </Card>
        </div> */}
      </div>
    </div>
  );
}

function BasicsPage({ selectedGender, setSelectedGender, age, setAge, height, setHeight, weight, setWeight, touched, setTouched, setShowBMIPage, ageRef, heightRef, weightRef, HEIGHT_MIN, HEIGHT_MAX, WEIGHT_MIN, WEIGHT_MAX,
  isValidHeight, isValidWeight }) {

  const nextButtonRef = React.useRef<HTMLButtonElement>(null);

  const isFormValid = !!selectedGender && !!age && isValidHeight(height) && isValidWeight(weight);

  // --- –§–£–ù–ö–¶–ò–ò-–ü–û–ú–û–©–ù–ò–ö–ò –° setTimeout –î–õ–Ø –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û–ì–û –§–û–ö–£–°–ê ---
  const handleGenderSelect = (gender: string) => {
    setSelectedGender(gender);
    setTimeout(() => ageRef.current?.focus(), 0);
  };

  const handleAgeSelect = (range: string) => {
    setAge(range);
    setTimeout(() => heightRef.current?.focus(), 0);
  };

  const handleHeightEnter = () => {
    setTimeout(() => weightRef.current?.focus(), 0);
  };

  const handleWeightEnter = () => {
    setTimeout(() => nextButtonRef.current?.focus(), 0);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-2xl mx-auto">
        <QuizHeader />
        <Card className="border-0 shadow-lg">
          <CardContent className="p-6 sm:p-8">
            <h2 className="text-2xl font-semibold text-gray-800 mb-2 text-center leading-relaxed">
              Let us know some basics
            </h2>
            <p className="text-center text-sm sm:text-base mb-4 sm:mb-6">
              –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ç–µ–º–ø —Å–Ω–∏–∂–µ–Ω–∏—è
            </p>
            <div className="grid grid-cols-2 gap-4 mb-4 sm:mb-6">
              <div
                className={`flex flex-col items-center justify-center p-4 rounded-lg border-2 cursor-pointer transition-all ${selectedGender === "female" /* –û—Ç—Å—Ç—É–ø –±—ã–ª p-6, —Å—Ç–∞–ª p-4 */
                  ? "border-green-500 bg-green-100"
                  : "border-gray-200 hover:border-green-300 hover:bg-green-50"
                  }`}
                onClick={() => handleGenderSelect("female")}
              >
                <Image
                  src="/basicspage/peruanw.png"
                  alt="Female"
                  width={48} // –†–∞–∑–º–µ—Ä –±—ã–ª 64, —Å—Ç–∞–ª 48
                  height={48} // –†–∞–∑–º–µ—Ä –±—ã–ª 64, —Å—Ç–∞–ª 48
                  className="mb-2 rounded-full"
                />
                <span className="text-gray-700 font-medium">Female</span>
              </div>
              <div
                className={`flex flex-col items-center justify-center p-4 rounded-lg border-2 cursor-pointer transition-all ${selectedGender === "male" /* –û—Ç—Å—Ç—É–ø –±—ã–ª p-6, —Å—Ç–∞–ª p-4 */
                  ? "border-green-500 bg-green-100"
                  : "border-gray-200 hover:border-green-300 hover:bg-green-50"
                  }`}
                onClick={() => handleGenderSelect("male")}
              >
                <Image
                  src="/basicspage/peruanm.png"
                  alt="Male"
                  width={48} // –†–∞–∑–º–µ—Ä –±—ã–ª 64, —Å—Ç–∞–ª 48
                  height={48} // –†–∞–∑–º–µ—Ä –±—ã–ª 64, —Å—Ç–∞–ª 48
                  className="mb-2 rounded-full"
                />
                <span className="text-gray-700 font-medium">Male</span>
              </div>
            </div>
            <div className="mb-4 sm:mb-6">
              <label className="block text-sm font-medium text-gray-700 mb-2">Age</label>
              <div ref={ageRef} tabIndex={-1} className="grid grid-cols-3 sm:grid-cols-5 gap-2 focus:outline-none focus:ring-2 focus:ring-green-500 rounded-lg">
                {["18‚Äì24", "25‚Äì34", "35‚Äì44", "45‚Äì54", "55+"].map(range => (
                  <button
                    type="button"
                    key={range}
                    onClick={() => handleAgeSelect(range)}
                    className={`text-center p-2 sm:p-3 rounded-lg border-2 cursor-pointer transition-all text-sm font-medium
                      ${age === range
                        ? "border-green-500 bg-green-100 text-green-800"
                        : "border-gray-200 text-gray-600 hover:border-green-300 hover:bg-green-50"
                      }`}
                  >
                    {range}
                  </button>
                ))}
              </div>
            </div>
            <div className="grid grid-cols-2 gap-4 mb-4 sm:mb-6">
              <NumericInputWithControls
                label="Height (cm)"
                value={height}
                onChange={setHeight}
                onBlur={() => setTouched((t) => ({ ...t, height: true }))}
                min={HEIGHT_MIN}
                max={HEIGHT_MAX}
                inputRef={heightRef}
                onEnterPress={handleHeightEnter}
              />
              <NumericInputWithControls
                label="Weight (kg)"
                value={weight}
                onChange={setWeight}
                onBlur={() => setTouched((t) => ({ ...t, weight: true }))}
                min={WEIGHT_MIN}
                max={WEIGHT_MAX}
                inputRef={weightRef}
                onEnterPress={handleWeightEnter}
              />
            </div>
            <p className="text-xs text-gray-500 text-center -mt-2 mb-4">
              –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–¥–æ–π–¥—É—Ç ‚Äî –ø–ª–∞–Ω –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ–¥—Å—Ç—Ä–æ–∏–º.
            </p>
            <Button
              ref={nextButtonRef}
              // ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ó–∞–º–µ–Ω–∏–ª–∏ onClick –Ω–∞ onMouseDown
              onMouseDown={() => {
                if (isFormValid) {
                  setShowBMIPage(true);
                }
              }}
              onClick={(e) => e.preventDefault()} // –î–æ–±–∞–≤–∏–º —ç—Ç–æ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –¥–≤–æ–π–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ
              onKeyDown={(e) => {
                if (e.key === 'Enter' && isFormValid) {
                  setShowBMIPage(true);
                }
              }}
              disabled={!isFormValid}
              className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Next
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}

function BMIPage({ selectedGender, age, height, weight, setShowBMIPage, setCurrentStep, BODY_SHAPE_STEP }) {


  // ... (–∑–¥–µ—Å—å –∏–¥—ë—Ç –≤—Å—è —Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞ —Å —Ä–∞—Å—á—ë—Ç–æ–º –ò–ú–¢, –æ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
  if (!selectedGender || !age || !height || !weight) {
    return null
  }
  const BMI_TABLE = { female: { "18-29": 22, "30-44": 23, "45-75": 24 }, male: { "18-29": 23, "30-44": 24, "45-75": 25 }, }
  const bmi = Math.round((weight / Math.pow(height / 100, 2)) * 10) / 10
  let ageBand = "18-29"
  const ageStart = parseInt(age.split('‚Äì')[0]);
  if (ageStart >= 30 && ageStart <= 44) ageBand = "30-44"
  else if (ageStart >= 45) ageBand = "45-75"
  const meanBMI = BMI_TABLE[selectedGender as keyof typeof BMI_TABLE][ageBand as keyof typeof BMI_TABLE.female]
  const diff = Math.round(((bmi - meanBMI) / meanBMI) * 100)
  const comparison = diff > 0 ? "higher" : "lower"
  const getBMICategory = (bmi: number) => { if (bmi < 18.5) return "Below avg"; if (bmi < 25) return "Comfortable"; if (bmi < 30) return "Slightly above"; return "Well above" }
  const markerPosition = Math.min(Math.max((bmi / 40) * 100, 0), 100)


  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-2xl mx-auto">
        <QuizHeader />
        <Card className="border-0 shadow-lg">
          {/* –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –æ—Ç—Å—Ç—É–ø pb-32, —á—Ç–æ–±—ã –±—ã–ª–æ –º–µ—Å—Ç–æ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–Ω–∏–∑—É */}
          <CardContent className="p-4 sm:p-8">
            {/* ... (–≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ò–ú–¢ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */}
            <div className="text-center mb-8">
              <h2 className="text-2xl font-semibold text-gray-800">Your Body Mass Index (BMI) </h2>
            </div>
            <Card className="rounded-xl bg-muted/5 shadow-md p-4 space-y-5 max-w-[440px] mx-auto mb-6">
              <div className="relative">
                <div className="absolute -top-12 transform -translate-x-1/2 z-10" style={{ left: `${markerPosition}%` }} >
                  <Badge className="bg-slate-800 text-white rounded-full px-4 py-1">You ‚Äì {bmi}</Badge>
                </div>
                <div className="absolute -top-12 h-12 border-l border-dashed border-muted transform -translate-x-1/2" style={{ left: `${markerPosition}%` }} ></div>
                <div className="relative pt-1 pb-3">
                  <div className="h-1.5 rounded-full bg-gradient-to-r from-sky-400 via-emerald-500 via-amber-400 to-rose-500"></div>
                  <div className="absolute top-1/2 w-5 h-5 border-2 border-white bg-slate-800 shadow rounded-full transform -translate-x-1/2 -translate-y-1/2" style={{ left: `${markerPosition}%` }} />
                </div>
                <div className="flex justify-between text-xs mt-2 px-1">
                  <span>15</span>
                  <span>18.5</span>
                  <span>25</span>
                  <span>30</span>
                  <span>40</span>
                </div>
              </div>
              <div className="relative -top-2 flex sm:justify-between uppercase tracking-normal leading-tight text-[9px] sm:text-[11px]">
                {["Below avg", "Comfortable", "Slightly above", "Well above"].map((cat) => (
                  <span key={cat} className={`flex-1 text-center sm:flex-initial sm:text-left ${cat === getBMICategory(bmi) ? "font-bold text-primary" : ""}`} >
                    {cat}
                  </span>
                ))}
              </div>
              <div className="text-center mt-2">
                <span className="text-xs text-gray-500">–ò–ú–¢ ‚Äî –ª–∏—à—å –æ—Ä–∏–µ–Ω—Ç–∏—Ä –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ–∑–æ–º</span>
              </div>
              {(() => {
                const category = getBMICategory(bmi)
                let healthNote = ""
                let goodNews = ""
                if (bmi < 18.5) { healthNote = "–ù–∏–∂–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞; –≤–æ–∑–º–æ–∂–µ–Ω –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤, –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –∏ —ç–Ω–µ—Ä–≥–∏–∏."; goodNews = "–ù–µ–±–æ–ª—å—à–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–∞–ª–æ—Ä–∏–π –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏ –æ–±—ã—á–Ω–æ –±—ã—Å—Ç—Ä–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é." } else if (bmi >= 18.5 && bmi < 25) { healthNote = "–ò–ú–¢ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã, –Ω–æ —ç—Ç–æ –Ω–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–∞–≤ —Ç–µ–ª–∞ –∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞."; goodNews = "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ —Å–Ω–∞, –¥–≤–∏–∂–µ–Ω–∏—è –∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –±–µ–ª–∫–∞ ‚Äî –Ω–∞—à –ø–ª–∞–Ω —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø—Ä–æ—Å—Ç—ã–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ü–µ–ª–∏." } else if (bmi >= 25 && bmi < 30) { healthNote = "–ù–µ–º–Ω–æ–≥–æ –≤—ã—à–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞; —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º —ç—Ç–æ –º–æ–∂–µ—Ç –Ω–∞–≥—Ä—É–∂–∞—Ç—å —Å—É—Å—Ç–∞–≤—ã –∏ —Å–µ—Ä–¥—Ü–µ."; goodNews = "–ü–æ—Ç–µ—Ä—è –≤—Å–µ–≥–æ 5‚Äì7% –≤–µ—Å–∞ –∑–∞–º–µ—Ç–Ω–æ —Å–Ω–∏–∑–∏—Ç –Ω–∞–≥—Ä—É–∑–∫—É –∏ —Ä–∏—Å–∫ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º." } else { healthNote = "–ë–æ–ª—å—à–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–º; –ø–æ–≤—ã—à–∞–µ—Ç—Å—è —Ä–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º —Å —Å—É—Å—Ç–∞–≤–∞–º–∏ –∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π."; goodNews = "–ü–æ—à–∞–≥–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –ø—Ä–∏–≤–µ–¥—É—Ç –∫ –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–π –ø–æ—Ç–µ—Ä—è –≤–µ—Å–∞ –∏ —É–ª—É—á—à–µ–Ω–∏–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è —É–∂–µ –≤ –ø–µ—Ä–≤—ã–µ –Ω–µ–¥–µ–ª–∏." }
                return (
                  <>
                    <div className="rounded bg-amber-50 p-3 flex gap-2">
                      <div className="w-5 h-5 bg-amber-400 text-white rounded-full flex items-center justify-center text-xs font-bold">!</div>
                      <div className="text-sm">
                        <span className="font-bold">Health note:</span> {healthNote}
                      </div>
                    </div>
                    <div className="rounded bg-emerald-50 p-3 flex gap-2">
                      <div className="w-5 h-5 bg-emerald-400 text-white rounded-full flex items-center justify-center text-xs font-bold">!</div>
                      <div className="text-sm">
                        <span className="font-bold">Good news:</span> {goodNews}
                      </div>
                    </div>
                  </>
                )
              })()}
            </Card>
            {(() => {
              let comparisonText = ""
              if (bmi < 18.5) { comparisonText = "–í–∞—à –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–ª—è –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã." } else if (bmi >= 18.5 && bmi < 25) { comparisonText = "–í–∞—à –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ä–µ–¥–Ω–µ–º—É —É—Ä–æ–≤–Ω—é –¥–ª—è –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã." } else if (bmi >= 25 && bmi < 30) { comparisonText = "–í–∞—à –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –Ω–µ–º–Ω–æ–≥–æ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —Å—Ä–µ–¥–∏ –∂–µ–Ω—â–∏–Ω –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞." } else { comparisonText = "–í–∞—à –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –∑–∞–º–µ—Ç–Ω–æ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–ª—è –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã." }
              return (
                <div className="mt-6 bg-blue-50 rounded-lg p-4 text-sm text-gray-700">
                  <p>{comparisonText}</p>
                </div>
              )
            })()}
            <div className="text-center space-y-2 mb-8"></div>


            {/* --- –ù–ê–ß–ê–õ–û: –ù–ê–®–ò –ù–û–í–´–ï –ö–ù–û–ü–ö–ò --- */}
            <div className="hidden sm:flex flex-col-reverse sm:flex-row gap-3">
              <Button
                onClick={() => setShowBMIPage(false)}
                variant="outline"
                className="w-full sm:w-auto sm:flex-1 bg-transparent hover:bg-gray-100 text-gray-500 rounded-full py-4 font-semibold text-lg border-2 border-gray-300"
              >
                Back
              </Button>
              <Button
                onClick={() => {
                  setShowBMIPage(false)
                  setCurrentStep(2)
                }}
                className="w-full sm:w-auto sm:flex-1 bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md"
              >
                Continue
              </Button>
            </div>

          </CardContent>
        </Card>
        <div className="sm:hidden h-24">
          <div className="fixed bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-white via-white to-transparent">
            <Button
              onClick={() => {
                setShowBMIPage(false)
                setCurrentStep(2)
              }}
              className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-3 font-semibold text-base shadow-lg"
            >
              Continue
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}


function FinalResultsPage({ finalGoals, eatingProfileSummaryKey, lifestyleProfileSummaryKey, attemptsProfileSummaryKey, answers, age, height, weight, desiredShape, miniQuizAnswers, letterAnswers, setCurrentStep, setUserPath }) {
  // --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è ---
  const calculateBMI = (w: number, h: number) => Math.round((w / Math.pow(h / 100, 2)) * 10) / 10;
  const bmi = (weight && height) ? calculateBMI(weight, height) : 0;

  const getBodyType = (bmiValue: number) => {
    if (bmiValue > 28) {
      return {
        type: "–≠–Ω–¥–æ–º–æ—Ä—Ñ",
        description: "–í–∞—à —Ç–∏–ø —Å–∫–ª–æ–Ω–µ–Ω –∫ –Ω–∞–±–æ—Ä—É –≤–µ—Å–∞ –∏–∑-–∑–∞ –±–æ–ª–µ–µ –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤. –ù–æ –µ—Å—Ç—å –∏ –ø–ª—é—Å: –≤—ã –ª–µ–≥—á–µ –Ω–∞–±–∏—Ä–∞–µ—Ç–µ –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É. –ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî '—Ä–∞–∑–æ–≥–Ω–∞—Ç—å' –º–µ—Ç–∞–±–æ–ª–∏–∑–º.",
      };
    }
    if (bmiValue < 22) {
      return {
        type: "–≠–∫—Ç–æ–º–æ—Ä—Ñ",
        description: "–í–∞–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–æ –Ω–∞–±–∏—Ä–∞—Ç—å –≤–µ—Å, –Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —á–∞—Å—Ç–æ –∫—Ä–æ–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ–ª–∞. –¶–µ–ª—å ‚Äî —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ç–æ–Ω—É—Å–∞.",
      };
    }
    return {
      type: "–ú–µ–∑–æ–º–æ—Ä—Ñ",
      description: "–£ –≤–∞—Å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ä–æ—à–æ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–∏—Ç–∞–Ω–∏–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è —Å–∏—Å—Ç–µ–º—ã.",
    };
  };
  const bodyType = getBodyType(bmi);

  const keyHealthFactors = React.useMemo(() => {
    const labelMapping: Record<string, string> = {
      pregnancy: "–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å",
      diet: "–î–∏–µ—Ç–∞",
      meds: "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
      menopause: "–ú–µ–Ω–æ–ø–∞—É–∑–∞",
      conditions: "–°–æ—Å—Ç–æ—è–Ω–∏—è",
    };

    return Object.entries(miniQuizAnswers)
      .map(([key, value]) => {
        const label = labelMapping[key];
        if (!label) return null;

        if (Array.isArray(value)) {
          const filteredValues = value.filter(v => v !== "None of the above");
          if (filteredValues.length > 0) {
            return `${label}: ${filteredValues.join(', ')}`;
          }
        } else if (typeof value === 'string' && value && value !== "No" && value !== "None" && !value.startsWith("No /")) {
          return `${label}: ${value}`;
        }
        return null;
      })
      .filter(Boolean) as string[];
  }, [miniQuizAnswers]);

  const shapeMapping: Record<string, string> = {
    Slim: "–°—Ç—Ä–æ–π–Ω—É—é",
    Toned: "–ü–æ–¥—Ç—è–Ω—É—Ç—É—é",
    Curvy: "–° –∏–∑–≥–∏–±–∞–º–∏",
    Athletic: "–°–ø–æ—Ä—Ç–∏–≤–Ω—É—é",
  };

  const factorMapping = {
    eating: {
      a: "—Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –±–æ–ª—å—à–∏–º –ø–æ—Ä—Ü–∏—è–º –∏ –∫–∞–ª–æ—Ä–∏–π–Ω–æ–π –µ–¥–µ",
      b: "—Å–∏–ª—å–Ω–∞—è —Ç—è–≥–∞ –∫ —Å–ª–∞–¥–∫–æ–º—É",
      c: "—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ '—Å–∫—Ä—ã—Ç—ã—Ö' –∫–∞–ª–æ—Ä–∏–π",
      mixed: "–Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ",
    },
    lifestyle: {
      a: "–≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ –∏ —É—Å—Ç–∞–ª–æ—Å—Ç–∏",
      b: "—Ñ–∏–∑–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –±–æ–ª–∏ –≤ —Ç–µ–ª–µ",
      c: "—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏–µ",
      mixed: "–Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –¥–Ω—è –∏ —Å–Ω–∞",
    }
  };

  const eatingProfile = eatingProfileSummaryKey ? eatingHabitActions[eatingProfileSummaryKey] : null;
  const lifestyleProfile = lifestyleProfileSummaryKey ? lifestyleHabitActions[lifestyleProfileSummaryKey] : null;
  const attemptsProfile = attemptsProfileSummaryKey ? attemptsHabitActions[attemptsProfileSummaryKey] : null;

  const lifestyleFactor = lifestyleProfileSummaryKey ? factorMapping.lifestyle[lifestyleProfileSummaryKey] : "–ø–æ–≤—ã—à–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞";
  const eatingFactor = eatingProfileSummaryKey ? factorMapping.eating[eatingProfileSummaryKey] : "–Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ";

  // ‚úÖ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
  const relevantInsights = answers
    .filter(a => (a.questionId === 'attempts-1' || a.questionId === 'attempts-2') && attemptInsights[a.questionId]?.[a.answer])
    .map(a => attemptInsights[a.questionId][a.answer]);

  const ingredientDatabase = {
    GREEN_TEA: {
      name: "–ó–µ–ª—ë–Ω—ã–π —á–∞–π",
      explanation: "–ï–≥–æ –º–æ—â–Ω—ã–µ –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã –ø–æ–º–æ–≥—É—Ç –≤–∞—à–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏ –≥–æ—Ä–º–æ–Ω–∞ —Å—Ç—Ä–µ—Å—Å–∞ (–∫–æ—Ä—Ç–∏–∑–æ–ª–∞), –∫–æ—Ç–æ—Ä—ã–π, –∫–∞–∫ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã, –≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—Å.",
    },
    APPLE_VINEGAR: {
      name: "–Ø–±–ª–æ—á–Ω—ã–π —É–∫—Å—É—Å",
      explanation: "–ü–æ–º–æ–∂–µ—Ç —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏, —á—Ç–æ–±—ã —Ä–∞–∑–æ—Ä–≤–∞—Ç—å –ø–æ—Ä–æ—á–Ω—ã–π –∫—Ä—É–≥ '—Ä–µ–∑–∫–∏–π –≥–æ–ª–æ–¥ -> —Å—Ä—ã–≤ –Ω–∞ —Å–ª–∞–¥–∫–æ–µ', –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É —Å–µ–±—è –æ—Ç–º–µ—á–∞–ª–∏.",
    },
    AFRICAN_MANGO: {
      name: "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –º–∞–Ω–≥–æ",
      explanation: "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ, –∫–æ–≥–¥–∞ –ø—Ä–∏–≤—ã—á–∫–∞ –∫ –±–æ–ª—å—à–∏–º –∏–ª–∏ —á–∞—Å—Ç—ã–º –ø–æ—Ä—Ü–∏—è–º –º–µ—à–∞–µ—Ç –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏.",
    },
    GUARANA: {
      name: "–ì—É–∞—Ä–∞–Ω–∞",
      explanation: "–ú—è–≥–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º –∏ –¥–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞—Ä—è–¥ —ç–Ω–µ—Ä–≥–∏–∏, –ø–æ–º–æ–≥–∞—è –±–æ—Ä–æ—Ç—å—Å—è —Å —É—Å—Ç–∞–ª–æ—Å—Ç—å—é, –æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —É–ø–æ–º–∏–Ω–∞–ª–∏.",
    },
  };

  const problemMapping = {
    eating: {
      a: ["BIG_APPETITE", "SUGAR_CRAVINGS"],
      b: ["SUGAR_CRAVINGS"],
      c: ["SUGAR_CRAVINGS"],
      mixed: ["SUGAR_CRAVINGS"],
    },
    lifestyle: {
      a: ["HIGH_STRESS", "LOW_ENERGY"],
      b: ["LOW_ENERGY"],
      c: ["HIGH_STRESS"],
      mixed: ["LOW_ENERGY"],
    },
  };

  const solutionMapping = {
    HIGH_STRESS: {
      title: "–ß—Ç–æ–±—ã –±–æ—Ä–æ—Ç—å—Å—è —Å –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º–∏ —Å—Ç—Ä–µ—Å—Å–∞:",
      ingredients: [ingredientDatabase.GREEN_TEA],
    },
    SUGAR_CRAVINGS: {
      title: "–ß—Ç–æ–±—ã —É–º–µ–Ω—å—à–∏—Ç—å —Ç—è–≥—É –∫ —Å–ª–∞–¥–∫–æ–º—É –∏ —Å—Ä—ã–≤—ã:",
      ingredients: [ingredientDatabase.APPLE_VINEGAR],
    },
    BIG_APPETITE: {
      title: "–ß—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç –±–µ–∑ —á—É–≤—Å—Ç–≤–∞ –≥–æ–ª–æ–¥–∞:",
      ingredients: [ingredientDatabase.AFRICAN_MANGO],
    },
    LOW_ENERGY: {
      title: "–ß—Ç–æ–±—ã –ø–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–µ—Ç–∞–±–æ–ª–∏–∑–º:",
      ingredients: [ingredientDatabase.GUARANA],
    },
  };
  const getUserSolutions = () => {
    const problems = new Set<string>();
    if (eatingProfileSummaryKey && problemMapping.eating[eatingProfileSummaryKey as keyof typeof problemMapping.eating]) {
      problemMapping.eating[eatingProfileSummaryKey as keyof typeof problemMapping.eating].forEach(p => problems.add(p));
    }
    if (lifestyleProfileSummaryKey && problemMapping.lifestyle[lifestyleProfileSummaryKey as keyof typeof problemMapping.lifestyle]) {
      problemMapping.lifestyle[lifestyleProfileSummaryKey as keyof typeof problemMapping.lifestyle].forEach(p => problems.add(p));
    }
    const groupedSolutions = new Map<string, typeof ingredientDatabase.GREEN_TEA[]>();
    problems.forEach(problemKey => {
      const solution = solutionMapping[problemKey as keyof typeof solutionMapping];
      if (solution) {
        if (!groupedSolutions.has(solution.title)) {
          groupedSolutions.set(solution.title, []);
        }
        groupedSolutions.get(solution.title)?.push(...solution.ingredients);
      }
    });
    return Array.from(groupedSolutions.entries());
  };
  const userSolutions = getUserSolutions();
  const otherAnswersCount = letterAnswers.filter(l => l === 'n').length;

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-3xl mx-auto">
        <QuizHeader />

        <div className="bg-white/90 backdrop-blur shadow-lg rounded-2xl p-6 md:p-8 space-y-6">

          <div className="bg-green-50 border border-green-100 rounded-xl p-5">
            <h3 className="font-bold text-lg text-green-800 mb-3 text-center">–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å: –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center mb-4">
              <div><div className="text-sm text-gray-600">–í–æ–∑—Ä–∞—Å—Ç</div><div className="font-semibold text-lg">{age} –ª–µ—Ç</div></div>
              <div><div className="text-sm text-gray-600">–†–æ—Å—Ç</div><div className="font-semibold text-lg">{height} —Å–º</div></div>
              <div><div className="text-sm text-gray-600">–í–µ—Å</div><div className="font-semibold text-lg">{weight} –∫–≥</div></div>
              <div><div className="text-sm text-gray-600">–ò–ú–¢</div><div className="font-semibold text-lg">{bmi}</div></div>
            </div>
            <div className="text-center bg-white rounded-lg p-3">
              <p className="font-semibold text-gray-800">–í–∞—à —Ç–∏–ø —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è: {bodyType.type}</p>
              <p className="text-sm text-gray-600 mt-1">{bodyType.description}</p>
            </div>
          </div>

          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            {desiredShape && (
              <div className="bg-gray-50 rounded-xl p-4 border border-gray-200">
                <h4 className="font-semibold text-gray-500 text-sm mb-2">–í–∞—à–∞ —Ü–µ–ª—å</h4>
                <p className="text-gray-800 text-sm">
                  –í—ã —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ <strong>{shapeMapping[desiredShape] || desiredShape}</strong> —Ñ–∏–≥—É—Ä–µ. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –∏ –¥–æ—Å—Ç–∏–∂–∏–º–∞—è —Ü–µ–ª—å!
                </p>
              </div>
            )}
            <div className="bg-gray-50 rounded-xl p-4 border border-gray-200">
              <h4 className="font-semibold text-gray-500 text-sm mb-2">–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã –∑–¥–æ—Ä–æ–≤—å—è</h4>
              {keyHealthFactors.length > 0 ? (
                <ul className="list-disc list-inside text-sm text-gray-800 space-y-1">
                  {keyHealthFactors.map((factor, index) => (
                    <li key={index}>{factor}</li>
                  ))}
                </ul>
              ) : (
                <p className="text-gray-800 text-sm">–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –æ—Å–æ–±—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.</p>
              )}
            </div>
          </div>

          <div>
            <h3 className="font-bold text-xl text-center text-gray-800 mb-4">–ê–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤</h3>
            <div className="space-y-4">
              {eatingProfile && (
                <div className="p-4 bg-amber-50 rounded-xl">
                  <p><span className="font-semibold">–ü–∏—Ç–∞–Ω–∏–µ:</span> {eatingProfile.title}</p>
                  <p className="text-sm text-gray-700 mt-1"><span className="font-bold text-green-600">–¶–µ–ª—å:</span> {eatingProfile.goal}</p>
                </div>
              )}
              {lifestyleProfile && (
                <div className="p-4 bg-sky-50 rounded-xl">
                  <p><span className="font-semibold">–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏:</span> {lifestyleProfile.title}</p>
                  <p className="text-sm text-gray-700 mt-1"><span className="font-bold text-green-600">–¶–µ–ª—å:</span> {lifestyleProfile.goal}</p>
                </div>
              )}
              {attemptsProfile && (
                <div className="p-4 bg-violet-50 rounded-xl">
                  <p><span className="font-semibold">–í–∞—à–∏ –º–µ—Ç–æ–¥—ã:</span> {attemptsProfile.title}</p>
                  <p className="text-sm text-gray-700 mt-1"><span className="font-bold text-green-600">–¶–µ–ª—å:</span> {attemptsProfile.goal}</p>
                </div>
              )}
            </div>
          </div>

          {/* ‚úÖ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –í–∞—à–∏ –∏–Ω—Å–∞–π—Ç—ã */}
          {relevantInsights.length > 0 && (
            <div>
              <h3 className="font-bold text-xl text-center text-gray-800 mb-4">–í–∞—à–∏ –∏–Ω—Å–∞–π—Ç—ã</h3>
              <div className="space-y-4">
                {relevantInsights.map((insight, index) => (
                  <div key={index} className="p-4 bg-blue-50 rounded-xl border-l-4 border-blue-400">
                    <p className="font-semibold text-blue-800">{insight.title}</p>
                    <p className="text-sm text-gray-700 mt-1">{insight.solution}</p>
                  </div>
                ))}
              </div>
            </div>
          )}

          {otherAnswersCount > 0 && (
            <div className="p-4 bg-gray-100 rounded-xl border border-gray-200">
              <h4 className="font-semibold text-gray-800 text-center mb-2">–û—Å–æ–±—ã–µ –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –ø–ª–∞–Ω–∞</h4>
              <p className="text-sm text-gray-700 text-center">
                {otherAnswersCount >= 3
                  ? "–ú—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã —á–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞–ª–∏ '–î—Ä—É–≥–æ–µ'. –≠—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –≤–∞—à–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏. –ù–∞—à –ø–ª–∞–Ω ‚Äî —ç—Ç–æ –≥–∏–±–∫–∞—è –æ—Å–Ω–æ–≤–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Å–µ–±—è."
                  : "–ú—ã —É—á–ª–∏, —á—Ç–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –≤–∞–º –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç. –ü–ª–∞–Ω –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª–µ–Ω —Å —É—á–µ—Ç–æ–º —ç—Ç–æ–π –≥–∏–±–∫–æ—Å—Ç–∏."
                }
              </p>
            </div>
          )}

          <div className="border-2 border-green-600 rounded-xl p-5 shadow-inner bg-white">
            <h3 className="font-bold text-xl text-center text-green-700 mb-4">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É</h3>
            <p className="text-sm text-gray-700 mb-4">
              –°—É–¥—è –ø–æ –≤–∞—à–∏–º –æ—Ç–≤–µ—Ç–∞–º, –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –¥–≤–∞ —Ñ–∞–∫—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å–∏–ª—å–Ω–æ –∑–∞–º–µ–¥–ª—è—é—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º: <strong>{lifestyleFactor}</strong> –∏ <strong>{eatingFactor}</strong>.
              –í —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –¥–∏–µ—Ç–æ–ª–æ–≥–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–µ —Å –∂–µ—Å—Ç–∫–∏—Ö –¥–∏–µ—Ç, –∞ —Å –ª—ë–≥–∫–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã.
            </p>
            <h4 className="font-semibold text-gray-800 mb-2">–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á:</h4>

            {userSolutions.length > 0 ? (
              userSolutions.map(([title, ingredients], index) => (
                <div key={index} className="mb-4">
                  <h5 className="font-semibold text-gray-700 mb-2">{title}</h5>
                  <div className="bg-green-50 rounded-lg p-4 space-y-2">
                    {ingredients.map(ing => (
                      <div key={ing.name}>
                        <p className="font-bold text-green-700">{ing.name}</p>
                        <p className="text-sm text-gray-600">{ing.explanation}</p>
                      </div>
                    ))}
                  </div>
                </div>
              ))
            ) : (
              <p className="text-sm text-gray-700 text-center">–ú—ã –ø–æ–¥–±–∏—Ä–∞–µ–º –¥–ª—è –≤–∞—Å –ª—É—á—à–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...</p>
            )}
            <p className="text-sm text-gray-600 mt-4">
              –¢–∞–∫–æ–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –ø–æ–º–æ–≥–∞–µ—Ç –º—è–≥–∫–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤ –∏ –∏–∑–±–µ–∂–∞—Ç—å —Å—Ä—ã–≤–æ–≤, —Ä–µ—à–∞—è –ø–µ—Ä–≤–æ–ø—Ä–∏—á–∏–Ω—ã –Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞.
            </p>
          </div>

          <div className="text-center">
            <p className="font-semibold mb-3">–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –Ω–∞–π—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏ 100% –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏, –∞ –µ—â–µ –¥–∞–¥–∏–º:</p>
            <div className="flex flex-col md:flex-row justify-center gap-4">
              <div className="flex-1 bg-green-50 border border-green-200 rounded-xl p-4 flex items-center gap-3">
                <span className="text-2xl">üìÑ</span>
                <span className="text-left font-medium text-gray-800">–õ–µ–≥–∫–∏–π –ø–ª–∞–Ω –ø–æ –ø–∏—Ç–∞–Ω–∏—é –Ω–∞ 14 –¥–Ω–µ–π</span>
              </div>
              <div className="flex-1 bg-green-50 border border-green-200 rounded-xl p-4 flex items-center gap-3">
                <span className="text-2xl">‚úÖ</span>
                <span className="text-left font-medium text-gray-800">–ü–∞–º—è—Ç–∫–∞ –ø–æ –ø—Ä–∏–≤—ã—á–∫–∞–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</span>
              </div>
            </div>
          </div>

          <div className="mt-6 space-y-4">
            <div className="bg-gray-50 border border-gray-200 rounded-xl p-4">
              <h3 className="font-bold text-center text-gray-800 mb-3">–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
              <div className="flex flex-col sm:flex-row gap-3">
                {/* –ö–Ω–æ–ø–∫–∞ ‚Ññ1: –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–ª–∞–Ω */}
                <Button
                  onClick={() => {
                    setUserPath('plan');
                    setCurrentStep(15);
                  }}
                  variant="outline"
                  className="flex-1 bg-white hover:bg-gray-100 text-gray-700 rounded-full py-3 font-semibold text-base border-2 border-gray-300"
                >
                  –ü–æ–ª—É—á–∏—Ç—å –ø–∞–º—è—Ç–∫—É –∏ –ø–ª–∞–Ω
                </Button>
                {/* –ö–Ω–æ–ø–∫–∞ ‚Ññ2: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å —Å –∫–∞–ø—Å—É–ª–∞–º–∏ */}
                <Button
                  onClick={() => {
                    setUserPath('capsules');
                    setCurrentStep(16);
                  }}
                  className="flex-1 bg-green-600 hover:bg-green-700 text-white rounded-full py-3 font-semibold text-base shadow-md h-auto"
                >
                  <div className="flex flex-col items-center">
                    <span>–ù–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–∞–ø—Å—É–ª—ã</span>
                    <span className="text-xs font-normal opacity-80 mt-1">–∏ –ø–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω</span>
                  </div>
                </Button>
              </div>
            </div>
            <p className="text-xs text-gray-500 text-center">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—É—á–∞—é—â–∞—è, –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤—Ä–∞—á–∞
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

// --- –ù–ê–ß–ê–õ–û: –ù–û–í–ê–Ø, –£–õ–£–ß–®–ï–ù–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –ü–õ–ê–ù–ê ---
function PlanInfoPage({
  setCurrentStep,
  eatingProfileSummaryKey,
  lifestyleProfileSummaryKey,
  attemptsProfileSummaryKey,
  desiredShape,
  setIsProcessingOrder,
  isProcessingOrder,
  setOrderDetails,
  answers // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}) {

  // --- –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ñ–æ—Ä–º—ã (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
  const [formName, setFormName] = useState('');
  const [formPhone, setFormPhone] = useState('');
  const [formEmail, setFormEmail] = useState('');
  const [emailError, setEmailError] = useState('');

  const handleOrderSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (formEmail && !formEmail.includes('@')) {
      setEmailError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email —Å —Å–∏–º–≤–æ–ª–æ–º "@"');
      return;
    }
    setIsProcessingOrder(true);
    const orderId = Math.random().toString(36).substr(2, 6).toUpperCase();
    setTimeout(() => {
      setOrderDetails({ name: formName, phone: formPhone, email: formEmail, orderId });
      setCurrentStep(19);
      setIsProcessingOrder(false);
    }, 1500);
  };

  // ‚úÖ –ü–†–û–í–ï–†–ö–ê: –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–ª–∞–Ω–∞ –∏ –ø–∞–º—è—Ç–∫–∏ –Ω–∞ –º–µ—Å—Ç–µ
  const dynamicPlanList = React.useMemo(() => {
    const list = [];
    if (eatingProfileSummaryKey && planContentDatabase.eating[eatingProfileSummaryKey]) list.push(planContentDatabase.eating[eatingProfileSummaryKey]);
    if (lifestyleProfileSummaryKey && planContentDatabase.lifestyle[lifestyleProfileSummaryKey]) list.push(planContentDatabase.lifestyle[lifestyleProfileSummaryKey]);
    if (attemptsProfileSummaryKey && planContentDatabase.attempts[attemptsProfileSummaryKey]) list.push(planContentDatabase.attempts[attemptsProfileSummaryKey]);
    return list.length > 0 ? list : ["–ü—Ä–æ—Å—Ç—ã–µ –∏ —Å—ã—Ç–Ω—ã–µ –ø–µ—Ä—É–∞–Ω—Å–∫–∏–µ –±–ª—é–¥–∞ –Ω–∞ 20-30 –º–∏–Ω—É—Ç."];
  }, [eatingProfileSummaryKey, lifestyleProfileSummaryKey, attemptsProfileSummaryKey]);

  const dynamicHandbookList = React.useMemo(() => {
    const list = [];
    if (lifestyleProfileSummaryKey && handbookContentDatabase.lifestyle[lifestyleProfileSummaryKey]) list.push(handbookContentDatabase.lifestyle[lifestyleProfileSummaryKey]);
    if (eatingProfileSummaryKey && handbookContentDatabase.eating[eatingProfileSummaryKey]) list.push(handbookContentDatabase.eating[eatingProfileSummaryKey]);
    if (desiredShape && shapeMapping[desiredShape]) list.push(`–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏, –∫–∞–∫ –ø—Ä–∏–π—Ç–∏ –∫ <strong>${shapeMapping[desiredShape].toLowerCase()}</strong> —Ñ–∏–≥—É—Ä–µ.`);
    else list.push("–°–æ–≤–µ—Ç—ã –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ñ–∏–≥—É—Ä—ã –≤–∞—à–µ–π –º–µ—á—Ç—ã.");
    return list;
  }, [eatingProfileSummaryKey, lifestyleProfileSummaryKey, desiredShape]);

  // üî• –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
  const dynamicProblems = React.useMemo(() => {
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –æ—Ç–≤–µ—Ç–∞–º –∫–≤–∏–∑–∞ (–≤–æ–ø—Ä–æ—Å—ã 0-9)
    return quizQuestions.slice(0, 10).map(question => {
      const userAnswer = answers.find(ans => ans.questionId === question.id);
      if (userAnswer) {
        const mapping = problemSolutionMapping[userAnswer.answer];
        // –ï—Å–ª–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –Ω–∞—à–µ–π –Ω–æ–≤–æ–π –±–∞–∑–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
        if (mapping) {
          return { problem: mapping.problem, solution: mapping.solution };
        }
      }
      return null;
    })
      .filter(Boolean); // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–æ—Ç–≤–µ—Ç—ã "–î—Ä—É–≥–æ–µ" –∏ —Ç.–¥.)
  }, [answers]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-green-50 p-4 pb-12">
      <div className="max-w-3xl mx-auto">
        <QuizHeader />
        <Card className="border-0 shadow-lg bg-white/90 backdrop-blur">
          <CardContent className="p-6 sm:p-8 space-y-8">

            <div className="text-center">
              <Sparkles className="w-12 h-12 text-yellow-400 mx-auto mb-3" />
              <h1 className="text-2xl sm:text-3xl font-bold text-gray-800 mb-2">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –≥–æ—Ç–æ–≤!</h1>
              <p className="text-base text-gray-600">
                –û–Ω —Å–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏ —Ñ–∏–≥—É—Ä—ã ‚Äî <strong>{shapeMapping[desiredShape]?.toLowerCase() || '—Ñ–∏–≥—É—Ä—ã –º–µ—á—Ç—ã'}</strong>.
              </p>
            </div>

            <div className="bg-green-50 border-2 border-green-200 rounded-2xl p-5">
              <h2 className="font-bold text-xl text-center text-green-800 mb-4">–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –≤–∞—à–µ–≥–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞:</h2>
              <div className="grid md:grid-cols-2 gap-4">
                <div>
                  <div className="flex items-center gap-3 mb-3"><BookOpen className="w-8 h-8 text-green-700 flex-shrink-0" /><h3 className="font-semibold text-lg text-green-800">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω</h3></div>
                  <ul className="space-y-2 text-sm text-gray-700 list-disc list-inside">
                    {dynamicPlanList.map((item, index) => (<li key={index}>{item}</li>))}
                  </ul>
                </div>
                <div className="mt-4 md:mt-0">
                  <div className="flex items-center gap-3 mb-3"><CheckCircle2 className="w-8 h-8 text-green-700 flex-shrink-0" /><h3 className="font-semibold text-lg text-green-800">–ü–∞–º—è—Ç–∫–∞ –ø–æ –ø—Ä–∏–≤—ã—á–∫–∞–º</h3></div>
                  <ul className="space-y-2 text-sm text-gray-700 list-disc list-inside">
                    {dynamicHandbookList.map((item, index) => (<li key={index} dangerouslySetInnerHTML={{ __html: item }} />))}
                  </ul>
                </div>
              </div>
            </div>

            {/* üî• –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º */}
            <div className="bg-sky-50 border border-sky-200 rounded-2xl p-5">
              <div className="flex flex-col sm:flex-row items-center text-center sm:text-left gap-4">
                <div className="bg-white p-3 rounded-full ring-4 ring-sky-100"><TrendingUp className="w-10 h-10 text-sky-600 flex-shrink-0" /></div>
                <div>
                  <h3 className="font-bold text-lg text-sky-800">–î–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:</h3>
                  <p className="text-sm text-gray-700 mt-1">
                    –í–∞—à –ø–ª–∞–Ω ‚Äî —ç—Ç–æ –º–æ—â–Ω–∞—è –æ—Å–Ω–æ–≤–∞. –ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –≤–∞–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–º –∏–∑–Ω—É—Ç—Ä–∏, —Ä–µ—à–∞—è –∫–æ—Ä–Ω–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.
                  </p>
                </div>
              </div>
              {/* –†–µ–Ω–¥–µ—Ä–∏–º –Ω–∞—à –Ω–æ–≤—ã–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ */}
              {dynamicProblems.length > 0 && (
                <div className="mt-4 pt-4 border-t border-sky-200">
                  <h4 className="font-semibold text-gray-800 mb-2 text-sm">–ö–∞–∫ –∫–æ–º–ø–ª–µ–∫—Å –ø–æ–º–æ–≥ –±—ã —Å –≤–∞—à–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏:</h4>
                  <ul className="space-y-1 text-sm text-gray-700">
                    {dynamicProblems.map((item, index) => (
                      <li key={index} className="flex items-start">
                        <span className="w-4 h-4 mr-2 mt-0.5 text-sky-500">‚óÜ</span>
                        <span>{item.problem} ‚Äì <span className="font-semibold text-sky-700">{item.solution}</span></span>
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>

            <form id="plan-form" className="space-y-4 pt-4" onSubmit={handleOrderSubmit}>
              {/* ... (–∫–æ–¥ —Ñ–æ—Ä–º—ã –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */}
              <h3 className="text-lg sm:text-xl font-bold text-center text-gray-800">–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω?</h3><div><label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">–ü–æ–ª–Ω–æ–µ –∏–º—è *</label><input id="name" name="name" required value={formName} onChange={(e) => setFormName(e.target.value)} className="w-full px-4 py-3 border border-gray-300 rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 text-base" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" /></div><div><label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-2">–ù–æ–º–µ—Ä WhatsApp *</label><IMaskInput mask="+{51} (000) 000-000" id="phone" name="phone" required value={formPhone} onAccept={(value) => setFormPhone(value as string)} className="w-full px-4 py-3 border border-gray-300 rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 text-base" placeholder="+51 (___) ___-___" type="tel" /></div><div><label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">Email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label><input id="email" name="email" type="email" value={formEmail} onChange={(e) => { setFormEmail(e.target.value); if (emailError) setEmailError(''); }} onBlur={() => { if (formEmail && !formEmail.includes('@')) { setEmailError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email'); } else { setEmailError(''); } }} className={`w-full px-4 py-3 border rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 text-base transition-colors ${emailError ? 'border-red-500' : 'border-gray-300'}`} placeholder="–ï—Å–ª–∏ WhatsApp –Ω–µ—É–¥–æ–±–µ–Ω" />{emailError && <p className="mt-2 text-xs text-red-600 pl-4">{emailError}</p>}</div><div className="pt-2 text-center"><Button type="submit" disabled={isProcessingOrder} className="w-full max-w-md mx-auto bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-lg transition-transform transform hover:scale-105 disabled:opacity-75">{isProcessingOrder ? (<span className="flex items-center justify-center"><Loader2 className="w-5 h-5 mr-2 animate-spin" /> –û—Ç–ø—Ä–∞–≤–∫–∞...</span>) : ("–ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω –∏ –ø–∞–º—è—Ç–∫—É")}</Button><p className="text-xs text-gray-500 mt-3">–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.</p></div>
            </form>

          </CardContent>
        </Card>
      </div>
    </div>
  );
}

// --- –ù–ê–ß–ê–õ–û: –ù–û–í–ê–Ø, –£–õ–£–ß–®–ï–ù–ù–ê–Ø THANK YOU PAGE ---
function PlanThankYouPage({ setCurrentStep, orderDetails, setOrderDetails }) {
  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–µ –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
  if (!orderDetails) return null;

  // --- –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ ---
  const [isEditingPhone, setIsEditingPhone] = useState(false);
  const [newPhone, setNewPhone] = useState(orderDetails.phone);
  const [isUpdatingPhone, setIsUpdatingPhone] = useState(false);

  const handleSavePhone = () => {
    setIsUpdatingPhone(true);
    setTimeout(() => {
      setOrderDetails({ ...orderDetails, phone: newPhone });
      setIsUpdatingPhone(false);
      setIsEditingPhone(false);
    }, 1500);
  };

  // --- 2-–º–∏–Ω—É—Ç–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–ª–∞–Ω–∞ ---
  const [timer, setTimer] = React.useState(120);

  React.useEffect(() => {
    if (timer === 0) return;
    const interval = setInterval(() => {
      setTimer((prev) => (prev <= 1 ? 0 : prev - 1));
    }, 1000);
    return () => clearInterval(interval);
  }, [timer]);

  const minutes = Math.floor(timer / 60);
  const seconds = timer % 60;
  const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-green-50 p-4 pb-12">
      <div className="max-w-2xl mx-auto">
        <QuizHeader />
        <Card className="border-0 shadow-lg bg-white/90 backdrop-blur">
          <CardContent className="p-6 sm:p-8 space-y-6 text-center">

            <div>
              <CheckCircle2 className="w-16 h-16 text-green-500 mx-auto mb-4" />
              <h1 className="text-2xl sm:text-3xl font-bold text-gray-800">–°–ø–∞—Å–∏–±–æ, {orderDetails.name}!</h1>
              <p className="text-base text-gray-600 mt-2">
                –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —É–∂–µ –≤ –ø—É—Ç–∏ –Ω–∞ –Ω–æ–º–µ—Ä WhatsApp:
              </p>
              <div className="mt-3 font-semibold text-lg bg-gray-100 border border-gray-200 rounded-full inline-block px-4 py-1">
                {orderDetails.phone}
              </div>

              {timer > 0 && (
                <div className="mt-3 text-xs text-center text-gray-500 bg-white/70 rounded-full p-1 max-w-xs mx-auto">
                  –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–∏–¥—É—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ <span className="font-mono font-semibold">{formattedTime}</span>
                </div>
              )}

              {isEditingPhone ? (
                <div className="mt-4 max-w-sm mx-auto space-y-2 text-left">
                  <IMaskInput
                    mask="+{51} (000) 000-000"
                    value={newPhone}
                    onAccept={(value) => setNewPhone(value as string)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-green-500"
                  />
                  <Button onClick={handleSavePhone} disabled={isUpdatingPhone} size="sm" className="w-full bg-green-600 hover:bg-green-700">
                    {isUpdatingPhone ? (
                      <span className="flex items-center justify-center"><Loader2 className="w-4 h-4 mr-2 animate-spin" /> –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...</span>
                    ) : (
                      "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ"
                    )}
                  </Button>
                </div>
              ) : (
                <button onClick={() => setIsEditingPhone(true)} className="mt-3 text-sm flex items-center justify-center gap-1.5 text-gray-500 hover:text-green-600 mx-auto">
                  <Edit3 className="w-4 h-4" />
                  <span>–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä</span>
                </button>
              )}
            </div>

            <div className="bg-sky-50 border-2 border-sky-200 rounded-2xl p-5 shadow-inner">
              <h2 className="font-bold text-xl text-sky-800">–û—Ç–ª–∏—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏!</h2>
              <p className="text-sm text-gray-700 mt-2 mb-4">
                –ü–æ–∫–∞ –º—ã –≥–æ—Ç–æ–≤–∏–ª–∏ –≤–∞—à –ø–ª–∞–Ω, –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–æ–±—Ä–∞–ª–∞ –∫–æ–º–ø–ª–µ–∫—Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –∏–¥–µ–∞–ª—å–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç –≤–∞—à –ø–ª–∞–Ω –∏ –ø–æ–º–æ–∂–µ—Ç —É—Å–∫–æ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
                –í –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ —É–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –º—ã –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–ª–∏ –¥–ª—è –≤–∞—Å <strong>–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É 50%</strong>.
              </p>
              <Button
                onClick={() => setCurrentStep(20)}
                className="w-full max-w-md mx-auto bg-green-600 hover:bg-green-700 text-white rounded-full py-3 font-semibold text-base shadow-lg transition-transform transform hover:scale-105"
              >
                –£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ
              </Button>
            </div>

            <p className="text-sm text-gray-500 pt-2">
              –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –≤–∞—à –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω —É–∂–µ –≤ –ø—É—Ç–∏. –ñ–µ–ª–∞–µ–º –≤–∞–º –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!
            </p>

          </CardContent>
        </Card>
      </div>
    </div>
  );
}

// 14. –®–∞–≥: –∫–∞–∫—É—é —Ñ–∏–≥—É—Ä—É –≤—ã —Ö–æ—Ç–∏—Ç–µ
function BodyShapeStep({ desiredShape, setDesiredShape, setAnswers, setCurrentStep }) {
  const options = [
    { key: "Slim", title: "–°—Ç—Ä–æ–π–Ω—É—é", hint: "–ò–∑—è—â–Ω–∞—è, —Å –ø–ª–æ—Å–∫–∏–º –∂–∏–≤–æ—Ç–æ–º", img: "/bodyshape/slim.jpg" },
    { key: "Toned", title: "–ü–æ–¥—Ç—è–Ω—É—Ç—É—é", hint: "–° –Ω–µ–±–æ–ª—å—à–æ–π –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å–æ–π", img: "/bodyshape/toned.jpg" },
    { key: "Curvy", title: "–° –∏–∑–≥–∏–±–∞–º–∏", hint: "–û–∫—Ä—É–≥–ª–∞—è –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è", img: "/bodyshape/curved.jpg" },
    { key: "Athletic", title: "–°–ø–æ—Ä—Ç–∏–≤–Ω—É—é", hint: "–° –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–º–∏ –º—ã—à—Ü–∞–º–∏", img: "/bodyshape/athletic.jpg" },
  ]

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±—Ä–∞–ª–∏ –ª–∏—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø py-8 –æ—Ç—Å—é–¥–∞ */}
      <div className="max-w-3xl mx-auto">
        {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç—Å—Ç—É–ø py-4 —Å—é–¥–∞ */}
        <QuizHeader />

        <div className="bg-white/90 backdrop-blur shadow-lg rounded-2xl p-6 md:p-8 space-y-6">
          <h2 className="text-2xl sm:text-3xl font-bold text-center text-gray-900">–ö–∞–∫—É—é —Ñ–∏–≥—É—Ä—É –≤—ã —Ö–æ—Ç–∏—Ç–µ?</h2>
          <p className="mt-3 text-center text-gray-600 text-sm sm:text-base">
            –í—ã–±–µ—Ä–∏—Ç–µ —Å–∏–ª—É—ç—Ç ‚Äî –º—ã –ø–æ–¥—Å—Ç—Ä–æ–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–º–µ–Ω–Ω–æ –ø–æ–¥ —ç—Ç—É —Ü–µ–ª—å.
          </p>

          <div className="mt-8 grid grid-cols-2 sm:grid-cols-4 gap-4">
            {options.map(opt => {
              const selected = desiredShape === opt.key
              return (
                <button
                  key={opt.key}
                  type="button"
                  onClick={() => setDesiredShape(opt.key)}
                  aria-pressed={selected}
                  className={[
                    "group w-full rounded-2xl p-4 transition",
                    "bg-white border border-gray-200 shadow-sm hover:shadow-md hover:-translate-y-0.5",
                    "focus:outline-none focus:ring-2 focus:ring-emerald-500",
                    selected ? "ring-2 ring-emerald-500 bg-emerald-50/60" : ""
                  ].join(" ")}
                >
                  <div className="flex flex-col items-center">
                    <div className="flex items-center justify-center w-16 h-16 rounded-xl bg-emerald-50/60 ring-1 ring-emerald-100/60 overflow-hidden mb-2">
                      <Image
                        src={opt.img}
                        alt={opt.title}
                        width={80}
                        height={112}
                        sizes="64px"
                        className="w-16 h-16 object-contain"
                        priority={false}
                      />
                    </div>
                    <div className="text-gray-900 font-semibold">{opt.title}</div>
                    <div className="text-gray-500 text-xs mt-1">{opt.hint}</div>
                  </div>
                </button>
              )
            })}
          </div>

          <div className="mt-8 flex flex-col-reverse sm:flex-row gap-3">
            {/* –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" - –ì–ª–∞–≤–Ω—ã–π —Å—Ç–∏–ª—å —Å –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–•–†–ê–ù–ï–ù–ù–û–ô –õ–û–ì–ò–ö–û–ô */}
            <Button
              disabled={!desiredShape}
              onClick={() => {
                if (!desiredShape) return;
                const entry: QuizAnswer = {
                  questionId: "goal:body-shape",
                  answer: desiredShape,
                  category: "goal",
                };
                setAnswers(prev => [
                  ...prev.filter(a => a.questionId !== "goal:body-shape"),
                  entry
                ]);
                setCurrentStep(3); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É "Transition"
              }}
              className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md disabled:bg-gray-300 disabled:cursor-not-allowed"
            >
              –î–∞–ª–µ–µ
            </Button>
          </div>
        </div>
      </div>
    </div>
  )
}

function PreQuestionnaireIntroPage({ setCurrentStep }) {
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –∏–∫–æ–Ω–æ–∫ –≤—ã–Ω–µ—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  const introIcons = [
    { emoji: "üçº", label: "–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å" },
    { emoji: "ü•¶", label: "–†–∞—Ü–∏–æ–Ω" },
    { emoji: "üíä", label: "–¢–∞–±–ª–µ—Ç–∫–∏" },
    { emoji: "üß¨", label: "–ì–æ—Ä–º–æ–Ω—ã" },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4 pb-16">
      <div className="max-w-2xl mx-auto">
        {/* Header */}
        <QuizHeader />

        <Card className="border-0 shadow-lg">
          <CardContent className="p-6 sm:p-8">
            <h2 className="text-2xl font-bold text-center mb-4">–°–¥–µ–ª–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –µ—â—ë —Ç–æ—á–Ω–µ–µ</h2>

            <p className="text-gray-700 text-base sm:text-lg text-center mb-6">
              –ú—ã —É–∂–µ –∑–Ω–∞–µ–º –≤–∞—à —Ä–æ—Å—Ç, –≤–µ—Å –∏ —Ü–µ–ª—å. –û—Å—Ç–∞–ª–æ—Å—å —É—á–µ—Å—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–∏—Ç–∞–Ω–∏—è, –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω–∞ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ
              –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —á—Ç–æ–±—ã —Ä–µ—Ü–µ–ø—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥–æ—à—ë–ª –∏–º–µ–Ω–Ω–æ –≤–∞–º.
            </p>

            {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—é –¥–ª—è –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –≤–∏–¥–∞ */}
            <div className="flex justify-center items-start mb-6">
              {introIcons.map((item) => (
                <div key={item.label} className="flex flex-col items-center w-20">
                  {/* –†–∞–∑–º–µ—Ä—ã –∫—Ä—É–≥–∞ –∏ –∏–∫–æ–Ω–∫–∏ —Å—Ç–∞–ª–∏ –º–µ–Ω—å—à–µ */}
                  <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center text-xl mb-2">
                    {item.emoji}
                  </div>
                  <span className="text-xs text-center">{item.label}</span>
                </div>
              ))}
            </div>

            {/* Info Box */}
            <div className="bg-blue-50 rounded-lg p-3 text-sm text-gray-700 mb-6">
              <ul className="space-y-1">
                <li>‚Ä¢ –û—Ç–≤–µ—Ç—ã –∑–∞–π–º—É—Ç –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã</li>
                <li>‚Ä¢ –ü–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ</li>
                <li>‚Ä¢ –ú–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã</li>
              </ul>
            </div>

            <Button
              onClick={() => setCurrentStep(4)}
              className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md"
            >
              –ù–∞—á–∞—Ç—å 5 –≤–æ–ø—Ä–æ—Å–æ–≤
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  )
};

function MiniQuestionPage({ miniQuizStep, miniQuizAnswers, setMiniQuizAnswers, setMiniQuizCompleted, setCurrentStep, setMiniQuizStep }) {

  const question = miniQuestions[miniQuizStep]
  if (!question) return null

  const handleRadioChange = (value: string) => {
    setMiniQuizAnswers((prev) => ({
      ...prev,
      [question.id]: value,
    }))
  }

  const handleCheckboxChange = (option: string, checked: boolean) => {
    setMiniQuizAnswers((prev) => {
      const currentAnswers = (prev[question.id] as string[]) || []

      if (checked) {
        return {
          ...prev,
          [question.id]: [...currentAnswers, option],
        }
      } else {
        return {
          ...prev,
          [question.id]: currentAnswers.filter((item) => item !== option),
        }
      }
    })
  }

  const isValidAnswer = () => {
    const answer = miniQuizAnswers[question.id]
    if (question.type === "radio") {
      return !!answer
    } else {
      return Array.isArray(answer) && answer.length > 0
    }
  }

  const handleNext = () => {
    if (miniQuizStep === 4) {
      // After last mini question, mark as completed and go to intro page
      setMiniQuizCompleted(true)
      setCurrentStep(5)
    } else {

      setMiniQuizStep(miniQuizStep + 1)
    }
  }

  const handleSkip = () => {
    // Mark answer as skipped
    setMiniQuizAnswers((prev) => ({
      ...prev,
      [question.id]: question.type === "radio" ? "" : [],
    }))

    if (miniQuizStep === 4) {
      setCurrentStep(5)
    } else {
      setMiniQuizStep(miniQuizStep + 1)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50">
      <div className="p-4">
        <div className="max-w-2xl mx-auto">
          {/* New Header with Progress */}
          <div className="flex justify-between items-center mb-4">
            <QuizHeader />
            <span className="text-sm text-gray-600 px-4">Step {miniQuizStep + 1} of 5</span>
          </div>

          {/* Question Card */}
          <Card className="shadow-lg border-0">
            <CardContent className="p-4 sm:p-6">
              <h2 className="text-green-600 text-xl font-semibold mb-4">{question.title}</h2>

              {question.type === "radio" ? (
                <div className="space-y-3">
                  {question.options.map((option, index) => (
                    <div
                      key={index}
                      onClick={() => handleRadioChange(option)}
                      className={`flex items-center space-x-3 p-3 rounded-xl border cursor-pointer transition-colors ${miniQuizAnswers[question.id] === option
                        ? "border-green-500 bg-green-50"
                        : "border-gray-200 hover:bg-green-300 hover:bg-green-50"
                        }`}
                    >
                      <div
                        className={`w-4 h-4 rounded-full border-2 ${miniQuizAnswers[question.id] === option ? "border-green-500 bg-green-500" : "border-gray-300"
                          }`}
                      >
                        {miniQuizAnswers[question.id] === option && (
                          <div className="w-2 h-2 bg-white rounded-full m-0.5"></div>
                        )}
                      </div>
                      <span className="flex-1 text-gray-700">{option}</span>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="space-y-3">
                  {question.options.map((option, index) => (
                    <div
                      key={index}
                      onClick={() => {
                        const currentAnswers = (miniQuizAnswers[question.id] as string[]) || []
                        const isChecked = currentAnswers.includes(option)
                        handleCheckboxChange(option, !isChecked)
                      }}
                      className="flex items-center space-x-3 p-3 rounded-xl border hover:bg-green-50 transition-colors cursor-pointer"
                    >
                      <div
                        className={`w-4 h-4 rounded border-2 flex items-center justify-center ${((miniQuizAnswers[question.id] as string[]) || []).includes(option)
                          ? "border-green-500 bg-green-500"
                          : "border-gray-300"
                          }`}
                      >
                        {((miniQuizAnswers[question.id] as string[]) || []).includes(option) && (
                          <div className="text-white text-xs">‚úì</div>
                        )}
                      </div>
                      <span className="flex-1 text-gray-700">{option}</span>
                    </div>
                  ))}
                </div>
              )}

              {/* Buttons */}
              <div className="mt-6 space-y-4">
                <Button
                  onClick={handleNext}
                  disabled={!isValidAnswer()}
                  className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {miniQuizStep === 4 ? "–£—á—Ç–µ–º –≤ –ø–ª–∞–Ω–µ" : "Next"}
                </Button>

                <div className="text-center">
                  <button onClick={handleSkip} className="text-gray-500 hover:text-gray-700 text-sm underline">
                    Skip
                  </button>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

function PreMainQuizIntroPage({ setCurrentStep }) {
  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-2xl mx-auto">
        {/* Header */}
        <QuizHeader />

        <div className="relative">
          <div className="hidden sm:flex absolute -top-7 right-2 items-center gap-2 text-sm lg:text-base text-gray-500">
            <Timer className="w-5 h-5 lg:w-6 lg:h-6 text-gray-400" strokeWidth={2} />
            <span>2 –º–∏–Ω—É—Ç—ã</span>
          </div>

          <Card className="border-0 shadow-lg bg-white/90 backdrop-blur">
            <CardContent className="p-6 sm:p-8">
              <div className="sm:hidden flex items-center justify-end gap-1 text-xs text-gray-500 mb-2">
                <Timer className="w-4 h-4 text-gray-400" strokeWidth={1.75} />
                <span>2 –º–∏–Ω—É—Ç—ã</span>
              </div>

              <div className="text-center">

                <PlanPreviewLocked />

                {/* –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É —Å mt-6 –¥–æ mt-4 */}
                <h2 className="text-xl sm:text-2xl font-bold text-gray-800 mt-4">
                  –û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
                </h2>

                {/* –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã px, py */}
                <div className="mt-4 text-left rounded-xl border border-green-200 bg-green-50 px-4 py-3">
                  <div className="flex items-start gap-4">
                    <Gift className="w-8 h-8 text-green-600 mt-1" />
                    <div>
                      <p className="font-semibold text-gray-800 text-lg">
                        –ü–æ—Å–ª–µ –æ–ø—Ä–æ—Å–∞ ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π <span className="whitespace-nowrap">14-–¥–Ω–µ–≤–Ω—ã–π –ø–ª–∞–Ω</span>
                      </p>
                      <ul className="mt-3 space-y-2 text-gray-700 text-base">
                        <li className="flex items-start gap-2">
                          <CheckCircle2 className="w-4 h-4 mt-1 flex-shrink-0" />
                          <span>–ü–∏—Ç–∞–Ω–∏–µ: –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å</span>
                        </li>
                        <li className="flex items-start gap-2">
                          <CheckCircle2 className="w-4 h-4 mt-1 flex-shrink-0" />
                          <span>–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã</span>
                        </li>
                        <li className="flex items-start gap-2">
                          <CheckCircle2 className="w-4 h-4 mt-1 flex-shrink-0" />
                          <span>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è</span>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>

                {/* –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É —Å mt-8 –¥–æ mt-6 */}
                <Button
                  onClick={() => setCurrentStep(6)}
                  className="mt-6 w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤–æ–ø—Ä–æ—Å–∞–º
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}

function EatingSummaryPage({ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }) {
  const summaryKey = eatingProfileSummaryKey || 'mixed';
  const content = eatingHabitActions[summaryKey];

  const handleContinue = () => {
    if (isPlanApplied) return;
    setIsPlanApplied(true);
    setTimeout(() => {
      setShowFact(false);
      setCurrentQuizStep(3);
      setIsPlanApplied(false);
    }, 1500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-2xl mx-auto">
        <Card className="border-0 shadow-lg overflow-hidden">
          <CardContent className="p-0 sm:p-0">
            {/* –í—ã—Å–æ—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å—Ç–∞–ª–∞ h-48 –≤–º–µ—Å—Ç–æ h-56 */}
            <Image
              src={content.imageSrc}
              alt="Habit illustration"
              width={600}
              height={400}
              className="w-full h-48 object-contain"
            />

            <div className="border-t border-gray-100"></div>

            {/* –û—Å–Ω–æ–≤–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã p-6 -> p-4 */}
            <div className="p-4 sm:p-6 bg-gradient-to-b from-white to-gray-50/50">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –æ—Ç—Å—Ç—É–ø mb-6 -> mb-4 */}
              <h2 className="text-lg font-bold text-center text-gray-800 mb-4">
                {content.title}
              </h2>

              {/* –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏ space-y-4 -> space-y-3 */}
              <div className="space-y-3">
                {/* –û—Ç—Å—Ç—É–ø—ã p-4 -> p-3, —Ç–µ–∫—Å—Ç text-base -> text-sm, —É–±—Ä–∞–Ω leading-relaxed */}
                <div className="bg-amber-50 p-3 rounded-xl border-l-4 border-amber-400 shadow-sm">
                  <h3 className="text-xs font-semibold text-gray-500 uppercase tracking-wider">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</h3>
                  <p className="text-sm text-gray-800 mt-1">{content.habit}</p>
                </div>

                <div className="bg-green-50 p-3 rounded-xl border-l-4 border-green-500 shadow-sm">
                  <h3 className="text-xs font-semibold text-gray-500 uppercase tracking-wider">–í–∞—à–∞ —Ü–µ–ª—å –Ω–∞ –Ω–µ–¥–µ–ª—é</h3>
                  <p className="text-sm text-gray-800 mt-1">{content.goal}</p>
                </div>
              </div>

              {/* –û—Ç—Å—Ç—É–ø mt-6 -> mt-4 */}
              <div className="mt-4 bg-gray-50 p-3 rounded-lg border border-gray-200">
                <p className="text-xs text-gray-700">
                  {content.rationale}
                </p>
              </div>

              {/* –û—Ç—Å—Ç—É–ø mt-6 -> mt-4 */}
              <Button
                onClick={handleContinue}
                disabled={isPlanApplied}
                className="w-full mt-4 rounded-full py-3 font-semibold text-base shadow-md transition-all duration-300 bg-green-600 hover:bg-green-700 text-white disabled:bg-emerald-500"
              >
                {isPlanApplied ? (
                  <span className="flex items-center justify-center gap-2"><CheckCircle2 className="w-5 h-5" /> –£—á—Ç–µ–º –≤ –ø–ª–∞–Ω–µ!</span>
                ) : ("–ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤ –ø–ª–∞–Ω–µ")}
              </Button>
              <p className="text-xs text-gray-500 text-center mt-2">{content.promise}</p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

function LifestyleSummaryPage({ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }) {
  const summaryKey = lifestyleProfileSummaryKey || 'mixed';
  const content = lifestyleHabitActions[summaryKey];

  const handleContinue = () => {
    if (isPlanApplied) return;
    setIsPlanApplied(true);
    setTimeout(() => {
      setShowLifestyleSummary(false);
      setCurrentQuizStep(7);
      setIsPlanApplied(false);
    }, 1500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±—Ä–∞–ª–∏ py-10 –∏ –¥–æ–±–∞–≤–∏–ª–∏ pt-12 –¥–ª—è —É–º–µ—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—Å—Ç—É–ø–∞ —Å–≤–µ—Ä—Ö—É */}
      <div className="max-w-2xl mx-auto">
        {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—É—Å—Ç–æ–π div —Å –∫–ª–∞—Å—Å–æ–º py-8 –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω */}
        <Card className="border-0 shadow-lg overflow-hidden">
          <CardContent className="p-0 sm:p-0">

            <Image
              src={content.imageSrc}
              alt="Lifestyle illustration"
              width={600}
              height={400}
              className="w-full h-48 object-contain"
            />

            <div className="border-t border-gray-100"></div>

            <div className="p-4 sm:p-8 bg-gradient-to-b from-white to-gray-50/50">
              <h2 className="text-xl font-bold text-center text-gray-800 mb-4">
                {content.title}
              </h2>

              <div className="space-y-3">
                <div className="bg-sky-50 p-3 rounded-xl border-l-4 border-sky-400 shadow-sm">
                  <h3 className="text-sm font-semibold text-gray-500 uppercase tracking-wider">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</h3>
                  <p className="text-sm text-gray-800 mt-1">{content.habit}</p>
                </div>

                <div className="bg-green-50 p-3 rounded-xl border-l-4 border-green-500 shadow-sm">
                  <h3 className="text-sm font-semibold text-gray-500 uppercase tracking-wider">–í–∞—à–∞ —Ü–µ–ª—å –Ω–∞ –Ω–µ–¥–µ–ª—é</h3>
                  <p className="text-sm text-gray-800 mt-1">{content.goal}</p>
                </div>
              </div>

              <div className="mt-4 bg-gray-50 p-3 rounded-lg border border-gray-200">
                <p className="text-sm text-gray-700">
                  {content.rationale}
                </p>
              </div>

              <Button
                onClick={handleContinue}
                disabled={isPlanApplied}
                className="w-full mt-4 rounded-full py-4 font-semibold text-lg shadow-md transition-all duration-300 bg-green-600 hover:bg-green-700 text-white disabled:bg-emerald-500"
              >
                {isPlanApplied ? (
                  <span className="flex items-center justify-center gap-2"><CheckCircle2 className="w-5 h-5" /> –î–æ–±–∞–≤–ª–µ–Ω–æ!</span>
                ) : ("–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π –ø–ª–∞–Ω")}
              </Button>

              <p className="text-xs text-gray-500 text-center mt-3">{content.promise}</p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

function AttemptsSummaryPage({ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }) {

  const summaryKey = attemptsProfileSummaryKey || 'mixed';
  const content = attemptsHabitActions[summaryKey];

  const handleContinue = () => {
    if (isPlanApplied) return;
    setIsPlanApplied(true);
    setTimeout(() => {
      setShowAttemptsSummary(false);
      setCurrentStep(12);
      setIsPlanApplied(false);
    }, 1500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±—Ä–∞–ª–∏ py-10 –∏ –¥–æ–±–∞–≤–∏–ª–∏ pt-12 –¥–ª—è —É–º–µ—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—Å—Ç—É–ø–∞ —Å–≤–µ—Ä—Ö—É */}
      <div className="max-w-2xl mx-auto">
        {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—É—Å—Ç–æ–π div —Å –∫–ª–∞—Å—Å–æ–º py-8 –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω */}
        <Card className="border-0 shadow-lg overflow-hidden">
          <CardContent className="p-0 sm:p-0">

            <Image
              src={content.imageSrc}
              alt="Approach illustration"
              width={600}
              height={400}
              className="w-full h-48 object-contain"
            />

            <div className="border-t border-gray-100"></div>

            <div className="p-4 sm:p-8 bg-gradient-to-b from-white to-gray-50/50">
              <h2 className="text-xl font-bold text-center text-gray-800 mb-4">
                {content.title}
              </h2>

              <div className="space-y-3">
                <div className="bg-violet-50 p-3 rounded-xl border-l-4 border-violet-400 shadow-sm">
                  <h3 className="text-sm font-semibold text-gray-500 uppercase tracking-wider">–í–∞—à –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥</h3>
                  <p className="text-sm text-gray-800 mt-1">{content.habit}</p>
                </div>

                <div className="bg-green-50 p-3 rounded-xl border-l-4 border-green-500 shadow-sm">
                  <h3 className="text-sm font-semibold text-gray-500 uppercase tracking-wider">–í–∞—à–∞ –ø–µ—Ä–≤–∞—è —Ü–µ–ª—å</h3>
                  <p className="text-sm text-gray-800 mt-1">{content.goal}</p>
                </div>
              </div>

              <div className="mt-4 bg-gray-50 p-3 rounded-lg border border-gray-200">
                <p className="text-sm text-gray-700">
                  {content.rationale}
                </p>
              </div>

              <Button
                onClick={handleContinue}
                disabled={isPlanApplied}
                className="w-full mt-4 rounded-full py-4 font-semibold text-lg shadow-md transition-all duration-300 bg-green-600 hover:bg-green-700 text-white disabled:bg-emerald-500"
              >
                {isPlanApplied ? (
                  <span className="flex items-center justify-center gap-2"><CheckCircle2 className="w-5 h-5" /> –î–æ–±–∞–≤–ª–µ–Ω–æ!</span>
                ) : ("–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π –ø–ª–∞–Ω")}
              </Button>

              <p className="text-xs text-gray-500 text-center mt-3">{content.promise}</p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

function QuizQuestion({ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage, LifestyleSummaryPage, AttemptsSummaryPage, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }) {

  const question = quizQuestions[currentQuizStep];
  if (!question) return null;

  if (showFact) return EatingSummaryPage; // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  if (showLifestyleSummary) return LifestyleSummaryPage; // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ
  if (showAttemptsSummary) return AttemptsSummaryPage; // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ

  // –ù–æ–≤–∞—è, —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const onSelectAnswer = (q: Question, optionText: string) => {
    const insight = attemptInsights[q.id]?.[optionText];

    // 1. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
    recordAnswer(q.id, optionText, q.category);

    // 2. –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç
    setLastClickedOption(optionText);

    // 3. –ß–µ—Ä–µ–∑ 300–º—Å —Ä–µ—à–∞–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ
    setTimeout(() => {
      if (insight) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—ë
        setExpandedInsight({ questionId: q.id, answer: optionText });
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        advanceToNextStep();
      }
      // 4. –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É
      setLastClickedOption(null);
    }, 300); // 300 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤ –ø–æ–¥—Å–∫–∞–∑–∫–µ
  const handleAddToPlanAndAdvance = () => {
    setIsInsightAdded(true);
    advanceToNextStep();
  }

  const handleOtherClick = () => {
    recordAnswer(question.id, "None of the above", question.category, 'n');
    advanceToNextStep();
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4 relative overflow-hidden">
      {showConfirmation && (
        <div className="absolute bottom-5 left-1/2 -translate-x-1/2 z-20 bg-gray-800 text-white text-sm font-semibold px-4 py-2 rounded-full shadow-lg animate-fade-in-out">
          {showConfirmation}
        </div>
      )}

      <div className="max-w-2xl mx-auto">
        {/* –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–º–µ–Ω—å—à–∏–ª–∏ –æ—Ç—Å—Ç—É–ø —Å py-8 –¥–æ py-4 */}
        <QuizHeader />
        <div className="mb-8">
          <div className="flex justify-between text-sm text-gray-600 mb-2">
            <span>Progreso: {Math.round(getQuizProgress())}%</span>
            <span>{currentQuizStep + 1}/10</span>
          </div>
          <div className="flex gap-1 h-2">
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π */}
            <div className="flex-[3] bg-gray-200 rounded-l-full overflow-hidden">
              <div className="h-full bg-green-600 transition-all duration-300 ease-out" style={{ width: currentQuizStep < 3 ? `${(currentQuizStep / 3) * 100}%` : "100%" }}></div>
            </div>
            <div className="flex-[4] bg-gray-200 overflow-hidden">
              <div className="h-full bg-green-600 transition-all duration-300 ease-out" style={{ width: currentQuizStep < 3 ? "0%" : currentQuizStep < 7 ? `${((currentQuizStep - 3) / 4) * 100}%` : "100%" }}></div>
            </div>
            <div className="flex-[3] bg-gray-200 rounded-r-full overflow-hidden">
              <div className="h-full bg-green-600 transition-all duration-300 ease-out" style={{ width: currentQuizStep < 7 ? "0%" : `${((currentQuizStep - 7) / 3) * 100}%` }}></div>
            </div>
          </div>
        </div>

        <Card className="border-0 shadow-lg">
          {quizQuestions[currentQuizStep].options.map(option => {
            const insightData = attemptInsights[quizQuestions[currentQuizStep].id]?.[option.text];
            if (!insightData) return null;

            return (
              <MobileInsightPush
                key={option.text}
                insightData={insightData}
                onConfirm={handleAddToPlanAndAdvance}
                isVisible={expandedInsight?.answer === option.text}
              />
            );
          })}
          <CardContent className="p-4 sm:p-6">
            <div className="text-center mb-6"> {/* –û—Ç—Å—Ç—É–ø –±—ã–ª mb-8, —Å—Ç–∞–ª mb-6 */}
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ —Å—Ç–∞–ª –º–µ–Ω—å—à–µ –∏ –æ—Ç—Å—Ç—É–ø –ø–æ–¥ –Ω–∏–º —Ç–æ–∂–µ */}
              <h2 className="font-semibold text-green-600 text-xl sm:text-lg mb-3">{getSectionTitle()}</h2>
              <h3 className="font-medium text-gray-800 leading-snug text-lg sm:text-base">{question.question}</h3>
              <p className="text-xs text-gray-500 mt-2">(–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç)</p>
            </div>


            <div className="space-y-4">
              {question.options.map((option, index) => {
                const isSelected = expandedInsight?.answer === option.text;
                const insightData = attemptInsights[question.id]?.[option.text];

                return (
                  <div key={index}>
                    <div
                      onClick={() => onSelectAnswer(question, option.text)}
                      className={`
                      flex items-center gap-4 p-4 border-2 rounded-3xl cursor-pointer transition-all 
                      ${(isSelected || lastClickedOption === option.text)
                          ? "border-green-400 bg-green-50"
                          : "border-gray-200 hover:border-green-300 hover:bg-green-50"
                        }
                      `}
                    >
                      <div className="text-xl sm:text-2xl">{option.emoji}</div>
                      <span className="text-sm sm:text-base text-gray-700 flex-1">{option.text}</span>
                    </div>
                    {/* üëá –ò–ó–ú–ï–ù–ï–ù–ò–ï: –°–¢–ê–†–´–ô –ë–õ–û–ö –¢–ï–ü–ï–†–¨ –í–ò–î–ï–ù –¢–û–õ–¨–ö–û –ù–ê –î–ï–°–ö–¢–û–ü–ê–• */}
                    {isSelected && insightData && (
                      <div className="hidden sm:block mt-2 p-4 bg-green-50 border-t-2 border-green-200 rounded-b-3xl animate-accordion-down">
                        <h4 className="font-bold text-green-800 break-words">{insightData.title}</h4>
                        <p className="text-sm text-gray-700 mt-1 mb-4 break-words">{insightData.solution}</p>
                        <Button
                          onClick={handleAddToPlanAndAdvance}
                          size="sm"
                          className="w-full text-xs sm:text-sm rounded-full bg-white text-green-700 border border-green-200 hover:bg-green-100"
                        >
                          <span className="flex items-center justify-center">
                            <CheckCircle2 className="w-4 h-4 mr-2" />
                            <span>–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π –ø–ª–∞–Ω –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</span>
                          </span>
                        </Button>
                      </div>
                    )}
                  </div>
                );
              })}

              <div
                onClick={handleOtherClick}
                className={`flex items-center gap-4 p-4 border-2 rounded-3xl cursor-pointer transition-all border-gray-200 hover:border-green-300 hover:bg-green-50`}
                style={{ pointerEvents: showConfirmation ? 'none' : 'auto' }}
              >
                <div className="text-xl sm:text-2xl">ü§î</div>
                <span className="text-sm sm:text-base text-gray-700 flex-1">–î—Ä—É–≥–æ–µ</span>
              </div>
            </div>

            {/* –ë–ª–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π "–î–∞–ª–µ–µ" –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω */}

          </CardContent>
        </Card>
      </div>
    </div>
  );
};

function TransitionPage({ finalGoals, setFinalGoals, analyzeAnswers, answers, setCurrentStep }) {

  const options = [
    "–ù–∞–¥–µ–ª–∞ –±—ã –ª—é–±–∏–º–æ–µ –ø–ª–∞—Ç—å–µ, –≤ –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –Ω–µ –≤–ª–µ–∑–∞—é",
    "–°—Ö–æ–¥–∏–ª–∞ –±—ã –≤ –±–∞—Å—Å–µ–π–Ω –∏–ª–∏ –ø–æ–µ—Ö–∞–ª–∞ –Ω–∞ –ø–ª—è–∂, —á—Ç–æ–±—ã –ø–æ–ø–ª–∞–≤–∞—Ç—å –≤ –±–∏–∫–∏–Ω–∏",
    "–ü–æ–∏–≥—Ä–∞–ª–∞ –±—ã —Å –¥–µ—Ç—å–º–∏ –≤ –¥–æ–≥–æ–Ω—è–ª–∫–∏",
    "–í—ã–¥–µ–ª–∏–ª–∞ –±—ã –≤—Ä–µ–º—è –¥–æ—Å—É–≥—É –∏ –æ–±–æ—à–ª–∞ –ª—é–±–∏–º—ã–µ —É–ª–∏—Ü—ã –≥–æ—Ä–æ–¥–∞ –ø–µ—à–∫–æ–º",
    "–ù–∞—á–∞–ª–∞ –±—ã –∂–∏—Ç—å –±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω—å—é",
    "–ù–∞—á–∞–ª–∞ –±—ã –∂–∏—Ç—å",
  ];

  const handleSelection = (option: string) => {
    setFinalGoals((prev) => {
      if (prev.includes(option)) {
        // –ï—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω - —É–±–∏—Ä–∞–µ–º
        return prev.filter((item) => item !== option);
      } else {
        // –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω - –¥–æ–±–∞–≤–ª—è–µ–º
        return [...prev, option];
      }
    });
  };

  const handleNext = () => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∫–∞–∫ –æ–¥–∏–Ω, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
    const combinedAnswer = finalGoals.join(", ");
    analyzeAnswers([...answers, { questionId: "final-goal", answer: combinedAnswer, category: "goal" }]);
    // –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —à–∞–≥ 13 –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ —à–∞–≥—É 14
    setCurrentStep(14);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-2xl mx-auto">
        {/* Header */}
        <QuizHeader />

        {/* Question Card */}
        <Card className="border-0 shadow-lg">
          <CardContent className="p-4 sm:p-6">
            <div className="text-center mb-6"> {/* –û—Ç—Å—Ç—É–ø –±—ã–ª mb-8, —Å—Ç–∞–ª mb-6 */}
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞–ª –º–µ–Ω—å—à–µ, –æ—Ç—Å—Ç—É–ø —Ç–æ–∂–µ */}
              <h2 className="font-semibold text-green-600 text-lg mb-3">–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å</h2>
              {/* –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ —Å—Ç–∞–ª –º–µ–Ω—å—à–µ */}
              <h3 className="font-medium text-gray-800 leading-snug text-base">
                –ï—Å–ª–∏ –±—ã —É –≤–∞—Å –±—ã–ª –≤–µ—Å –≤–∞—à–µ–π –º–µ—á—Ç—ã, —á—Ç–æ –±—ã –≤—ã —Å–¥–µ–ª–∞–ª–∏?
              </h3>
              <p className="text-xs text-gray-500 mt-2">(–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)</p>
            </div>

            {/* Checkbox Options */}
            <div className="space-y-3"> {/* –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ –±—ã–ª–æ space-y-4 */}
              {options.map((option, index) => {
                const isSelected = finalGoals.includes(option);
                return (
                  <div
                    key={index}
                    onClick={() => handleSelection(option)}
                    /* –û—Ç—Å—Ç—É–ø—ã p-4 -> p-3, gap-4 -> gap-3, —Å–∫—Ä—É–≥–ª–µ–Ω–∏–µ rounded-3xl -> rounded-2xl */
                    className={`flex items-center gap-3 p-3 border-2 rounded-2xl cursor-pointer transition-all ${isSelected ? "border-green-400 bg-green-50" : "border-gray-200 hover:border-green-300 hover:bg-green-50"}`}
                  >
                    {/* –†–∞–∑–º–µ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∞-–≥–∞–ª–æ—á–∫–∏ —Å—Ç–∞–ª –º–µ–Ω—å—à–µ */}
                    <div className={`w-5 h-5 rounded-md border-2 flex-shrink-0 flex items-center justify-center ${isSelected ? 'bg-green-500 border-green-500' : 'border-gray-300'}`}>
                      {isSelected && <Check className="w-3 h-3 text-white" strokeWidth={3} />}
                    </div>
                    {/* –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞–ª –º–µ–Ω—å—à–µ */}
                    <span className={`text-sm text-gray-700 flex-1 ${option.includes("–∂–∏—Ç—å") && !option.includes("–∞–∫—Ç–∏–≤–Ω–æ–π") ? "font-bold" : ""}`}>{option}</span>
                  </div>
                );
              })}
            </div>

            {/* Continue Button */}
            <div className="mt-6">
              <Button
                onClick={handleNext}
                disabled={finalGoals.length === 0}
                className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-md disabled:opacity-50 disabled:cursor-not-allowed"
              >
                –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

// --- –ù–ê–ß–ê–õ–û: –ù–û–í–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –ë–õ–ê–ì–û–î–ê–†–ù–û–°–¢–ò ---
function ThankYouPage({ orderDetails, setOrderDetails, userPath, variant = 'full' }) {
  if (!orderDetails) return null;

  const [isEditingPhone, setIsEditingPhone] = useState(false);
  const [newPhone, setNewPhone] = useState(orderDetails.phone);
  const [isUpdatingPhone, setIsUpdatingPhone] = useState(false);
  const [timer, setTimer] = React.useState(120);

  React.useEffect(() => {
    const interval = setInterval(() => {
      setTimer((prev) => (prev <= 1 ? 0 : prev - 1));
    }, 1000);
    return () => clearInterval(interval);
  }, []);

  const minutes = Math.floor(timer / 60);
  const seconds = timer % 60;
  const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  const whatsappLink = `https://wa.me/${orderDetails.phone.replace(/\D/g, '')}`;

  const handleSavePhone = () => {
    setIsUpdatingPhone(true);
    setTimeout(() => {
      setOrderDetails({ ...orderDetails, phone: newPhone });
      setIsUpdatingPhone(false);
      setIsEditingPhone(false);
    }, 1500);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-2xl mx-auto">
        <QuizHeader />
        <Card className="border-0 shadow-lg">
          <CardContent className="p-6 sm:p-8 text-center">
            <CheckCircle2 className="w-16 h-16 text-green-500 mx-auto mb-4" />
            <h1 className="text-2xl sm:text-3xl font-bold text-gray-800">–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑, {orderDetails.name}!</h1>
            <p className="text-gray-600 mt-2">–í–∞—à –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤—å—é –∏ –∫—Ä–∞—Å–æ—Ç–µ –Ω–∞—á–∞–ª—Å—è!</p>
            <div className="mt-8 space-y-4 text-left">
              <div className="bg-gray-50 border border-gray-200 rounded-xl p-4">
                <p className="font-semibold text-gray-800">–ó–∞—è–≤–∫–∞ ‚Ññ{orderDetails.orderId} –ø–æ–ª—É—á–µ–Ω–∞</p>
                <p className="text-sm text-gray-600 mt-1">–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è (10:00‚Äì20:00).</p>
              </div>

              <div className="bg-green-50 border border-green-200 rounded-xl p-4">
                <div className="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-4">
                  <div className="flex-grow">
                    <p className="font-semibold text-green-800">–ü–ª–∞–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ WhatsApp</p>
                    <p className="text-sm text-gray-700 mt-1">–ù–∞ –Ω–æ–º–µ—Ä: <strong>{orderDetails.phone}</strong></p>
                    {isEditingPhone ? (
                      <div className="mt-3 space-y-2">
                        <IMaskInput
                          mask="+{51} (000) 000-000"
                          value={newPhone}
                          onAccept={(value) => setNewPhone(value as string)}
                          className="w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-green-500"
                        />
                        <Button onClick={handleSavePhone} disabled={isUpdatingPhone} size="sm" className="bg-green-600 hover:bg-green-700">
                          {isUpdatingPhone ? (<span className="flex items-center"><Loader2 className="w-4 h-4 mr-2 animate-spin" /> –û—Ç–ø—Ä–∞–≤–∫–∞...</span>) : ("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")}
                        </Button>
                      </div>
                    ) : (
                      <button onClick={() => setIsEditingPhone(true)} className="mt-2 text-sm flex items-center gap-1.5 text-gray-500 hover:text-green-600">
                        <Edit3 className="w-4 h-4" />
                        <span>–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä</span>
                      </button>
                    )}
                  </div>
                  <a href={whatsappLink} target="_blank" rel="noopener noreferrer" className="flex-shrink-0 bg-green-600 hover:bg-green-700 text-white rounded-full px-5 py-2 text-sm font-semibold flex items-center justify-center gap-2">
                    <MessageSquare className="w-4 h-4" />
                    –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
                  </a>
                </div>
                {/* üî• –ò–ó–ú–ï–ù–ï–ù–ò–ï: –¢–∞–π–º–µ—Ä —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π ('full') —Å—Ç—Ä–∞–Ω–∏—Ü–µ */}
                {variant === 'full' && timer > 0 && (
                  <div className="mt-3 text-xs text-center text-gray-500 bg-white/70 rounded-full p-1">
                    –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–∏–¥—É—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ <span className="font-mono font-semibold">{formattedTime}</span>
                  </div>
                )}
              </div>

              <div className="text-center">
                <button className="text-sm text-gray-500 hover:text-green-600 underline flex items-center gap-1 mx-auto">
                  <Mail className="w-4 h-4" />
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–ø–∏—é –Ω–∞ email
                </button>
              </div>
              <div className="pt-4 text-sm space-y-2">
                <details className="p-3 rounded-lg bg-gray-50 border border-gray-200">
                  <summary className="font-semibold cursor-pointer">–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–∞–Ω–æ–º –Ω–µ –ø—Ä–∏—à–ª–æ?</summary>
                  <p className="mt-2 text-gray-600">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä. –ï—Å–ª–∏ –≤—ã –æ—à–∏–±–ª–∏—Å—å, –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –≤—ã—à–µ. –ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5 –º–∏–Ω—É—Ç. –ò–Ω–æ–≥–¥–∞ –±—ã–≤–∞—é—Ç –∑–∞–¥–µ—Ä–∂–∫–∏.</p>
                </details>
                <details className="p-3 rounded-lg bg-gray-50 border border-gray-200">
                  <summary className="font-semibold cursor-pointer">–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä?</summary>
                  <p className="mt-2 text-gray-600">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä" –ø–æ–¥ –≤–∞—à–∏–º —Ç–µ–∫—É—â–∏–º –Ω–æ–º–µ—Ä–æ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ "–ü–ª–∞–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ WhatsApp".</p>
                </details>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

// –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤–º–µ—Å—Ç–æ –≤–∞—à–µ–π —Å—Ç–∞—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ OfferPage

// --- –ù–ê–ß–ê–õ–û: –ù–û–í–ê–Ø, –£–ú–ù–ê–Ø OFFER PAGE ---
function OfferPage({
  finalGoals,
  eatingProfileSummaryKey,
  lifestyleProfileSummaryKey,
  attemptsProfileSummaryKey,
  miniQuizAnswers,
  desiredShape,
  sendSampleNow,
  setSendSampleNow,
  setIsProcessingOrder,
  isProcessingOrder,
  setOrderDetails,
  setCurrentStep,
  orderFormRef,
  userPath,
  variant = 'full',
  orderDetails
}) {

  const [formName, setFormName] = useState('');
  const [formPhone, setFormPhone] = useState('');
  const [formEmail, setFormEmail] = useState('');
  const [emailError, setEmailError] = useState('');

  const [timer, setTimer] = React.useState(15 * 60);

  React.useEffect(() => {
    if (variant === 'simplified' && timer > 0) {
      const interval = setInterval(() => {
        setTimer((prev) => (prev <= 1 ? 0 : prev - 1));
      }, 1000);
      return () => clearInterval(interval);
    }
  }, [timer, variant]);

  const minutes = Math.floor(timer / 60);
  const seconds = timer % 60;
  const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

  const handleOrderSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (formEmail && !formEmail.includes('@')) {
      setEmailError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email —Å —Å–∏–º–≤–æ–ª–æ–º "@"');
      return;
    }
    setIsProcessingOrder(true);
    const orderId = Math.random().toString(36).substr(2, 6).toUpperCase();
    setTimeout(() => {
      setOrderDetails({ name: formName, phone: formPhone, email: formEmail, orderId });
      setCurrentStep(variant === 'full' ? 18 : 21);
      setIsProcessingOrder(false);
    }, 3000);
  };

  const handleSimplifiedOrderSubmit = () => {
    setIsProcessingOrder(true);
    setTimeout(() => {
      setCurrentStep(21);
      setIsProcessingOrder(false);
    }, 1500);
  };

  const userGoal = finalGoals.length > 0 ? finalGoals[0] : "–ù–∞—á–∞–ª–∞ –±—ã –∂–∏—Ç—å"; const dynamicTitlePart = (motivationContent[userGoal]?.title || "–í–∞—à –ø—É—Ç—å –∫ –º–µ—á—Ç–µ").replace("–í–æ—Ç –∫–∞–∫", "–í–∞—à –ø—É—Ç—å –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã"); const dynamicHeadline = `${dynamicTitlePart} ‚Äî –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å.`; const buildSubtitle = () => { const parts = new Set<string>(); if (eatingProfileSummaryKey) parts.add(subtitleKeywords.eating[eatingProfileSummaryKey]); if (lifestyleProfileSummaryKey) parts.add(subtitleKeywords.lifestyle[lifestyleProfileSummaryKey]); if (attemptsProfileSummaryKey) parts.add(subtitleKeywords.attempts[attemptsProfileSummaryKey]); return Array.from(parts).join(', '); }; const getWhyItSuitsYouPoints = () => { const points = []; if (eatingProfileSummaryKey) points.push(whyItSuitsYouMapping.eating[eatingProfileSummaryKey]); if (lifestyleProfileSummaryKey) points.push(whyItSuitsYouMapping.lifestyle[lifestyleProfileSummaryKey]); if (attemptsProfileSummaryKey) points.push(whyItSuitsYouMapping.attempts[attemptsProfileSummaryKey]); return points; }; const whyItSuitsYouPoints = getWhyItSuitsYouPoints(); let effectKey: keyof typeof comprehensiveEffectContent = 'mixed'; if (eatingProfileSummaryKey === 'a' && lifestyleProfileSummaryKey === 'a' && attemptsProfileSummaryKey === 'a') { effectKey = 'all_a'; } else if (eatingProfileSummaryKey === 'b' && lifestyleProfileSummaryKey === 'b' && attemptsProfileSummaryKey === 'b') { effectKey = 'all_b'; } else if (eatingProfileSummaryKey === 'c' && lifestyleProfileSummaryKey === 'c' && attemptsProfileSummaryKey === 'c') { effectKey = 'all_c'; } const dynamicEffectText = comprehensiveEffectContent[effectKey]; const getSafetyKey = () => { const conditions = (miniQuizAnswers.conditions as string[]) || []; const meds = (miniQuizAnswers.meds as string) || ''; if (conditions.includes('High blood pressure')) return 'high_pressure'; if (conditions.includes('Prediabetes / type 2 diabetes')) return 'diabetes'; if (meds === 'Hormonal contraceptives') return 'contraceptives'; if (conditions.includes('PCOS')) return 'pcos'; return 'default'; }; const dynamicSafetyText = safetyContent[getSafetyKey()]; const objections = [{ icon: Leaf, title: "100% –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤", text: "–¢–æ–ª—å–∫–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ‚Äî –±–µ–∑ –≥–æ—Ä–º–æ–Ω–æ–≤, —Ö–∏–º–∏–∏ –∏ –ø—Ä–∏–≤—ã–∫–∞–Ω–∏—è. –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ, –µ—Å–ª–∏ –≤—ã –∏—â–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ." }, { icon: HeartPulse, title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ", text: dynamicSafetyText }, { icon: ThumbsUp, title: "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç", text: dynamicEffectText }, { icon: Check, title: "–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", text: "–ü—Ä–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ –≤—Å–µ—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–∂–µ —á–µ—Ä–µ–∑ 7‚Äì10 –¥–Ω–µ–π, —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π." },]; const dynamicPlanList = React.useMemo(() => { const list = []; if (eatingProfileSummaryKey && planContentDatabase.eating[eatingProfileSummaryKey]) { list.push(planContentDatabase.eating[eatingProfileSummaryKey]); } if (lifestyleProfileSummaryKey && planContentDatabase.lifestyle[lifestyleProfileSummaryKey]) { list.push(planContentDatabase.lifestyle[lifestyleProfileSummaryKey]); } if (attemptsProfileSummaryKey && planContentDatabase.attempts[attemptsProfileSummaryKey]) { list.push(planContentDatabase.attempts[attemptsProfileSummaryKey]); } return list.length > 0 ? list : ["–ü—Ä–æ—Å—Ç—ã–µ –∏ —Å—ã—Ç–Ω—ã–µ –ø–µ—Ä—É–∞–Ω—Å–∫–∏–µ –±–ª—é–¥–∞ –Ω–∞ 20-30 –º–∏–Ω—É—Ç."]; }, [eatingProfileSummaryKey, lifestyleProfileSummaryKey, attemptsProfileSummaryKey]); const dynamicHandbookList = React.useMemo(() => { const list = []; if (lifestyleProfileSummaryKey && handbookContentDatabase.lifestyle[lifestyleProfileSummaryKey]) { list.push(handbookContentDatabase.lifestyle[lifestyleProfileSummaryKey]); } if (eatingProfileSummaryKey && handbookContentDatabase.eating[eatingProfileSummaryKey]) { list.push(handbookContentDatabase.eating[eatingProfileSummaryKey]); } if (desiredShape && shapeMapping[desiredShape]) { list.push(`–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏, –∫–∞–∫ –ø—Ä–∏–π—Ç–∏ –∫ <strong>${shapeMapping[desiredShape].toLowerCase()}</strong> —Ñ–∏–≥—É—Ä–µ.`); } else { list.push("–°–æ–≤–µ—Ç—ã –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ñ–∏–≥—É—Ä—ã –≤–∞—à–µ–π –º–µ—á—Ç—ã."); } return list; }, [eatingProfileSummaryKey, lifestyleProfileSummaryKey, desiredShape]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-peach-50 p-4">
      <div className="max-w-4xl mx-auto">
        <QuizHeader />
        <div className="bg-white/90 backdrop-blur rounded-2xl shadow-lg ring-1 ring-black/5 p-4 md:p-6 space-y-6">
          <h1 className="mt-4 text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 text-center leading-tight">{dynamicHeadline}</h1>
          <div className="text-center"><p className="text-base sm:text-lg text-gray-800">–ú—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Ä–µ—à–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç: <br /> <span className="font-bold text-green-700">{buildSubtitle()}</span>.</p></div>

          {/* üî• –ù–û–í–´–ô –ó–ê–ì–û–õ–û–í–û–ö, –ö–û–¢–û–†–´–ô –í–ò–î–ï–ù –í–ï–ó–î–ï */}
          <h2 className="text-xl sm:text-2xl font-bold text-gray-800 text-center pt-4">
            –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –¥–æ–±–∞–≤–∫–∏ "Esbelita"
          </h2>

          <div className="grid md:grid-cols-2 gap-4">{objections.map(item => (<div key={item.title} className="flex items-start gap-3 bg-green-50/70 p-4 rounded-xl border border-green-100"><item.icon className="w-6 h-6 text-green-600 flex-shrink-0 mt-1" /><div className="min-w-0"><h4 className="font-semibold text-gray-800">{item.title}</h4><p className="text-sm text-gray-600">{item.text}</p></div></div>))}</div>
          <div className="pt-6 grid md:grid-cols-2 gap-8 items-center">
            <div className="bg-gray-100 rounded-xl aspect-square w-full flex items-center justify-center">
              <Image src="/1.jpg" alt="Esbelita Natural bottle" width={400} height={400} className="object-contain" />
            </div>
            <div className="space-y-4">
              <h3 className="font-bold text-xl text-gray-800">–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã –æ "Esbelita Natural":</h3>
              <ul className="space-y-3">
                <li className="grid grid-cols-[auto_1fr] gap-x-3 items-start"><CheckCircle2 className="w-5 h-5 text-green-600 mt-1" />
                  <span className="text-gray-700">–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ –ü–µ—Ä—É —Å —É—á–µ—Ç–æ–º –º–µ—Å—Ç–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –ø–∏—Ç–∞–Ω–∏—è –∏ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏.</span>
                </li>
                <li className="grid grid-cols-[auto_1fr] gap-x-3 items-start"><CheckCircle2 className="w-5 h-5 text-green-600 mt-1" />
                  <span className="text-gray-700">–ù–µ "—Å–∂–∏–≥–∞–µ—Ç" –∂–∏—Ä –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ, –∞ –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–º—É –º—è–≥–∫–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤.</span>
                </li>
                <li className="grid grid-cols-[auto_1fr] gap-x-3 items-start"><CheckCircle2 className="w-5 h-5 text-green-600 mt-1" />
                  <span className="text-gray-700">–ü—Ä–æ—à–µ–ª –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—É—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.</span>
                </li>
                <li className="grid grid-cols-[auto_1fr] gap-x-3 items-start"><CheckCircle2 className="w-5 h-5 text-green-600 mt-1" />
                  <span className="text-gray-700">–í—Å–µ–≥–æ 2 –∫–∞–ø—Å—É–ª—ã –≤ –¥–µ–Ω—å –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∞—à–µ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è.</span>
                </li>
              </ul>
            </div>
          </div>
          <div className="pt-4"><h3 className="text-xl font-bold text-gray-900 mb-4 text-center">–ü–æ—á–µ–º—É —ç—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º</h3><div className="grid grid-cols-1 md:grid-cols-3 gap-4">{whyItSuitsYouPoints.map((point, index) => (<div key={index} className="bg-gray-50 border border-gray-200 rounded-xl p-4 text-center"><p className="text-sm font-semibold text-gray-500 uppercase tracking-wide">–í–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞</p><p className="text-base font-bold text-gray-800 my-2">{point.problem}</p><div className="w-16 h-[1px] bg-green-200 mx-auto my-3"></div><p className="text-sm font-semibold text-green-600 uppercase tracking-wide">–ù–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ</p><p className="text-sm text-gray-700 mt-2">{point.solution}</p></div>))}</div></div>

          <div className="text-center">
            <div className="text-left">
              {variant === 'full' ? (
                <div className="grid md:grid-cols-2 gap-6"><div className="bg-green-50 border border-green-200 rounded-xl p-5"><div className="flex items-center gap-3 mb-3"><BookOpen className="w-8 h-8 text-green-700 flex-shrink-0" /><h3 className="font-bold text-lg text-green-800">–ß—Ç–æ –±—É–¥–µ—Ç –≤ –≤–∞—à–µ–º –ø–ª–∞–Ω–µ</h3></div><ul className="space-y-2 text-sm text-gray-700 list-disc list-inside">{dynamicPlanList.map((item, index) => (<li key={index}>{item}</li>))}</ul></div><div className="bg-green-50 border border-green-200 rounded-xl p-5"><div className="flex items-center gap-3 mb-3"><CheckCircle2 className="w-8 h-8 text-green-700 flex-shrink-0" /><h3 className="font-bold text-lg text-green-800">–ß—Ç–æ –±—É–¥–µ—Ç –≤ –≤–∞—à–µ–π –ø–∞–º—è—Ç–∫–µ</h3></div><ul className="space-y-2 text-sm text-gray-700 list-disc list-inside">{dynamicHandbookList.map((item, index) => (<li key={index} dangerouslySetInnerHTML={{ __html: item }} />))}</ul></div></div>
              ) : (
                <div className="bg-sky-50 border border-sky-200 rounded-xl p-5 md:col-span-2"><div className="flex items-center gap-3 mb-3"><Sparkles className="w-8 h-8 text-sky-700 flex-shrink-0" /><h3 className="font-bold text-lg text-sky-800">–ö–∞–∫ –∫–∞–ø—Å—É–ª—ã —É—Å–∏–ª—è—Ç –≤–∞—à –ø–ª–∞–Ω</h3></div><p className="text-sm text-gray-700">–í–∞—à –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –∏ –ø—Ä–∏–≤—ã—á–µ–∫ ‚Äî —ç—Ç–æ –º–æ—â–Ω–∞—è –æ—Å–Ω–æ–≤–∞. –ö–∞–ø—Å—É–ª—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –∫–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä, –ø–æ–º–æ–≥–∞—è –≤–∞—à–µ–º—É –æ—Ä–≥–∞–Ω–∏–∑–º—É –±—ã—Å—Ç—Ä–µ–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—É, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç –∏ –±–æ—Ä–æ—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π —á–∞—Å—Ç–æ –º–µ—à–∞–µ—Ç –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏.</p></div>
              )}
            </div>
          </div>

          <div className="border-2 border-green-600 rounded-xl p-4 shadow-inner bg-white">
            <h2 className="text-xl sm:text-2xl font-bold text-center text-green-700 mb-3">–í–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2>
            {variant === 'simplified' && (
              <div className="text-center bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-4">
                <p className="text-sm text-gray-600">–í–∞—à–∞ <b>–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–∞—è —Å–∫–∏–¥–∫–∞ 50%</b> –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ:</p>
                <div className={`text-3xl font-bold font-mono mt-1 tracking-wider transition-colors ${timer < 420 ? 'text-red-600' : 'text-gray-800'}`}>{formattedTime}</div>
              </div>
            )}
            <div className="border-t border-b border-gray-200 py-3 text-center">
              <div className="flex justify-center items-baseline gap-2 font-semibold">
                <span className="text-gray-800 text-base sm:text-lg">–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞:</span>

                {/* –ó–∞—á–µ—Ä–∫–Ω—É—Ç–∞—è —Ü–µ–Ω–∞ —Ç–µ–ø–µ—Ä—å –±–æ–ª—å—à–∞—è –∏ –≤–∏–¥–Ω–∞ –≤ –æ–±–æ–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö */}
                <span className="text-gray-400 line-through text-2xl">199 PEN</span>

                <span className="text-green-700 text-2xl sm:text-3xl">99 PEN</span>
                <span className="text-gray-500 text-sm sm:text-base">(‚âà3.3 PEN/–¥–µ–Ω—å)</span>
              </div>
            </div>
          </div>

          {variant === 'full' ? (
            <form ref={orderFormRef} id="order-form" className="space-y-4" onSubmit={handleOrderSubmit}>
              <h3 className="text-lg sm:text-xl font-bold text-center text-gray-800">–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–ª–∞–Ω –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞?</h3>
              <div>
                <label htmlFor="name" className="block text-sm font-medium text-gray-700 mb-2">–ü–æ–ª–Ω–æ–µ –∏–º—è *</label>
                <input id="name" name="name" required value={formName} onChange={(e) => setFormName(e.target.value)} className="w-full px-4 py-3 border border-gray-300 rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 text-base placeholder:text-base" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" />
              </div>
              <div>
                <label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-2">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *</label>
                <IMaskInput mask="+{51} (000) 000-000" radix="." id="phone" name="phone" required value={formPhone} onAccept={(value) => setFormPhone(value as string)} className="w-full px-4 py-3 border border-gray-300 rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 text-base placeholder:text-base" placeholder="+51 (___) ___-___" type="tel" />
              </div>
              <div>
                <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-2">Email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label><input id="email" name="email" type="email" value={formEmail} onChange={(e) => { setFormEmail(e.target.value); if (emailError) setEmailError(''); }} onBlur={() => { if (formEmail && !formEmail.includes('@')) { setEmailError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email —Å —Å–∏–º–≤–æ–ª–æ–º "@"'); } else { setEmailError(''); } }} className={`w-full px-4 py-3 border rounded-full shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 text-base placeholder:text-base transition-colors ${emailError ? 'border-red-500' : 'border-gray-300'}`} placeholder="–ï—Å–ª–∏ WhatsApp –Ω–µ—É–¥–æ–±–µ–Ω" />{emailError && <p className="mt-2 text-xs text-red-600 pl-4">{emailError}</p>}
              </div>
              <div className="pt-2 text-center">
                <Button type="submit" disabled={isProcessingOrder} className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-lg transition-transform transform hover:scale-105 disabled:opacity-75 disabled:cursor-wait">
                  {isProcessingOrder ? (<span className="flex items-center justify-center"><Loader2 className="w-5 h-5 mr-2 animate-spin" />–û–±—Ä–∞–±–æ—Ç–∫–∞...</span>) : ("–ó–∞–∫–∞–∑–∞—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π")}
                </Button>
              </div>
            </form>
          ) : (
            <div ref={orderFormRef} id="order-form" className="space-y-4 pt-4">
              <h3 className="text-lg sm:text-xl font-bold text-center text-gray-800">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞</h3>
              <div className="bg-gray-50 border border-gray-200 rounded-xl p-4 space-y-3">
                <div className="flex justify-between items-center">
                  <div><span className="text-sm font-medium text-gray-500">–ò–º—è:</span><p className="font-semibold text-gray-800">{orderDetails?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p></div>
                  <Button variant="ghost" size="sm" onClick={() => setCurrentStep(15)} className="text-xs text-gray-500 hover:text-green-600"><Edit3 className="w-3 h-3 mr-1" />–ò–∑–º–µ–Ω–∏—Ç—å</Button>
                </div>
                <div className="flex justify-between items-center">
                  <div><span className="text-sm font-medium text-gray-500">–ù–æ–º–µ—Ä WhatsApp:</span><p className="font-semibold text-gray-800">{orderDetails?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p></div>
                  <Button variant="ghost" size="sm" onClick={() => setCurrentStep(15)} className="text-xs text-gray-500 hover:text-green-600"><Edit3 className="w-3 h-3 mr-1" />–ò–∑–º–µ–Ω–∏—Ç—å</Button>
                </div>
              </div>
              <div className="pt-2 text-center">
                <Button onClick={handleSimplifiedOrderSubmit} disabled={isProcessingOrder || timer === 0} className="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 font-semibold text-lg shadow-lg transition-transform transform hover:scale-105 disabled:opacity-75 disabled:cursor-wait">
                  {isProcessingOrder ? (<span className="flex items-center justify-center"><Loader2 className="w-5 h-5 mr-2 animate-spin" />–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º...</span>) : (timer > 0 ? "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑ —Å–æ —Å–∫–∏–¥–∫–æ–π" : "–í—Ä–µ–º—è –≤—ã—à–ª–æ")}
                </Button>
              </div>
            </div>
          )}

          <div className="pt-6">
            <h3 className="text-xl font-bold text-gray-900 mb-4 text-center">–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –∫–ª–∏–µ–Ω—Ç—ã Ebelita</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">{testimonials.map((t, i) => {
              if (t.isExpert) {
                const IconComponent = t.img; return (<div key={i} className="bg-sky-50 border border-sky-200 rounded-xl p-4 flex flex-col h-full">
                  <div className="flex items-center gap-3 mb-2">{IconComponent && <IconComponent className="w-6 h-6 text-sky-600 flex-shrink-0" />}<p className="font-semibold text-gray-800 text-sm">{t.name}</p>
                  </div>
                  <p className="text-gray-700 italic text-sm flex-grow">‚Äú{t.quote}‚Äù</p></div>);
              } else {
                return (<div key={i} className="bg-green-50/70 border border-green-100 rounded-xl p-4 flex flex-col h-full">
                  <div className="flex justify-between items-center mb-2">
                    <p className="font-semibold text-gray-800 text-sm">{t.name}</p>{t.stars && <StarRating rating={t.stars} />}</div>
                  <p className="text-gray-700 italic text-sm flex-grow">‚Äú{t.quote}‚Äù</p>
                </div>);
              }
            })}</div>
          </div>
          <div className="pt-6"><div className="bg-gray-50 border border-gray-200 rounded-2xl p-6">
            <h3 className="text-xl font-bold text-gray-900 mb-4 text-center">–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
            <div className="space-y-4 divide-y divide-gray-200">
              <div className="pt-4 first:pt-0">
                <h4 className="font-semibold text-gray-800 flex items-start sm:items-center gap-2"><Leaf className="w-5 h-5 text-green-600 flex-shrink-0" />–ò–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç Esbelita Natural:</h4>
                <ul className="list-disc list-inside text-gray-600 mt-2 pl-4 text-sm space-y-2">
                  <li>L-–ö–∞—Ä–Ω–∏—Ç–∏–Ω —Ç–∞—Ä—Ç—Ä–∞—Ç (150–º–≥): –£—Å–∫–æ—Ä—è–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∂–∏—Ä–æ–≤.</li>
                  <li>–≠–∫—Å—Ç—Ä–∞–∫—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —á–∞—è (100–º–≥): –ú–æ—â–Ω—ã–π –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç.</li>
                  <li>–≠–∫—Å—Ç—Ä–∞–∫—Ç –≥—É–∞—Ä–∞–Ω—ã (75–º–≥): –ü—Ä–∏—Ä–æ–¥–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏.</li>
                  <li>–Ø–±–ª–æ—á–Ω—ã–π —É–∫—Å—É—Å (50–º–≥): –ü–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–∞—Ö–∞—Ä.</li>
                  <li>–≠–∫—Å—Ç—Ä–∞–∫—Ç –∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ –º–∞–Ω–≥–æ (50–º–≥): –°–Ω–∏–∂–∞–µ—Ç –∞–ø–ø–µ—Ç–∏—Ç.</li>
                </ul>
              </div>
              <div className="pt-4">
                <h4 className="font-semibold text-gray-800 flex items-start sm:items-center gap-2"><ShieldCheck className="w-5 h-5 text-green-600 flex-shrink-0" />–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</h4>
                <p className="text-gray-600 mt-2 text-sm">–ü—Ä–æ–¥—É–∫—Ç –∏–º–µ–µ—Ç –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è. <a href="#" className="text-green-600 underline">–°–∫–∞—á–∞—Ç—å PDF</a></p>
                <p className="text-gray-600 mt-1 text-sm">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: P2998419N/NAESBM</p>
              </div>
            </div>
            <p className="text-xs text-gray-500 mt-4 text-center">*–ù–µ —è–≤–ª—è–µ—Ç—Å—è –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º —Å—Ä–µ–¥—Å—Ç–≤–æ–º. –ü–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –≤—Ä–∞—á–æ–º.</p>
          </div>
          </div>
          <div className="pt-6"><h3 className="text-xl font-bold text-gray-900 mb-4 text-center">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
            <div className="space-y-3 text-gray-700 text-sm">
              <details className="rounded-xl border border-gray-200 p-2">
                <summary className="cursor-pointer font-medium">–ù—É–∂–Ω–æ –ª–∏ —Å–æ–±–ª—é–¥–∞—Ç—å –∂–µ—Å—Ç–∫—É—é –¥–∏–µ—Ç—É?</summary>
                <p className="mt-2">–ù–µ—Ç. –ö–æ–º–ø–ª–µ–∫—Å –∏ –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã, —á—Ç–æ–±—ã –≤—ã —Ö—É–¥–µ–ª–∏ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –∏ —Å—Ä—ã–≤–æ–≤. –ü–ª–∞–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å—ã—Ç–Ω—ã–µ –∏ –ø—Ä–æ—Å—Ç—ã–µ –±–ª—é–¥–∞, –∞ –∫–∞–ø—Å—É–ª—ã –ø–æ–º–æ–≥–∞—é—Ç —Å–Ω–∏–∑–∏—Ç—å —Ç—è–≥—É –∫ –≤—Ä–µ–¥–Ω–æ–º—É. –í–∞–º –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –≥–æ–ª–æ–¥–∞—Ç—å.</p>
              </details>
              <details className="rounded-xl border border-gray-200 p-2">
                <summary className="cursor-pointer font-medium">–Ø –±–æ—é—Å—å —á—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç –≤—Ä–µ–º–µ–Ω–Ω–Ω—ã–π, –∞ –≤–µ—Å –≤–µ—Ä–Ω–µ—Ç—Å—è</summary>
                <p className="mt-2">–ù–∞—à –ø–æ–¥—Ö–æ–¥ –Ω–∞—Ü–µ–ª–µ–Ω –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—á–µ–∫ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤, –∞ –Ω–µ –Ω–∞ –±—ã—Å—Ç—Ä—É—é –ø–æ—Ç–µ—Ä—é –≤–æ–¥—ã. –≠—Ç–æ —Å–æ–∑–¥–∞–µ—Ç —É—Å—Ç–æ–π—á–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ü–∞–º—è—Ç–∫–∞ –ø–æ –ø—Ä–∏–≤—ã—á–∫–∞–º –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∑–∞–∫—Ä–µ–ø–∏—Ç—å –µ–≥–æ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫—É—Ä—Å–∞.</p>
              </details>
              <details className="rounded-xl border border-gray-200 p-2">
                <summary className="cursor-pointer font-medium">–Ø –º–æ–≥—É –∫—É–ø–∏—Ç—å –ø–æ—Ç–æ–º –∏–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ?</summary>
                <p className="mt-2">–≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚Äî —Å–∫–∏–¥–∫–∞ 50% –∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –±–æ–Ω—É—Å—ã ‚Äî –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å –≤ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞. –í –º–∞–≥–∞–∑–∏–Ω–∞—Ö –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è.</p>
              </details>
              <details className="rounded-xl border border-gray-200 p-2">
                <summary className="cursor-pointer font-medium">–°–ª–∏—à–∫–æ–º —Ö–æ—Ä–æ—à–æ –∑–≤—É—á–∏—Ç, –≤ —á–µ–º –ø–æ–¥–≤–æ—Ö?</summary>
                <p className="mt-2">–ü–æ–¥–≤–æ—Ö–∞ –Ω–µ—Ç. –ú—ã —É–≤–µ—Ä–µ–Ω—ã –≤ —Å–≤–æ–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ –∏ –ø–ª–∞–Ω–µ, –ø–æ—ç—Ç–æ–º—É –≥–æ—Ç–æ–≤—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è —Ç–µ–º, –∫—Ç–æ –ø—Ä–æ—à–µ–ª –æ–ø—Ä–æ—Å –∏ —Å–µ—Ä—å–µ–∑–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í–∞—à —É—Å–ø–µ—Ö ‚Äî –Ω–∞—à–∞ –ª—É—á—à–∞—è —Ä–µ–∫–ª–∞–º–∞.</p>
              </details>
              <details className="rounded-xl border border-gray-200 p-2">
                <summary className="cursor-pointer font-medium">–ö–∞–∫-—Ç–æ –¥–æ—Ä–æ–≥–æ</summary>
                <p className="mt-2">–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ –Ω–∞ –º–µ—Å—è—Ü —Å–æ —Å–∫–∏–¥–∫–æ–π ‚Äî 99 PEN. –≠—Ç–æ –≤—Å–µ–≥–æ –æ–∫–æ–ª–æ 3.3 PEN –≤ –¥–µ–Ω—å, –¥–µ—à–µ–≤–ª–µ —á–∞—à–∫–∏ –∫–æ—Ñ–µ. –ó–∞ —ç—Ç—É —Ü–µ–Ω—É –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞–ø—Å—É–ª—ã, –∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å –ø–ª–∞–Ω–æ–º –ø–∏—Ç–∞–Ω–∏—è –∏ –ø–∞–º—è—Ç–∫–æ–π, —á—Ç–æ –≥–æ—Ä–∞–∑–¥–æ –≤—ã–≥–æ–¥–Ω–µ–µ, —á–µ–º –æ–¥–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —É –¥–∏–µ—Ç–æ–ª–æ–≥–∞.</p>
              </details><details className="rounded-xl border border-gray-200 p-2">
                <summary className="cursor-pointer font-medium">–ï—Å—Ç—å –ª–∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è?</summary>
                <p className="mt-2">–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø—Ä–∏ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏, –∫–æ—Ä–º–ª–µ–Ω–∏–∏ –≥—Ä—É–¥—å—é, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –Ω–µ–ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∫—É—Ä—Å–∞.</p>
              </details>
            </div>
          </div>
          <div className="pt-8 text-center bg-gradient-to-t from-green-50 rounded-2xl p-6">
            <h3 className="text-xl sm:text-2xl font-bold text-gray-800">–í—ã –¥–æ—á–∏—Ç–∞–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, –≤—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤—ã –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º.</h3>
            <a href="#order-form" className="inline-block mt-4 bg-green-600 hover:bg-green-700 text-white rounded-full py-2 px-8 sm:py-3 sm:px-12 text-sm sm:text-base font-semibold shadow-lg transition-transform transform hover:scale-105">–î–∞, —è –≥–æ—Ç–æ–≤–∞! –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ñ–æ—Ä–º–µ –∑–∞–∫–∞–∑–∞</a>
          </div>
        </div>
        <footer className="text-center text-sm text-gray-500 py-10">
          <p className="text-xs text-gray-400">–≠—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç –Ω–µ –±—ã–ª –æ—Ü–µ–Ω–µ–Ω DIGEMID. –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è. –ù–µ –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤—Ä–∞—á–∞.</p>
        </footer>
      </div>
    </div>
  );
};

// --- –ö–û–ù–ï–¶: –ù–û–í–ê–Ø, –£–ú–ù–ê–Ø OFFER PAGE ---

// –°—Ç–∞—Ä—ã–π –∫–æ–¥ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –æ—Ç–∑—ã–≤–æ–≤
{/* <div className="pt-6">
            <h3 className="text-xl font-bold text-gray-900 mb-4 text-center">–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã</h3>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
              {testimonials.map((t, i) => {
                const IconComponent = t.isExpert ? t.img : null;
                return (
                  <div
                    key={i}
                    className={`rounded-2xl shadow-sm flex flex-col h-full ${t.isExpert ? 'bg-gradient-to-br from-green-100 to-sky-100 border border-green-200' : 'bg-white overflow-hidden'}`}
                  >
                    {t.isExpert ? (
                      <div className="p-4 flex flex-col justify-center h-full">
                        <div className="flex flex-col items-center text-center md:items-start md:text-left">
                          {IconComponent && <IconComponent className="w-8 h-8 text-green-600 mb-3" />}
                          <div>
                            <p className="font-semibold text-gray-800">{t.name}</p>
                            <p className="text-gray-700 italic leading-relaxed text-sm mt-2">‚Äú{t.quote}‚Äù</p>
                          </div>
                        </div>
                      </div>
                    ) : (
                      <>
                        <div className="relative w-full h-40 bg-gray-200 flex-shrink-0">
                          <Image src={t.img} alt={`–û—Ç–∑—ã–≤ –æ—Ç ${t.name}`} layout="fill" objectFit="cover" />
                          <span className="absolute top-2 left-2 bg-black/50 text-white text-xs px-2 py-1 rounded-full backdrop-blur-sm">–î–æ / –ü–æ—Å–ª–µ</span>
                        </div>
                        <div className="p-3 flex flex-col flex-grow">
                          <div className="flex justify-between items-center mb-1">
                            <p className="font-semibold text-gray-800 text-sm">{t.name}</p>
                            {t.stars && <StarRating rating={t.stars} />}
                          </div>
                          {t.weightLoss && (
                            <div className="my-2 text-center bg-green-100 text-green-800 font-bold py-1.5 px-2 rounded-lg text-xs">
                              {t.weightLoss}
                            </div>
                          )}
                          <p className="text-gray-700 italic leading-relaxed text-xs flex-grow">‚Äú{t.quote}‚Äù</p>
                          {t.orderId && <p className="text-right text-xs text-green-700/80 mt-2">–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –∑–∞–∫–∞–∑–æ–º ‚Ññ{t.orderId}</p>}
                        </div>
                      </>
                    )}
                  </div>
                );
              })}
            </div>
          </div> */}

// Main render logic
const CurrentPageComponent = ({
  currentStep,
  setCurrentStep,
  showBMIPage,
  selectedGender,
  age,
  height,
  weight,
  setShowBMIPage,
  setSelectedGender,
  setAge,
  setHeight,
  setWeight,
  touched,
  setTouched,
  ageRef,
  heightRef,
  weightRef,
  HEIGHT_MIN,
  HEIGHT_MAX,
  WEIGHT_MIN,
  WEIGHT_MAX,
  isValidHeight,
  isValidWeight,
  miniQuizStep,
  miniQuizAnswers,
  setMiniQuizAnswers,
  setMiniQuizCompleted,
  setMiniQuizStep,
  currentQuizStep,
  showFact,
  showLifestyleSummary,
  showAttemptsSummary,
  eatingProfileSummaryKey,
  isPlanApplied,
  setIsPlanApplied,
  setCurrentQuizStep,
  lifestyleProfileSummaryKey,
  setShowFact,
  setShowLifestyleSummary,
  attemptsProfileSummaryKey,
  setShowAttemptsSummary,
  recordAnswer,
  expandedInsight,
  setExpandedInsight,
  advanceToNextStep,
  setIsInsightAdded,
  showConfirmation,
  getSectionTitle,
  getQuizProgress,
  desiredShape,
  setDesiredShape,
  setAnswers,
  finalGoals,
  setFinalGoals,
  analyzeAnswers,
  answers,
  sendSampleNow,
  setSendSampleNow,
  setIsProcessingOrder,
  isProcessingOrder,
  setOrderDetails,
  orderFormRef,
  orderDetails,
  letterAnswers,
  lastClickedOption,
  setLastClickedOption,
  userPath,
  setUserPath
}) => {
  // --- –ù–ê–ß–ê–õ–û: –ù–û–í–ê–Ø, –ë–û–õ–ï–ï –ù–ê–î–ï–ñ–ù–ê–Ø –õ–û–ì–ò–ö–ê ---

  // –®–∞–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –û–ë–©–ò–ú–ò –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –î–û –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏
  const commonSteps: { [key: number]: () => JSX.Element } = {
    0: () => <LandingPage setCurrentStep={setCurrentStep} />,
    1: () => showBMIPage ? <BMIPage {...{ selectedGender, age, height, weight, setShowBMIPage, setCurrentStep }} /> : <BasicsPage {...{ selectedGender, setSelectedGender, age, setAge, height, setHeight, weight, setWeight, touched, setTouched, setShowBMIPage, ageRef, heightRef, weightRef, HEIGHT_MIN, HEIGHT_MAX, WEIGHT_MIN, WEIGHT_MAX, isValidHeight, isValidWeight }} />,
    2: () => <BodyShapeStep {...{ desiredShape, setDesiredShape, setAnswers, setCurrentStep }} />,
    3: () => <PreQuestionnaireIntroPage setCurrentStep={setCurrentStep} />,
    4: () => <MiniQuestionPage {...{ miniQuizStep, miniQuizAnswers, setMiniQuizAnswers, setMiniQuizCompleted, setCurrentStep, setMiniQuizStep }} />,
    5: () => <PreMainQuizIntroPage setCurrentStep={setCurrentStep} />,
    // –®–∞–≥–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–≤–∏–∑–∞ (6-11)
    6: () => <QuizQuestion {...{ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage: <EatingSummaryPage {...{ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }} />, LifestyleSummaryPage: <LifestyleSummaryPage {...{ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }} />, AttemptsSummaryPage: <AttemptsSummaryPage {...{ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }} />, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }} />,
    7: () => <QuizQuestion {...{ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage: <EatingSummaryPage {...{ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }} />, LifestyleSummaryPage: <LifestyleSummaryPage {...{ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }} />, AttemptsSummaryPage: <AttemptsSummaryPage {...{ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }} />, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }} />,
    8: () => <QuizQuestion {...{ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage: <EatingSummaryPage {...{ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }} />, LifestyleSummaryPage: <LifestyleSummaryPage {...{ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }} />, AttemptsSummaryPage: <AttemptsSummaryPage {...{ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }} />, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }} />,
    9: () => <QuizQuestion {...{ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage: <EatingSummaryPage {...{ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }} />, LifestyleSummaryPage: <LifestyleSummaryPage {...{ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }} />, AttemptsSummaryPage: <AttemptsSummaryPage {...{ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }} />, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }} />,
    10: () => <QuizQuestion {...{ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage: <EatingSummaryPage {...{ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }} />, LifestyleSummaryPage: <LifestyleSummaryPage {...{ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }} />, AttemptsSummaryPage: <AttemptsSummaryPage {...{ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }} />, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }} />,
    11: () => <QuizQuestion {...{ currentQuizStep, showFact, showLifestyleSummary, showAttemptsSummary, EatingSummaryPage: <EatingSummaryPage {...{ eatingProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowFact, setCurrentQuizStep }} />, LifestyleSummaryPage: <LifestyleSummaryPage {...{ lifestyleProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowLifestyleSummary, setCurrentQuizStep }} />, AttemptsSummaryPage: <AttemptsSummaryPage {...{ attemptsProfileSummaryKey, isPlanApplied, setIsPlanApplied, setShowAttemptsSummary, setCurrentStep }} />, recordAnswer, expandedInsight, setExpandedInsight, advanceToNextStep, setIsInsightAdded, showConfirmation, getSectionTitle, getQuizProgress, lastClickedOption, setLastClickedOption }} />,
    12: () => <TransitionPage {...{ finalGoals, setFinalGoals, analyzeAnswers, answers, setCurrentStep }} />,
    14: () => <FinalResultsPage {...{ finalGoals, eatingProfileSummaryKey, lifestyleProfileSummaryKey, attemptsProfileSummaryKey, answers, age, height, weight, desiredShape, miniQuizAnswers, letterAnswers, setCurrentStep, setUserPath }} />
  };

  // 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—É—â–∏–π —à–∞–≥ –≤ –û–ë–©–ò–• —à–∞–≥–∞—Ö
  if (commonSteps[currentStep]) {
    return commonSteps[currentStep]();
  }

  // 2. –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫–æ–π –ü–£–¢–¨ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  // --- –í–ï–¢–ö–ê "–°–ù–ê–ß–ê–õ–ê –ü–õ–ê–ù" ---
  if (userPath === 'plan') {
    const planSteps: { [key: number]: () => JSX.Element } = {
      15: () => <PlanInfoPage
        setCurrentStep={setCurrentStep}
        eatingProfileSummaryKey={eatingProfileSummaryKey}
        lifestyleProfileSummaryKey={lifestyleProfileSummaryKey}
        attemptsProfileSummaryKey={attemptsProfileSummaryKey}
        desiredShape={desiredShape}
        setIsProcessingOrder={setIsProcessingOrder}
        isProcessingOrder={isProcessingOrder}
        setOrderDetails={setOrderDetails}
        variant='simplified'
        answers={answers} // ‚úÖ –î–û–ë–ê–í–ò–õ–ò –≠–¢–£ –°–¢–†–û–ö–£
      />,
      19: () => <PlanThankYouPage
        setCurrentStep={setCurrentStep}
        orderDetails={orderDetails}
        setOrderDetails={setOrderDetails}
      />,
      20: () => <OfferPage {...{ finalGoals, eatingProfileSummaryKey, lifestyleProfileSummaryKey, attemptsProfileSummaryKey, miniQuizAnswers, desiredShape, sendSampleNow, setSendSampleNow, setIsProcessingOrder, isProcessingOrder, setOrderDetails, setCurrentStep, orderFormRef, userPath, variant: 'simplified', orderDetails }} />,
      21: () => <ThankYouPage {...{ orderDetails, setOrderDetails, userPath, variant: 'simplified' }} />
    };
    if (planSteps[currentStep]) {
      return planSteps[currentStep]();
    }
  }

  // --- –í–ï–¢–ö–ê "–°–ù–ê–ß–ê–õ–ê –ö–ê–ü–°–£–õ–´" (–∏–ª–∏ –µ—Å–ª–∏ –ø—É—Ç—å –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω) ---
  if (userPath === 'capsules' || userPath === null) {
    const capsuleSteps: { [key: number]: () => JSX.Element } = {
      16: () => <LoadingPage onComplete={() => setCurrentStep(17)} />,
      17: () => <OfferPage {...{ finalGoals, eatingProfileSummaryKey, lifestyleProfileSummaryKey, attemptsProfileSummaryKey, miniQuizAnswers, desiredShape, sendSampleNow, setSendSampleNow, setIsProcessingOrder, isProcessingOrder, setOrderDetails, setCurrentStep, orderFormRef, userPath, variant: 'full' }} />,
      18: () => <ThankYouPage {...{ orderDetails, setOrderDetails, userPath, variant: 'full' }} />
    };
    if (capsuleSteps[currentStep]) {
      return capsuleSteps[currentStep]();
    }
  }

  // 3. –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—à–∏–±–∫–∞ –≤ –Ω–æ–º–µ—Ä–µ —à–∞–≥–∞),
  // –º—ã –≤–µ—Ä–Ω—ë–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é, –∞ –Ω–µ –ø–æ–∫–∞–∂–µ–º –±–µ–ª—ã–π —ç–∫—Ä–∞–Ω. –≠—Ç–æ –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–æ–∫.
  console.error(`–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: –ù–µ –Ω–∞–π–¥–µ–Ω —à–∞–≥ ${currentStep} –¥–ª—è –ø—É—Ç–∏ "${userPath}"`);
  return <LandingPage setCurrentStep={setCurrentStep} />;
};



export default function WeightLossQuizApp() {

  const [lastClickedOption, setLastClickedOption] = useState<string | null>(null);
  const [userPath, setUserPath] = useState<'capsules' | 'plan' | null>(null);

  const [sendSampleNow, setSendSampleNow] = useState(false);
  const [isCtaVisible, setIsCtaVisible] = useState(false);

  const [showConfirmation, setShowConfirmation] = useState<string | null>(null);

  const [isProcessingOrder, setIsProcessingOrder] = useState(false);

  // –ù–û–í–´–ô –ö–û–î
  const [currentStep, setCurrentStep] = useState(0)
  const [answers, setAnswers] = useState<QuizAnswer[]>([])

  const [selectedGender, setSelectedGender] = useState<string>("")
  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 1: `age` —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ ---
  const [age, setAge] = useState<string | undefined>(undefined)
  const [height, setHeight] = useState<number | undefined>(165) // –ó–∞–¥–∞–¥–∏–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  const [weight, setWeight] = useState<number | undefined>(70)  // –ó–∞–¥–∞–¥–∏–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

  // –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  const [touched, setTouched] = useState({ height: false, weight: false })

  // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï 2: –î–æ–±–∞–≤–ª—è–µ–º "—Å—Å—ã–ª–∫–∏" (refs) –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ-—Ñ–æ–∫—É—Å–∞ ---
  const ageRef = React.useRef<HTMLDivElement>(null);
  const heightRef = React.useRef<HTMLInputElement>(null);
  const weightRef = React.useRef<HTMLInputElement>(null);

  const orderFormRef = React.useRef<HTMLFormElement>(null);

  const [orderDetails, setOrderDetails] = useState<{ name: string, phone: string, email?: string, orderId: string } | null>(null);

  React.useEffect(() => {
    const handleScroll = () => {
      if (orderFormRef.current) {
        const formTop = orderFormRef.current.offsetTop;
        const scrollPosition = window.scrollY + window.innerHeight;
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∫—Ä—É—Ç–∏–ª –¥–æ —Ñ–æ—Ä–º—ã, –Ω–æ –µ—â–µ –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        setIsCtaVisible(scrollPosition > formTop + 200 && scrollPosition < document.body.scrollHeight - 300);
      }
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // –æ—Å—Ç–∞–≤–∏—Ç—å –≤ –∏–Ω–ø—É—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã (–≤—ã—Ä–µ–∑–∞–µ–º –≤—Å—ë –ª–∏—à–Ω–µ–µ)
  const onlyDigits = (s: string) => s.replace(/\D/g, "")

  // --- Validation ranges for BMI step ---
  const AGE_MIN = 18, AGE_MAX = 75
  const HEIGHT_MIN = 140, HEIGHT_MAX = 220
  const WEIGHT_MIN = 40, WEIGHT_MAX = 200

  const isValidAge = (v?: number) =>
    typeof v === "number" && v >= AGE_MIN && v <= AGE_MAX
  const isValidHeight = (v?: number) =>
    typeof v === "number" && v >= HEIGHT_MIN && v <= HEIGHT_MAX
  const isValidWeight = (v?: number) =>
    typeof v === "number" && v >= WEIGHT_MIN && v <= WEIGHT_MAX

  const [showBMIPage, setShowBMIPage] = useState(false)
  const [currentQuizStep, setCurrentQuizStep] = useState(0)

  const [miniQuizStep, setMiniQuizStep] = useState(0)
  const [miniQuizAnswers, setMiniQuizAnswers] = useState<Record<string, string | string[]>>({})
  const [miniQuizCompleted, setMiniQuizCompleted] = useState(false)

  const [showFact, setShowFact] = useState(false)

  // –î–ª—è –Ω–æ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–∏—Ö—Å—è –∏–Ω—Å–∞–π—Ç–æ–≤
  const [expandedInsight, setExpandedInsight] = useState<{ questionId: string; answer: string } | null>(null);
  const [isInsightAdded, setIsInsightAdded] = useState(false);

  // –ö–ª—é—á –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∞–º–º–∞—Ä–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é
  const [eatingProfileSummaryKey, setEatingProfileSummaryKey] = useState<"a" | "b" | "c" | "mixed" | null>(null);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –º–æ–µ–º—É –ø–ª–∞–Ω—É"
  const [isPlanApplied, setIsPlanApplied] = useState(false)

  // –î–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∞–º–º–∞—Ä–∏ (–ø—Ä–æ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏)
  const [showLifestyleSummary, setShowLifestyleSummary] = useState(false);
  const [lifestyleProfileSummaryKey, setLifestyleProfileSummaryKey] = useState<"a" | "b" | "c" | "mixed" | null>(null);

  // –î–ª—è —Ç—Ä–µ—Ç—å–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–∞–º–º–∞—Ä–∏ (–ø—Ä–æ –º–µ—Ç–æ–¥—ã –ø–æ—Ö—É–¥–µ–Ω–∏—è)
  const [showAttemptsSummary, setShowAttemptsSummary] = useState(false);
  const [attemptsProfileSummaryKey, setAttemptsProfileSummaryKey] = useState<"a" | "b" | "c" | "mixed" | null>(null);

  // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –≤–æ–ø—Ä–æ—Å–µ
  const [finalGoals, setFinalGoals] = useState<string[]>([])

  const [letterAnswers, setLetterAnswers] = useState<string[]>([])
  const [desiredShape, setDesiredShape] = useState<string | null>(null)

  // –≠—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è currentStep –ò–õ–ò currentQuizStep
  useEffect(() => {
    window.scrollTo(0, 0);
  }, [currentStep, currentQuizStep, showBMIPage, miniQuizStep, showFact, showLifestyleSummary, showAttemptsSummary]);

  const BODY_SHAPE_STEP = 6

  const totalSteps = 25 // Landing + basics + BMI + 10 quiz questions + explanation + result + loading + offer + thank you
  const progress = (currentStep / totalSteps) * 100

  const getQuizProgress = () => {
    if (currentQuizStep < 3) {
      // Eating section (questions 0-2): 0% to 30%
      return ((currentQuizStep + 1) / 3) * 30
    } else if (currentQuizStep < 7) {
      // Lifestyle section (questions 3-6): 30% to 70%
      return 30 + ((currentQuizStep - 2) / 4) * 40
    } else {
      // Attempts section (questions 7-9): 70% to 100%
      return 70 + ((currentQuizStep - 6) / 3) * 30
    }
  }

  const getSectionTitle = () => {
    if (currentQuizStep < 3) return "–í–∞—à–µ –ø–∏—Ç–∞–Ω–∏–µ"
    if (currentQuizStep < 7) return "–í–∞—à –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏"
    return "–í–∞—à–∏ –º–µ—Ç–æ–¥—ã –ø–æ—Ö—É–¥–µ–Ω–∏—è" // Changed from "–í–∞—à–∏ –ø–æ–ø—ã—Ç–∫–∏"
  }

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Ññ1: –¢–æ–ª—å–∫–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç
  const recordAnswer = (questionId: string, answer: string, category: "eating" | "lifestyle" | "attempts" | "goal", letterOverride?: string) => {
    const newAnswers = [...answers.filter((a) => a.questionId !== questionId), { questionId, answer, category }];
    setAnswers(newAnswers);

    const question = quizQuestions.find(q => q.id === questionId);
    if (!question) return;

    const questionIndexInQuiz = quizQuestions.findIndex(q => q.id === questionId);

    const optionIndex = question.options.findIndex((opt) => opt.text === answer);
    const letter = letterOverride || ["a", "b", "c", "d"][optionIndex] || "a";

    const newLetterAnswers = [...letterAnswers];
    newLetterAnswers[questionIndexInQuiz] = letter;
    setLetterAnswers(newLetterAnswers);
  };

  // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Ññ2: –¢–æ–ª—å–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
  const advanceToNextStep = () => {
    setExpandedInsight(null);
    setIsInsightAdded(false);



    // –õ–æ–≥–∏–∫–∞ –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ "–ü–∏—Ç–∞–Ω–∏–µ" (–≤–æ–ø—Ä–æ—Å 2)
    if (currentQuizStep === 2) {
      const eatingAnswers = letterAnswers.slice(0, 3);
      const finalKey = determineProfileKey(eatingAnswers); // <-- –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–í–£–Æ –õ–û–ì–ò–ö–£
      setEatingProfileSummaryKey(finalKey);
      setShowFact(true);
      return;
    }
    // –õ–æ–≥–∏–∫–∞ –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ "–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏" (–≤–æ–ø—Ä–æ—Å 6)
    else if (currentQuizStep === 6) {
      const lifestyleAnswers = letterAnswers.slice(3, 7);
      const finalKey = determineProfileKey(lifestyleAnswers); // <-- –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–í–£–Æ –õ–û–ì–ò–ö–£
      setLifestyleProfileSummaryKey(finalKey);
      setShowLifestyleSummary(true);
      return;
    }
    // –õ–æ–≥–∏–∫–∞ –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ "–ú–µ—Ç–æ–¥—ã" (–≤–æ–ø—Ä–æ—Å 9)
    else if (currentQuizStep === 9) {
      const attemptsAnswers = letterAnswers.slice(7, 10);
      const finalKey = determineProfileKey(attemptsAnswers); // <-- –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–í–£–Æ –õ–û–ì–ò–ö–£
      setAttemptsProfileSummaryKey(finalKey);
      setShowAttemptsSummary(true);
      return;
    }
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ - –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    else {
      setCurrentQuizStep(currentQuizStep + 1);
    }
  };


  const analyzeAnswers = (allAnswers: QuizAnswer[]) => {
    const eatingAnswers = allAnswers.filter((a) => a.category === "eating")
    const lifestyleAnswers = allAnswers.filter((a) => a.category === "lifestyle")
    const attemptsAnswers = allAnswers.filter((a) => a.category === "attempts")

    // Simple logic to determine profile
    const stressEating = eatingAnswers.some((a) => a.answer.includes("–≤–∏–Ω—É") || a.answer.includes("—Ç—è–∂–µ—Å—Ç—å"))
    const highStress = lifestyleAnswers.some((a) => a.answer.includes("–í—ã—Å–æ–∫–∏–π") || a.answer.includes("–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π"))
    const multipleAttempts = attemptsAnswers.some((a) => a.answer.includes("–ú–Ω–æ–≥–æ —Ä–∞–∑") || a.answer.includes("3-5"))

  }

  const onSelectAnswer = (q: Question, optionText: string) => {
    const insight = attemptInsights[q.id]?.[optionText];

    // –ï—Å–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –µ—Å—Ç—å –∏–Ω—Å–∞–π—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
    if (insight) {
      setExpandedInsight({ questionId: q.id, answer: optionText });
      setIsInsightAdded(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–ª–∞–Ω"
    } else {
      // –ï—Å–ª–∏ –∏–Ω—Å–∞–π—Ç–∞ –Ω–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è 4-–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞), —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ —Å—Ç–∞—Ä–æ–π —Å—Ö–µ–º–µ
      handleAnswer(q.id, optionText, q.category);
    }
  };

  return (
    <>
      <CurrentPageComponent
        currentStep={currentStep}
        setCurrentStep={setCurrentStep}
        showBMIPage={showBMIPage}
        selectedGender={selectedGender}
        age={age}
        height={height}
        weight={weight}
        setShowBMIPage={setShowBMIPage}
        setSelectedGender={setSelectedGender}
        setAge={setAge}
        setHeight={setHeight}
        setWeight={setWeight}
        touched={touched}
        setTouched={setTouched}
        ageRef={ageRef}
        heightRef={heightRef}
        weightRef={weightRef}
        HEIGHT_MIN={HEIGHT_MIN}
        HEIGHT_MAX={HEIGHT_MAX}
        WEIGHT_MIN={WEIGHT_MIN}
        WEIGHT_MAX={WEIGHT_MAX}
        isValidHeight={isValidHeight}
        isValidWeight={isValidWeight}
        BODY_SHAPE_STEP={BODY_SHAPE_STEP}
        miniQuizStep={miniQuizStep}
        miniQuizAnswers={miniQuizAnswers}
        setMiniQuizAnswers={setMiniQuizAnswers}
        setMiniQuizCompleted={setMiniQuizCompleted}
        setMiniQuizStep={setMiniQuizStep}
        currentQuizStep={currentQuizStep}
        showFact={showFact}
        showLifestyleSummary={showLifestyleSummary}
        showAttemptsSummary={showAttemptsSummary}
        eatingProfileSummaryKey={eatingProfileSummaryKey}
        isPlanApplied={isPlanApplied}
        setIsPlanApplied={setIsPlanApplied}
        setCurrentQuizStep={setCurrentQuizStep}
        lifestyleProfileSummaryKey={lifestyleProfileSummaryKey}
        setShowFact={setShowFact}
        setShowLifestyleSummary={setShowLifestyleSummary}
        attemptsProfileSummaryKey={attemptsProfileSummaryKey}
        setShowAttemptsSummary={setShowAttemptsSummary}
        recordAnswer={recordAnswer}
        expandedInsight={expandedInsight}
        setExpandedInsight={setExpandedInsight}
        advanceToNextStep={advanceToNextStep}
        setIsInsightAdded={setIsInsightAdded}
        showConfirmation={showConfirmation}
        getSectionTitle={getSectionTitle}
        getQuizProgress={getQuizProgress}
        desiredShape={desiredShape}
        setDesiredShape={setDesiredShape}
        setAnswers={setAnswers}
        finalGoals={finalGoals}
        setFinalGoals={setFinalGoals}
        analyzeAnswers={analyzeAnswers}
        answers={answers}
        sendSampleNow={sendSampleNow}
        setSendSampleNow={setSendSampleNow}
        setIsProcessingOrder={setIsProcessingOrder}
        isProcessingOrder={isProcessingOrder}
        setOrderDetails={setOrderDetails}
        orderFormRef={orderFormRef}
        orderDetails={orderDetails}
        letterAnswers={letterAnswers}
        lastClickedOption={lastClickedOption}
        userPath={userPath}
        setUserPath={setUserPath}
        setLastClickedOption={setLastClickedOption} />
      {![0, 1, 3, 16, 18].includes(currentStep) && <ScrollFade />}
      <StickyCta
        isVisible={isCtaVisible && (currentStep === 17 || currentStep === 20)}
        variant={currentStep === 17 ? 'full' : 'simplified'}
      />
    </>
  );
};